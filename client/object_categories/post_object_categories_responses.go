// Code generated by go-swagger; DO NOT EDIT.

package object_categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostObjectCategoriesReader is a Reader for the PostObjectCategories structure.
type PostObjectCategoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostObjectCategoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostObjectCategoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostObjectCategoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostObjectCategoriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostObjectCategoriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostObjectCategoriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostObjectCategoriesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostObjectCategoriesGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostObjectCategoriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostObjectCategoriesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostObjectCategoriesOK creates a PostObjectCategoriesOK with default headers values
func NewPostObjectCategoriesOK() *PostObjectCategoriesOK {
	return &PostObjectCategoriesOK{}
}

/*PostObjectCategoriesOK handles this case with default header values.

The above command returns results like this:
*/
type PostObjectCategoriesOK struct {
	Payload *PostObjectCategoriesOKBody
}

func (o *PostObjectCategoriesOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesOK  %+v", 200, o.Payload)
}

func (o *PostObjectCategoriesOK) GetPayload() *PostObjectCategoriesOKBody {
	return o.Payload
}

func (o *PostObjectCategoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostObjectCategoriesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostObjectCategoriesBadRequest creates a PostObjectCategoriesBadRequest with default headers values
func NewPostObjectCategoriesBadRequest() *PostObjectCategoriesBadRequest {
	return &PostObjectCategoriesBadRequest{}
}

/*PostObjectCategoriesBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostObjectCategoriesBadRequest struct {
}

func (o *PostObjectCategoriesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesBadRequest ", 400)
}

func (o *PostObjectCategoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostObjectCategoriesUnauthorized creates a PostObjectCategoriesUnauthorized with default headers values
func NewPostObjectCategoriesUnauthorized() *PostObjectCategoriesUnauthorized {
	return &PostObjectCategoriesUnauthorized{}
}

/*PostObjectCategoriesUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostObjectCategoriesUnauthorized struct {
}

func (o *PostObjectCategoriesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesUnauthorized ", 401)
}

func (o *PostObjectCategoriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostObjectCategoriesForbidden creates a PostObjectCategoriesForbidden with default headers values
func NewPostObjectCategoriesForbidden() *PostObjectCategoriesForbidden {
	return &PostObjectCategoriesForbidden{}
}

/*PostObjectCategoriesForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostObjectCategoriesForbidden struct {
}

func (o *PostObjectCategoriesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesForbidden ", 403)
}

func (o *PostObjectCategoriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostObjectCategoriesNotFound creates a PostObjectCategoriesNotFound with default headers values
func NewPostObjectCategoriesNotFound() *PostObjectCategoriesNotFound {
	return &PostObjectCategoriesNotFound{}
}

/*PostObjectCategoriesNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostObjectCategoriesNotFound struct {
}

func (o *PostObjectCategoriesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesNotFound ", 404)
}

func (o *PostObjectCategoriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostObjectCategoriesMethodNotAllowed creates a PostObjectCategoriesMethodNotAllowed with default headers values
func NewPostObjectCategoriesMethodNotAllowed() *PostObjectCategoriesMethodNotAllowed {
	return &PostObjectCategoriesMethodNotAllowed{}
}

/*PostObjectCategoriesMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostObjectCategoriesMethodNotAllowed struct {
}

func (o *PostObjectCategoriesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesMethodNotAllowed ", 405)
}

func (o *PostObjectCategoriesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostObjectCategoriesGone creates a PostObjectCategoriesGone with default headers values
func NewPostObjectCategoriesGone() *PostObjectCategoriesGone {
	return &PostObjectCategoriesGone{}
}

/*PostObjectCategoriesGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostObjectCategoriesGone struct {
}

func (o *PostObjectCategoriesGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesGone ", 410)
}

func (o *PostObjectCategoriesGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostObjectCategoriesInternalServerError creates a PostObjectCategoriesInternalServerError with default headers values
func NewPostObjectCategoriesInternalServerError() *PostObjectCategoriesInternalServerError {
	return &PostObjectCategoriesInternalServerError{}
}

/*PostObjectCategoriesInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostObjectCategoriesInternalServerError struct {
}

func (o *PostObjectCategoriesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesInternalServerError ", 500)
}

func (o *PostObjectCategoriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostObjectCategoriesServiceUnavailable creates a PostObjectCategoriesServiceUnavailable with default headers values
func NewPostObjectCategoriesServiceUnavailable() *PostObjectCategoriesServiceUnavailable {
	return &PostObjectCategoriesServiceUnavailable{}
}

/*PostObjectCategoriesServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostObjectCategoriesServiceUnavailable struct {
}

func (o *PostObjectCategoriesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/object_categories/][%d] postObjectCategoriesServiceUnavailable ", 503)
}

func (o *PostObjectCategoriesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostObjectCategoriesOKBody post object categories o k body
swagger:model PostObjectCategoriesOKBody
*/
type PostObjectCategoriesOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post object categories o k body
func (o *PostObjectCategoriesOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostObjectCategoriesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostObjectCategoriesOKBody) UnmarshalBinary(b []byte) error {
	var res PostObjectCategoriesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
