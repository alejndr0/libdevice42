// Code generated by go-swagger; DO NOT EDIT.

package patch_panels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPatchPanelPortsPatchPanelIDParams creates a new GetPatchPanelPortsPatchPanelIDParams object
// with the default values initialized.
func NewGetPatchPanelPortsPatchPanelIDParams() *GetPatchPanelPortsPatchPanelIDParams {
	var ()
	return &GetPatchPanelPortsPatchPanelIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPatchPanelPortsPatchPanelIDParamsWithTimeout creates a new GetPatchPanelPortsPatchPanelIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPatchPanelPortsPatchPanelIDParamsWithTimeout(timeout time.Duration) *GetPatchPanelPortsPatchPanelIDParams {
	var ()
	return &GetPatchPanelPortsPatchPanelIDParams{

		timeout: timeout,
	}
}

// NewGetPatchPanelPortsPatchPanelIDParamsWithContext creates a new GetPatchPanelPortsPatchPanelIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPatchPanelPortsPatchPanelIDParamsWithContext(ctx context.Context) *GetPatchPanelPortsPatchPanelIDParams {
	var ()
	return &GetPatchPanelPortsPatchPanelIDParams{

		Context: ctx,
	}
}

// NewGetPatchPanelPortsPatchPanelIDParamsWithHTTPClient creates a new GetPatchPanelPortsPatchPanelIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPatchPanelPortsPatchPanelIDParamsWithHTTPClient(client *http.Client) *GetPatchPanelPortsPatchPanelIDParams {
	var ()
	return &GetPatchPanelPortsPatchPanelIDParams{
		HTTPClient: client,
	}
}

/*GetPatchPanelPortsPatchPanelIDParams contains all the parameters to send to the API endpoint
for the get patch panel ports patch panel id operation typically these are written to a http.Request
*/
type GetPatchPanelPortsPatchPanelIDParams struct {

	/*PatchPanelID
	  Patch panel id

	*/
	PatchPanelID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get patch panel ports patch panel id params
func (o *GetPatchPanelPortsPatchPanelIDParams) WithTimeout(timeout time.Duration) *GetPatchPanelPortsPatchPanelIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get patch panel ports patch panel id params
func (o *GetPatchPanelPortsPatchPanelIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get patch panel ports patch panel id params
func (o *GetPatchPanelPortsPatchPanelIDParams) WithContext(ctx context.Context) *GetPatchPanelPortsPatchPanelIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get patch panel ports patch panel id params
func (o *GetPatchPanelPortsPatchPanelIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get patch panel ports patch panel id params
func (o *GetPatchPanelPortsPatchPanelIDParams) WithHTTPClient(client *http.Client) *GetPatchPanelPortsPatchPanelIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get patch panel ports patch panel id params
func (o *GetPatchPanelPortsPatchPanelIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPatchPanelID adds the patchPanelID to the get patch panel ports patch panel id params
func (o *GetPatchPanelPortsPatchPanelIDParams) WithPatchPanelID(patchPanelID int64) *GetPatchPanelPortsPatchPanelIDParams {
	o.SetPatchPanelID(patchPanelID)
	return o
}

// SetPatchPanelID adds the patchPanelId to the get patch panel ports patch panel id params
func (o *GetPatchPanelPortsPatchPanelIDParams) SetPatchPanelID(patchPanelID int64) {
	o.PatchPanelID = patchPanelID
}

// WriteToRequest writes these params to a swagger request
func (o *GetPatchPanelPortsPatchPanelIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param patch_panel_id
	if err := r.SetPathParam("patch_panel_id", swag.FormatInt64(o.PatchPanelID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
