// Code generated by go-swagger; DO NOT EDIT.

package patch_panels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetPatchPanelPortsPatchPanelIDReader is a Reader for the GetPatchPanelPortsPatchPanelID structure.
type GetPatchPanelPortsPatchPanelIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPatchPanelPortsPatchPanelIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPatchPanelPortsPatchPanelIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPatchPanelPortsPatchPanelIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPatchPanelPortsPatchPanelIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPatchPanelPortsPatchPanelIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPatchPanelPortsPatchPanelIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetPatchPanelPortsPatchPanelIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetPatchPanelPortsPatchPanelIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPatchPanelPortsPatchPanelIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPatchPanelPortsPatchPanelIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPatchPanelPortsPatchPanelIDOK creates a GetPatchPanelPortsPatchPanelIDOK with default headers values
func NewGetPatchPanelPortsPatchPanelIDOK() *GetPatchPanelPortsPatchPanelIDOK {
	return &GetPatchPanelPortsPatchPanelIDOK{}
}

/*GetPatchPanelPortsPatchPanelIDOK handles this case with default header values.

The above command returns results like this:
*/
type GetPatchPanelPortsPatchPanelIDOK struct {
	Payload []*GetPatchPanelPortsPatchPanelIDOKBodyItems0
}

func (o *GetPatchPanelPortsPatchPanelIDOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdOK  %+v", 200, o.Payload)
}

func (o *GetPatchPanelPortsPatchPanelIDOK) GetPayload() []*GetPatchPanelPortsPatchPanelIDOKBodyItems0 {
	return o.Payload
}

func (o *GetPatchPanelPortsPatchPanelIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPatchPanelPortsPatchPanelIDBadRequest creates a GetPatchPanelPortsPatchPanelIDBadRequest with default headers values
func NewGetPatchPanelPortsPatchPanelIDBadRequest() *GetPatchPanelPortsPatchPanelIDBadRequest {
	return &GetPatchPanelPortsPatchPanelIDBadRequest{}
}

/*GetPatchPanelPortsPatchPanelIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetPatchPanelPortsPatchPanelIDBadRequest struct {
}

func (o *GetPatchPanelPortsPatchPanelIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdBadRequest ", 400)
}

func (o *GetPatchPanelPortsPatchPanelIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPatchPanelPortsPatchPanelIDUnauthorized creates a GetPatchPanelPortsPatchPanelIDUnauthorized with default headers values
func NewGetPatchPanelPortsPatchPanelIDUnauthorized() *GetPatchPanelPortsPatchPanelIDUnauthorized {
	return &GetPatchPanelPortsPatchPanelIDUnauthorized{}
}

/*GetPatchPanelPortsPatchPanelIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetPatchPanelPortsPatchPanelIDUnauthorized struct {
}

func (o *GetPatchPanelPortsPatchPanelIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdUnauthorized ", 401)
}

func (o *GetPatchPanelPortsPatchPanelIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPatchPanelPortsPatchPanelIDForbidden creates a GetPatchPanelPortsPatchPanelIDForbidden with default headers values
func NewGetPatchPanelPortsPatchPanelIDForbidden() *GetPatchPanelPortsPatchPanelIDForbidden {
	return &GetPatchPanelPortsPatchPanelIDForbidden{}
}

/*GetPatchPanelPortsPatchPanelIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetPatchPanelPortsPatchPanelIDForbidden struct {
}

func (o *GetPatchPanelPortsPatchPanelIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdForbidden ", 403)
}

func (o *GetPatchPanelPortsPatchPanelIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPatchPanelPortsPatchPanelIDNotFound creates a GetPatchPanelPortsPatchPanelIDNotFound with default headers values
func NewGetPatchPanelPortsPatchPanelIDNotFound() *GetPatchPanelPortsPatchPanelIDNotFound {
	return &GetPatchPanelPortsPatchPanelIDNotFound{}
}

/*GetPatchPanelPortsPatchPanelIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetPatchPanelPortsPatchPanelIDNotFound struct {
}

func (o *GetPatchPanelPortsPatchPanelIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdNotFound ", 404)
}

func (o *GetPatchPanelPortsPatchPanelIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPatchPanelPortsPatchPanelIDMethodNotAllowed creates a GetPatchPanelPortsPatchPanelIDMethodNotAllowed with default headers values
func NewGetPatchPanelPortsPatchPanelIDMethodNotAllowed() *GetPatchPanelPortsPatchPanelIDMethodNotAllowed {
	return &GetPatchPanelPortsPatchPanelIDMethodNotAllowed{}
}

/*GetPatchPanelPortsPatchPanelIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetPatchPanelPortsPatchPanelIDMethodNotAllowed struct {
}

func (o *GetPatchPanelPortsPatchPanelIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdMethodNotAllowed ", 405)
}

func (o *GetPatchPanelPortsPatchPanelIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPatchPanelPortsPatchPanelIDGone creates a GetPatchPanelPortsPatchPanelIDGone with default headers values
func NewGetPatchPanelPortsPatchPanelIDGone() *GetPatchPanelPortsPatchPanelIDGone {
	return &GetPatchPanelPortsPatchPanelIDGone{}
}

/*GetPatchPanelPortsPatchPanelIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetPatchPanelPortsPatchPanelIDGone struct {
}

func (o *GetPatchPanelPortsPatchPanelIDGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdGone ", 410)
}

func (o *GetPatchPanelPortsPatchPanelIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPatchPanelPortsPatchPanelIDInternalServerError creates a GetPatchPanelPortsPatchPanelIDInternalServerError with default headers values
func NewGetPatchPanelPortsPatchPanelIDInternalServerError() *GetPatchPanelPortsPatchPanelIDInternalServerError {
	return &GetPatchPanelPortsPatchPanelIDInternalServerError{}
}

/*GetPatchPanelPortsPatchPanelIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetPatchPanelPortsPatchPanelIDInternalServerError struct {
}

func (o *GetPatchPanelPortsPatchPanelIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdInternalServerError ", 500)
}

func (o *GetPatchPanelPortsPatchPanelIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPatchPanelPortsPatchPanelIDServiceUnavailable creates a GetPatchPanelPortsPatchPanelIDServiceUnavailable with default headers values
func NewGetPatchPanelPortsPatchPanelIDServiceUnavailable() *GetPatchPanelPortsPatchPanelIDServiceUnavailable {
	return &GetPatchPanelPortsPatchPanelIDServiceUnavailable{}
}

/*GetPatchPanelPortsPatchPanelIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetPatchPanelPortsPatchPanelIDServiceUnavailable struct {
}

func (o *GetPatchPanelPortsPatchPanelIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/patch_panel_ports/{patch_panel_id}/][%d] getPatchPanelPortsPatchPanelIdServiceUnavailable ", 503)
}

func (o *GetPatchPanelPortsPatchPanelIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetPatchPanelPortsPatchPanelIDOKBodyItems0 get patch panel ports patch panel ID o k body items0
swagger:model GetPatchPanelPortsPatchPanelIDOKBodyItems0
*/
type GetPatchPanelPortsPatchPanelIDOKBodyItems0 struct {

	// name
	Name interface{} `json:"name,omitempty"`

	// ppport id
	PpportID interface{} `json:"ppport_id,omitempty"`
}

// Validate validates this get patch panel ports patch panel ID o k body items0
func (o *GetPatchPanelPortsPatchPanelIDOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPatchPanelPortsPatchPanelIDOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPatchPanelPortsPatchPanelIDOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetPatchPanelPortsPatchPanelIDOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
