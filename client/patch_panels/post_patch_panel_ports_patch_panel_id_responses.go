// Code generated by go-swagger; DO NOT EDIT.

package patch_panels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostPatchPanelPortsPatchPanelIDReader is a Reader for the PostPatchPanelPortsPatchPanelID structure.
type PostPatchPanelPortsPatchPanelIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPatchPanelPortsPatchPanelIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPatchPanelPortsPatchPanelIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPatchPanelPortsPatchPanelIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostPatchPanelPortsPatchPanelIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostPatchPanelPortsPatchPanelIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostPatchPanelPortsPatchPanelIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostPatchPanelPortsPatchPanelIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostPatchPanelPortsPatchPanelIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPatchPanelPortsPatchPanelIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostPatchPanelPortsPatchPanelIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPatchPanelPortsPatchPanelIDOK creates a PostPatchPanelPortsPatchPanelIDOK with default headers values
func NewPostPatchPanelPortsPatchPanelIDOK() *PostPatchPanelPortsPatchPanelIDOK {
	return &PostPatchPanelPortsPatchPanelIDOK{}
}

/*PostPatchPanelPortsPatchPanelIDOK handles this case with default header values.

The above command returns results like this:
*/
type PostPatchPanelPortsPatchPanelIDOK struct {
	Payload []*PostPatchPanelPortsPatchPanelIDOKBodyItems0
}

func (o *PostPatchPanelPortsPatchPanelIDOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdOK  %+v", 200, o.Payload)
}

func (o *PostPatchPanelPortsPatchPanelIDOK) GetPayload() []*PostPatchPanelPortsPatchPanelIDOKBodyItems0 {
	return o.Payload
}

func (o *PostPatchPanelPortsPatchPanelIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPatchPanelPortsPatchPanelIDBadRequest creates a PostPatchPanelPortsPatchPanelIDBadRequest with default headers values
func NewPostPatchPanelPortsPatchPanelIDBadRequest() *PostPatchPanelPortsPatchPanelIDBadRequest {
	return &PostPatchPanelPortsPatchPanelIDBadRequest{}
}

/*PostPatchPanelPortsPatchPanelIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostPatchPanelPortsPatchPanelIDBadRequest struct {
}

func (o *PostPatchPanelPortsPatchPanelIDBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdBadRequest ", 400)
}

func (o *PostPatchPanelPortsPatchPanelIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPatchPanelPortsPatchPanelIDUnauthorized creates a PostPatchPanelPortsPatchPanelIDUnauthorized with default headers values
func NewPostPatchPanelPortsPatchPanelIDUnauthorized() *PostPatchPanelPortsPatchPanelIDUnauthorized {
	return &PostPatchPanelPortsPatchPanelIDUnauthorized{}
}

/*PostPatchPanelPortsPatchPanelIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostPatchPanelPortsPatchPanelIDUnauthorized struct {
}

func (o *PostPatchPanelPortsPatchPanelIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdUnauthorized ", 401)
}

func (o *PostPatchPanelPortsPatchPanelIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPatchPanelPortsPatchPanelIDForbidden creates a PostPatchPanelPortsPatchPanelIDForbidden with default headers values
func NewPostPatchPanelPortsPatchPanelIDForbidden() *PostPatchPanelPortsPatchPanelIDForbidden {
	return &PostPatchPanelPortsPatchPanelIDForbidden{}
}

/*PostPatchPanelPortsPatchPanelIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostPatchPanelPortsPatchPanelIDForbidden struct {
}

func (o *PostPatchPanelPortsPatchPanelIDForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdForbidden ", 403)
}

func (o *PostPatchPanelPortsPatchPanelIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPatchPanelPortsPatchPanelIDNotFound creates a PostPatchPanelPortsPatchPanelIDNotFound with default headers values
func NewPostPatchPanelPortsPatchPanelIDNotFound() *PostPatchPanelPortsPatchPanelIDNotFound {
	return &PostPatchPanelPortsPatchPanelIDNotFound{}
}

/*PostPatchPanelPortsPatchPanelIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostPatchPanelPortsPatchPanelIDNotFound struct {
}

func (o *PostPatchPanelPortsPatchPanelIDNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdNotFound ", 404)
}

func (o *PostPatchPanelPortsPatchPanelIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPatchPanelPortsPatchPanelIDMethodNotAllowed creates a PostPatchPanelPortsPatchPanelIDMethodNotAllowed with default headers values
func NewPostPatchPanelPortsPatchPanelIDMethodNotAllowed() *PostPatchPanelPortsPatchPanelIDMethodNotAllowed {
	return &PostPatchPanelPortsPatchPanelIDMethodNotAllowed{}
}

/*PostPatchPanelPortsPatchPanelIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostPatchPanelPortsPatchPanelIDMethodNotAllowed struct {
}

func (o *PostPatchPanelPortsPatchPanelIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdMethodNotAllowed ", 405)
}

func (o *PostPatchPanelPortsPatchPanelIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPatchPanelPortsPatchPanelIDGone creates a PostPatchPanelPortsPatchPanelIDGone with default headers values
func NewPostPatchPanelPortsPatchPanelIDGone() *PostPatchPanelPortsPatchPanelIDGone {
	return &PostPatchPanelPortsPatchPanelIDGone{}
}

/*PostPatchPanelPortsPatchPanelIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostPatchPanelPortsPatchPanelIDGone struct {
}

func (o *PostPatchPanelPortsPatchPanelIDGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdGone ", 410)
}

func (o *PostPatchPanelPortsPatchPanelIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPatchPanelPortsPatchPanelIDInternalServerError creates a PostPatchPanelPortsPatchPanelIDInternalServerError with default headers values
func NewPostPatchPanelPortsPatchPanelIDInternalServerError() *PostPatchPanelPortsPatchPanelIDInternalServerError {
	return &PostPatchPanelPortsPatchPanelIDInternalServerError{}
}

/*PostPatchPanelPortsPatchPanelIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostPatchPanelPortsPatchPanelIDInternalServerError struct {
}

func (o *PostPatchPanelPortsPatchPanelIDInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdInternalServerError ", 500)
}

func (o *PostPatchPanelPortsPatchPanelIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPatchPanelPortsPatchPanelIDServiceUnavailable creates a PostPatchPanelPortsPatchPanelIDServiceUnavailable with default headers values
func NewPostPatchPanelPortsPatchPanelIDServiceUnavailable() *PostPatchPanelPortsPatchPanelIDServiceUnavailable {
	return &PostPatchPanelPortsPatchPanelIDServiceUnavailable{}
}

/*PostPatchPanelPortsPatchPanelIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostPatchPanelPortsPatchPanelIDServiceUnavailable struct {
}

func (o *PostPatchPanelPortsPatchPanelIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/patch_panel_ports/][%d] postPatchPanelPortsPatchPanelIdServiceUnavailable ", 503)
}

func (o *PostPatchPanelPortsPatchPanelIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostPatchPanelPortsPatchPanelIDOKBodyItems0 post patch panel ports patch panel ID o k body items0
swagger:model PostPatchPanelPortsPatchPanelIDOKBodyItems0
*/
type PostPatchPanelPortsPatchPanelIDOKBodyItems0 struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post patch panel ports patch panel ID o k body items0
func (o *PostPatchPanelPortsPatchPanelIDOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostPatchPanelPortsPatchPanelIDOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostPatchPanelPortsPatchPanelIDOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res PostPatchPanelPortsPatchPanelIDOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
