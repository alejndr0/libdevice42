// Code generated by go-swagger; DO NOT EDIT.

package patch_panels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostPatchPanelModuleModelsParams creates a new PostPatchPanelModuleModelsParams object
// with the default values initialized.
func NewPostPatchPanelModuleModelsParams() *PostPatchPanelModuleModelsParams {
	var ()
	return &PostPatchPanelModuleModelsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostPatchPanelModuleModelsParamsWithTimeout creates a new PostPatchPanelModuleModelsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostPatchPanelModuleModelsParamsWithTimeout(timeout time.Duration) *PostPatchPanelModuleModelsParams {
	var ()
	return &PostPatchPanelModuleModelsParams{

		timeout: timeout,
	}
}

// NewPostPatchPanelModuleModelsParamsWithContext creates a new PostPatchPanelModuleModelsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostPatchPanelModuleModelsParamsWithContext(ctx context.Context) *PostPatchPanelModuleModelsParams {
	var ()
	return &PostPatchPanelModuleModelsParams{

		Context: ctx,
	}
}

// NewPostPatchPanelModuleModelsParamsWithHTTPClient creates a new PostPatchPanelModuleModelsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostPatchPanelModuleModelsParamsWithHTTPClient(client *http.Client) *PostPatchPanelModuleModelsParams {
	var ()
	return &PostPatchPanelModuleModelsParams{
		HTTPClient: client,
	}
}

/*PostPatchPanelModuleModelsParams contains all the parameters to send to the API endpoint
for the post patch panel module models operation typically these are written to a http.Request
*/
type PostPatchPanelModuleModelsParams struct {

	/*Name
	  Name of the patch panel module model you want to edit or create.

	*/
	Name *string
	/*NumberOfPorts
	  number of ports. required for creating a new patch panel type singular. Ignored for patch panel type modular

	*/
	NumberOfPorts *string
	/*NumberOfPortsInRow
	  number of ports in a row. required for creating a new patch panel type singular. Ignored for patch panel type modular

	*/
	NumberOfPortsInRow *string
	/*PairedPorts*/
	PairedPorts *string
	/*PatchPanelModuleModelID*/
	PatchPanelModuleModelID *string
	/*PortType
	  name of the port type. created if it doesn't exist already

	*/
	PortType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithTimeout(timeout time.Duration) *PostPatchPanelModuleModelsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithContext(ctx context.Context) *PostPatchPanelModuleModelsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithHTTPClient(client *http.Client) *PostPatchPanelModuleModelsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithName(name *string) *PostPatchPanelModuleModelsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetName(name *string) {
	o.Name = name
}

// WithNumberOfPorts adds the numberOfPorts to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithNumberOfPorts(numberOfPorts *string) *PostPatchPanelModuleModelsParams {
	o.SetNumberOfPorts(numberOfPorts)
	return o
}

// SetNumberOfPorts adds the numberOfPorts to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetNumberOfPorts(numberOfPorts *string) {
	o.NumberOfPorts = numberOfPorts
}

// WithNumberOfPortsInRow adds the numberOfPortsInRow to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithNumberOfPortsInRow(numberOfPortsInRow *string) *PostPatchPanelModuleModelsParams {
	o.SetNumberOfPortsInRow(numberOfPortsInRow)
	return o
}

// SetNumberOfPortsInRow adds the numberOfPortsInRow to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetNumberOfPortsInRow(numberOfPortsInRow *string) {
	o.NumberOfPortsInRow = numberOfPortsInRow
}

// WithPairedPorts adds the pairedPorts to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithPairedPorts(pairedPorts *string) *PostPatchPanelModuleModelsParams {
	o.SetPairedPorts(pairedPorts)
	return o
}

// SetPairedPorts adds the pairedPorts to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetPairedPorts(pairedPorts *string) {
	o.PairedPorts = pairedPorts
}

// WithPatchPanelModuleModelID adds the patchPanelModuleModelID to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithPatchPanelModuleModelID(patchPanelModuleModelID *string) *PostPatchPanelModuleModelsParams {
	o.SetPatchPanelModuleModelID(patchPanelModuleModelID)
	return o
}

// SetPatchPanelModuleModelID adds the patchPanelModuleModelId to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetPatchPanelModuleModelID(patchPanelModuleModelID *string) {
	o.PatchPanelModuleModelID = patchPanelModuleModelID
}

// WithPortType adds the portType to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) WithPortType(portType *string) *PostPatchPanelModuleModelsParams {
	o.SetPortType(portType)
	return o
}

// SetPortType adds the portType to the post patch panel module models params
func (o *PostPatchPanelModuleModelsParams) SetPortType(portType *string) {
	o.PortType = portType
}

// WriteToRequest writes these params to a swagger request
func (o *PostPatchPanelModuleModelsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Name != nil {

		// form param name
		var frName string
		if o.Name != nil {
			frName = *o.Name
		}
		fName := frName
		if fName != "" {
			if err := r.SetFormParam("name", fName); err != nil {
				return err
			}
		}

	}

	if o.NumberOfPorts != nil {

		// form param number_of_ports
		var frNumberOfPorts string
		if o.NumberOfPorts != nil {
			frNumberOfPorts = *o.NumberOfPorts
		}
		fNumberOfPorts := frNumberOfPorts
		if fNumberOfPorts != "" {
			if err := r.SetFormParam("number_of_ports", fNumberOfPorts); err != nil {
				return err
			}
		}

	}

	if o.NumberOfPortsInRow != nil {

		// form param number_of_ports_in_row
		var frNumberOfPortsInRow string
		if o.NumberOfPortsInRow != nil {
			frNumberOfPortsInRow = *o.NumberOfPortsInRow
		}
		fNumberOfPortsInRow := frNumberOfPortsInRow
		if fNumberOfPortsInRow != "" {
			if err := r.SetFormParam("number_of_ports_in_row", fNumberOfPortsInRow); err != nil {
				return err
			}
		}

	}

	if o.PairedPorts != nil {

		// form param paired_ports
		var frPairedPorts string
		if o.PairedPorts != nil {
			frPairedPorts = *o.PairedPorts
		}
		fPairedPorts := frPairedPorts
		if fPairedPorts != "" {
			if err := r.SetFormParam("paired_ports", fPairedPorts); err != nil {
				return err
			}
		}

	}

	if o.PatchPanelModuleModelID != nil {

		// form param patch_panel_module_model_id
		var frPatchPanelModuleModelID string
		if o.PatchPanelModuleModelID != nil {
			frPatchPanelModuleModelID = *o.PatchPanelModuleModelID
		}
		fPatchPanelModuleModelID := frPatchPanelModuleModelID
		if fPatchPanelModuleModelID != "" {
			if err := r.SetFormParam("patch_panel_module_model_id", fPatchPanelModuleModelID); err != nil {
				return err
			}
		}

	}

	if o.PortType != nil {

		// form param port_type
		var frPortType string
		if o.PortType != nil {
			frPortType = *o.PortType
		}
		fPortType := frPortType
		if fPortType != "" {
			if err := r.SetFormParam("port_type", fPortType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
