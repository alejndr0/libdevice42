// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostDeviceURLReader is a Reader for the PostDeviceURL structure.
type PostDeviceURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDeviceURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDeviceURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDeviceURLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDeviceURLUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDeviceURLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDeviceURLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostDeviceURLMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostDeviceURLGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDeviceURLInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostDeviceURLServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDeviceURLOK creates a PostDeviceURLOK with default headers values
func NewPostDeviceURLOK() *PostDeviceURLOK {
	return &PostDeviceURLOK{}
}

/*PostDeviceURLOK handles this case with default header values.

The above command returns results like this:
*/
type PostDeviceURLOK struct {
	Payload *PostDeviceURLOKBody
}

func (o *PostDeviceURLOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlOK  %+v", 200, o.Payload)
}

func (o *PostDeviceURLOK) GetPayload() *PostDeviceURLOKBody {
	return o.Payload
}

func (o *PostDeviceURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostDeviceURLOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDeviceURLBadRequest creates a PostDeviceURLBadRequest with default headers values
func NewPostDeviceURLBadRequest() *PostDeviceURLBadRequest {
	return &PostDeviceURLBadRequest{}
}

/*PostDeviceURLBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostDeviceURLBadRequest struct {
}

func (o *PostDeviceURLBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlBadRequest ", 400)
}

func (o *PostDeviceURLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceURLUnauthorized creates a PostDeviceURLUnauthorized with default headers values
func NewPostDeviceURLUnauthorized() *PostDeviceURLUnauthorized {
	return &PostDeviceURLUnauthorized{}
}

/*PostDeviceURLUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostDeviceURLUnauthorized struct {
}

func (o *PostDeviceURLUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlUnauthorized ", 401)
}

func (o *PostDeviceURLUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceURLForbidden creates a PostDeviceURLForbidden with default headers values
func NewPostDeviceURLForbidden() *PostDeviceURLForbidden {
	return &PostDeviceURLForbidden{}
}

/*PostDeviceURLForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostDeviceURLForbidden struct {
}

func (o *PostDeviceURLForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlForbidden ", 403)
}

func (o *PostDeviceURLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceURLNotFound creates a PostDeviceURLNotFound with default headers values
func NewPostDeviceURLNotFound() *PostDeviceURLNotFound {
	return &PostDeviceURLNotFound{}
}

/*PostDeviceURLNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostDeviceURLNotFound struct {
}

func (o *PostDeviceURLNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlNotFound ", 404)
}

func (o *PostDeviceURLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceURLMethodNotAllowed creates a PostDeviceURLMethodNotAllowed with default headers values
func NewPostDeviceURLMethodNotAllowed() *PostDeviceURLMethodNotAllowed {
	return &PostDeviceURLMethodNotAllowed{}
}

/*PostDeviceURLMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostDeviceURLMethodNotAllowed struct {
}

func (o *PostDeviceURLMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlMethodNotAllowed ", 405)
}

func (o *PostDeviceURLMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceURLGone creates a PostDeviceURLGone with default headers values
func NewPostDeviceURLGone() *PostDeviceURLGone {
	return &PostDeviceURLGone{}
}

/*PostDeviceURLGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostDeviceURLGone struct {
}

func (o *PostDeviceURLGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlGone ", 410)
}

func (o *PostDeviceURLGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceURLInternalServerError creates a PostDeviceURLInternalServerError with default headers values
func NewPostDeviceURLInternalServerError() *PostDeviceURLInternalServerError {
	return &PostDeviceURLInternalServerError{}
}

/*PostDeviceURLInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostDeviceURLInternalServerError struct {
}

func (o *PostDeviceURLInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlInternalServerError ", 500)
}

func (o *PostDeviceURLInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceURLServiceUnavailable creates a PostDeviceURLServiceUnavailable with default headers values
func NewPostDeviceURLServiceUnavailable() *PostDeviceURLServiceUnavailable {
	return &PostDeviceURLServiceUnavailable{}
}

/*PostDeviceURLServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostDeviceURLServiceUnavailable struct {
}

func (o *PostDeviceURLServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/url/][%d] postDeviceUrlServiceUnavailable ", 503)
}

func (o *PostDeviceURLServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostDeviceURLOKBody post device URL o k body
swagger:model PostDeviceURLOKBody
*/
type PostDeviceURLOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post device URL o k body
func (o *PostDeviceURLOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDeviceURLOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDeviceURLOKBody) UnmarshalBinary(b []byte) error {
	var res PostDeviceURLOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
