// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteDeviceRackDeviceIDReader is a Reader for the DeleteDeviceRackDeviceID structure.
type DeleteDeviceRackDeviceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDeviceRackDeviceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDeviceRackDeviceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDeviceRackDeviceIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteDeviceRackDeviceIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDeviceRackDeviceIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDeviceRackDeviceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteDeviceRackDeviceIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewDeleteDeviceRackDeviceIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDeviceRackDeviceIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteDeviceRackDeviceIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDeviceRackDeviceIDOK creates a DeleteDeviceRackDeviceIDOK with default headers values
func NewDeleteDeviceRackDeviceIDOK() *DeleteDeviceRackDeviceIDOK {
	return &DeleteDeviceRackDeviceIDOK{}
}

/*DeleteDeviceRackDeviceIDOK handles this case with default header values.

The above command returns results like this:
*/
type DeleteDeviceRackDeviceIDOK struct {
	Payload *DeleteDeviceRackDeviceIDOKBody
}

func (o *DeleteDeviceRackDeviceIDOK) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdOK  %+v", 200, o.Payload)
}

func (o *DeleteDeviceRackDeviceIDOK) GetPayload() *DeleteDeviceRackDeviceIDOKBody {
	return o.Payload
}

func (o *DeleteDeviceRackDeviceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteDeviceRackDeviceIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDeviceRackDeviceIDBadRequest creates a DeleteDeviceRackDeviceIDBadRequest with default headers values
func NewDeleteDeviceRackDeviceIDBadRequest() *DeleteDeviceRackDeviceIDBadRequest {
	return &DeleteDeviceRackDeviceIDBadRequest{}
}

/*DeleteDeviceRackDeviceIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type DeleteDeviceRackDeviceIDBadRequest struct {
}

func (o *DeleteDeviceRackDeviceIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdBadRequest ", 400)
}

func (o *DeleteDeviceRackDeviceIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceRackDeviceIDUnauthorized creates a DeleteDeviceRackDeviceIDUnauthorized with default headers values
func NewDeleteDeviceRackDeviceIDUnauthorized() *DeleteDeviceRackDeviceIDUnauthorized {
	return &DeleteDeviceRackDeviceIDUnauthorized{}
}

/*DeleteDeviceRackDeviceIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type DeleteDeviceRackDeviceIDUnauthorized struct {
}

func (o *DeleteDeviceRackDeviceIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdUnauthorized ", 401)
}

func (o *DeleteDeviceRackDeviceIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceRackDeviceIDForbidden creates a DeleteDeviceRackDeviceIDForbidden with default headers values
func NewDeleteDeviceRackDeviceIDForbidden() *DeleteDeviceRackDeviceIDForbidden {
	return &DeleteDeviceRackDeviceIDForbidden{}
}

/*DeleteDeviceRackDeviceIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type DeleteDeviceRackDeviceIDForbidden struct {
}

func (o *DeleteDeviceRackDeviceIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdForbidden ", 403)
}

func (o *DeleteDeviceRackDeviceIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceRackDeviceIDNotFound creates a DeleteDeviceRackDeviceIDNotFound with default headers values
func NewDeleteDeviceRackDeviceIDNotFound() *DeleteDeviceRackDeviceIDNotFound {
	return &DeleteDeviceRackDeviceIDNotFound{}
}

/*DeleteDeviceRackDeviceIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type DeleteDeviceRackDeviceIDNotFound struct {
}

func (o *DeleteDeviceRackDeviceIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdNotFound ", 404)
}

func (o *DeleteDeviceRackDeviceIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceRackDeviceIDMethodNotAllowed creates a DeleteDeviceRackDeviceIDMethodNotAllowed with default headers values
func NewDeleteDeviceRackDeviceIDMethodNotAllowed() *DeleteDeviceRackDeviceIDMethodNotAllowed {
	return &DeleteDeviceRackDeviceIDMethodNotAllowed{}
}

/*DeleteDeviceRackDeviceIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type DeleteDeviceRackDeviceIDMethodNotAllowed struct {
}

func (o *DeleteDeviceRackDeviceIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdMethodNotAllowed ", 405)
}

func (o *DeleteDeviceRackDeviceIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceRackDeviceIDGone creates a DeleteDeviceRackDeviceIDGone with default headers values
func NewDeleteDeviceRackDeviceIDGone() *DeleteDeviceRackDeviceIDGone {
	return &DeleteDeviceRackDeviceIDGone{}
}

/*DeleteDeviceRackDeviceIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type DeleteDeviceRackDeviceIDGone struct {
}

func (o *DeleteDeviceRackDeviceIDGone) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdGone ", 410)
}

func (o *DeleteDeviceRackDeviceIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceRackDeviceIDInternalServerError creates a DeleteDeviceRackDeviceIDInternalServerError with default headers values
func NewDeleteDeviceRackDeviceIDInternalServerError() *DeleteDeviceRackDeviceIDInternalServerError {
	return &DeleteDeviceRackDeviceIDInternalServerError{}
}

/*DeleteDeviceRackDeviceIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type DeleteDeviceRackDeviceIDInternalServerError struct {
}

func (o *DeleteDeviceRackDeviceIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdInternalServerError ", 500)
}

func (o *DeleteDeviceRackDeviceIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceRackDeviceIDServiceUnavailable creates a DeleteDeviceRackDeviceIDServiceUnavailable with default headers values
func NewDeleteDeviceRackDeviceIDServiceUnavailable() *DeleteDeviceRackDeviceIDServiceUnavailable {
	return &DeleteDeviceRackDeviceIDServiceUnavailable{}
}

/*DeleteDeviceRackDeviceIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type DeleteDeviceRackDeviceIDServiceUnavailable struct {
}

func (o *DeleteDeviceRackDeviceIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/device/rack/{device_id}/][%d] deleteDeviceRackDeviceIdServiceUnavailable ", 503)
}

func (o *DeleteDeviceRackDeviceIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DeleteDeviceRackDeviceIDOKBody delete device rack device ID o k body
swagger:model DeleteDeviceRackDeviceIDOKBody
*/
type DeleteDeviceRackDeviceIDOKBody struct {

	// deleted
	Deleted interface{} `json:"deleted,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`
}

// Validate validates this delete device rack device ID o k body
func (o *DeleteDeviceRackDeviceIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDeviceRackDeviceIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDeviceRackDeviceIDOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteDeviceRackDeviceIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
