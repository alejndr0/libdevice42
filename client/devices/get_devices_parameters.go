// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDevicesParams creates a new GetDevicesParams object
// with the default values initialized.
func NewGetDevicesParams() *GetDevicesParams {
	var ()
	return &GetDevicesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDevicesParamsWithTimeout creates a new GetDevicesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDevicesParamsWithTimeout(timeout time.Duration) *GetDevicesParams {
	var ()
	return &GetDevicesParams{

		timeout: timeout,
	}
}

// NewGetDevicesParamsWithContext creates a new GetDevicesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDevicesParamsWithContext(ctx context.Context) *GetDevicesParams {
	var ()
	return &GetDevicesParams{

		Context: ctx,
	}
}

// NewGetDevicesParamsWithHTTPClient creates a new GetDevicesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDevicesParamsWithHTTPClient(client *http.Client) *GetDevicesParams {
	var ()
	return &GetDevicesParams{
		HTTPClient: client,
	}
}

/*GetDevicesParams contains all the parameters to send to the API endpoint
for the get devices operation typically these are written to a http.Request
*/
type GetDevicesParams struct {

	/*AssetNo
	  filter by asset # (Added in v6.0.0)

	*/
	AssetNo *string
	/*BladeHostName
	  filter by blade host name

	*/
	BladeHostName *string
	/*Building
	  filter by building name

	*/
	Building *string
	/*BuildingID
	  filter by building ID (Added in v5.9.0)

	*/
	BuildingID *string
	/*CustomFieldsAnd
	  filter by custom fields, and filter, format of key1:value1,key2:value2

	*/
	CustomFieldsAnd *string
	/*CustomFieldsOr
	  filter by custom fields, or filter, format of key1:value1,key2:value2

	*/
	CustomFieldsOr *string
	/*Customer
	  filter by customer name

	*/
	Customer *string
	/*DeviceSubType
	  filter by device sub type (Added in v14.7.2)

	*/
	DeviceSubType *string
	/*DeviceSubTypeID
	  filter by device sub type id (Added in v14.7.2)

	*/
	DeviceSubTypeID *string
	/*FirstAddedGt
	  first added greater date YYYY-MM-DD format

	*/
	FirstAddedGt *string
	/*FirstAddedLt
	  first added less than date YYYY-MM-DD format

	*/
	FirstAddedLt *string
	/*Hardware
	  filter by name of hardware model, comma separated for multiple hardware models (or filter). (Added in v6.3.2)

	*/
	Hardware *string
	/*HardwareIds
	  filter by ID of hardware models, comma separated

	*/
	HardwareIds *string
	/*InService
	  filter by whether in service or not. Use yes or no.

	*/
	InService *string
	/*IsItBladeHost
	  filter by whether blade host or not. Use yes or no. (Added in v6.3.2)

	*/
	IsItBladeHost *string
	/*IsItSwitch
	  filter by whether switch or not. Use yes or no. (Added in v6.3.2)

	*/
	IsItSwitch *string
	/*IsItVirtualHost
	  filter by whether virtual host or not. Use yes or no. (Added in v6.3.2)

	*/
	IsItVirtualHost *string
	/*LastUpdatedGt
	  last updated greater than date YYYY-MM-DD format

	*/
	LastUpdatedGt *string
	/*LastUpdatedLt
	  last updated less than date YYYY-MM-DD format

	*/
	LastUpdatedLt *string
	/*Name
	  filter by name (Added in v6.0.0)

	*/
	Name *string
	/*ObjectCategory
	  filter by object category

	*/
	ObjectCategory *string
	/*ObjectCategoryID
	  filter by object category ID

	*/
	ObjectCategoryID *string
	/*Os
	  filter by OS name (added in v8.3.0)

	*/
	Os *string
	/*Rack
	  filter by rack name. Only works if rack ID is not present (Added in v5.9.0)

	*/
	Rack *string
	/*RackID
	  filter by rack ID (Added in v5.9.0)

	*/
	RackID *string
	/*Room
	  filter by room name. Only works if room ID is not present (Added in v5.9.0)

	*/
	Room *string
	/*RoomID
	  filter by room ID (Added in v5.9.0)

	*/
	RoomID *string
	/*SerialNo
	  filter by serial # (Added in v6.0.0)

	*/
	SerialNo *string
	/*SerialNoContains
	  filter by partial serial match (Added in 9.7.1)

	*/
	SerialNoContains *string
	/*ServiceLevel
	  filter by service level name

	*/
	ServiceLevel *string
	/*Tags
	  filter by tags. comma separated for multiple tags (This is an OR filter, gets all the devices for all comma separated tags)

	*/
	Tags *string
	/*TagsAnd
	  filter by all the tags, separated by comma. (This is an AND filter and all tags have to match for filter, this was added in v6.3.1)

	*/
	TagsAnd *string
	/*Type
	  filter by device type (physical, virtual, blade, other, cluster, or unknown)

	*/
	Type *string
	/*UUID
	  filter by uuid (exact match) (Added in v6.3.2)

	*/
	UUID *string
	/*VirtualHostName
	  filter by virtual host name

	*/
	VirtualHostName *string
	/*VirtualSubtype
	  filter by virtual subtype (added in v8.3.2)

	*/
	VirtualSubtype *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get devices params
func (o *GetDevicesParams) WithTimeout(timeout time.Duration) *GetDevicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get devices params
func (o *GetDevicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get devices params
func (o *GetDevicesParams) WithContext(ctx context.Context) *GetDevicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get devices params
func (o *GetDevicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get devices params
func (o *GetDevicesParams) WithHTTPClient(client *http.Client) *GetDevicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get devices params
func (o *GetDevicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAssetNo adds the assetNo to the get devices params
func (o *GetDevicesParams) WithAssetNo(assetNo *string) *GetDevicesParams {
	o.SetAssetNo(assetNo)
	return o
}

// SetAssetNo adds the assetNo to the get devices params
func (o *GetDevicesParams) SetAssetNo(assetNo *string) {
	o.AssetNo = assetNo
}

// WithBladeHostName adds the bladeHostName to the get devices params
func (o *GetDevicesParams) WithBladeHostName(bladeHostName *string) *GetDevicesParams {
	o.SetBladeHostName(bladeHostName)
	return o
}

// SetBladeHostName adds the bladeHostName to the get devices params
func (o *GetDevicesParams) SetBladeHostName(bladeHostName *string) {
	o.BladeHostName = bladeHostName
}

// WithBuilding adds the building to the get devices params
func (o *GetDevicesParams) WithBuilding(building *string) *GetDevicesParams {
	o.SetBuilding(building)
	return o
}

// SetBuilding adds the building to the get devices params
func (o *GetDevicesParams) SetBuilding(building *string) {
	o.Building = building
}

// WithBuildingID adds the buildingID to the get devices params
func (o *GetDevicesParams) WithBuildingID(buildingID *string) *GetDevicesParams {
	o.SetBuildingID(buildingID)
	return o
}

// SetBuildingID adds the buildingId to the get devices params
func (o *GetDevicesParams) SetBuildingID(buildingID *string) {
	o.BuildingID = buildingID
}

// WithCustomFieldsAnd adds the customFieldsAnd to the get devices params
func (o *GetDevicesParams) WithCustomFieldsAnd(customFieldsAnd *string) *GetDevicesParams {
	o.SetCustomFieldsAnd(customFieldsAnd)
	return o
}

// SetCustomFieldsAnd adds the customFieldsAnd to the get devices params
func (o *GetDevicesParams) SetCustomFieldsAnd(customFieldsAnd *string) {
	o.CustomFieldsAnd = customFieldsAnd
}

// WithCustomFieldsOr adds the customFieldsOr to the get devices params
func (o *GetDevicesParams) WithCustomFieldsOr(customFieldsOr *string) *GetDevicesParams {
	o.SetCustomFieldsOr(customFieldsOr)
	return o
}

// SetCustomFieldsOr adds the customFieldsOr to the get devices params
func (o *GetDevicesParams) SetCustomFieldsOr(customFieldsOr *string) {
	o.CustomFieldsOr = customFieldsOr
}

// WithCustomer adds the customer to the get devices params
func (o *GetDevicesParams) WithCustomer(customer *string) *GetDevicesParams {
	o.SetCustomer(customer)
	return o
}

// SetCustomer adds the customer to the get devices params
func (o *GetDevicesParams) SetCustomer(customer *string) {
	o.Customer = customer
}

// WithDeviceSubType adds the deviceSubType to the get devices params
func (o *GetDevicesParams) WithDeviceSubType(deviceSubType *string) *GetDevicesParams {
	o.SetDeviceSubType(deviceSubType)
	return o
}

// SetDeviceSubType adds the deviceSubType to the get devices params
func (o *GetDevicesParams) SetDeviceSubType(deviceSubType *string) {
	o.DeviceSubType = deviceSubType
}

// WithDeviceSubTypeID adds the deviceSubTypeID to the get devices params
func (o *GetDevicesParams) WithDeviceSubTypeID(deviceSubTypeID *string) *GetDevicesParams {
	o.SetDeviceSubTypeID(deviceSubTypeID)
	return o
}

// SetDeviceSubTypeID adds the deviceSubTypeId to the get devices params
func (o *GetDevicesParams) SetDeviceSubTypeID(deviceSubTypeID *string) {
	o.DeviceSubTypeID = deviceSubTypeID
}

// WithFirstAddedGt adds the firstAddedGt to the get devices params
func (o *GetDevicesParams) WithFirstAddedGt(firstAddedGt *string) *GetDevicesParams {
	o.SetFirstAddedGt(firstAddedGt)
	return o
}

// SetFirstAddedGt adds the firstAddedGt to the get devices params
func (o *GetDevicesParams) SetFirstAddedGt(firstAddedGt *string) {
	o.FirstAddedGt = firstAddedGt
}

// WithFirstAddedLt adds the firstAddedLt to the get devices params
func (o *GetDevicesParams) WithFirstAddedLt(firstAddedLt *string) *GetDevicesParams {
	o.SetFirstAddedLt(firstAddedLt)
	return o
}

// SetFirstAddedLt adds the firstAddedLt to the get devices params
func (o *GetDevicesParams) SetFirstAddedLt(firstAddedLt *string) {
	o.FirstAddedLt = firstAddedLt
}

// WithHardware adds the hardware to the get devices params
func (o *GetDevicesParams) WithHardware(hardware *string) *GetDevicesParams {
	o.SetHardware(hardware)
	return o
}

// SetHardware adds the hardware to the get devices params
func (o *GetDevicesParams) SetHardware(hardware *string) {
	o.Hardware = hardware
}

// WithHardwareIds adds the hardwareIds to the get devices params
func (o *GetDevicesParams) WithHardwareIds(hardwareIds *string) *GetDevicesParams {
	o.SetHardwareIds(hardwareIds)
	return o
}

// SetHardwareIds adds the hardwareIds to the get devices params
func (o *GetDevicesParams) SetHardwareIds(hardwareIds *string) {
	o.HardwareIds = hardwareIds
}

// WithInService adds the inService to the get devices params
func (o *GetDevicesParams) WithInService(inService *string) *GetDevicesParams {
	o.SetInService(inService)
	return o
}

// SetInService adds the inService to the get devices params
func (o *GetDevicesParams) SetInService(inService *string) {
	o.InService = inService
}

// WithIsItBladeHost adds the isItBladeHost to the get devices params
func (o *GetDevicesParams) WithIsItBladeHost(isItBladeHost *string) *GetDevicesParams {
	o.SetIsItBladeHost(isItBladeHost)
	return o
}

// SetIsItBladeHost adds the isItBladeHost to the get devices params
func (o *GetDevicesParams) SetIsItBladeHost(isItBladeHost *string) {
	o.IsItBladeHost = isItBladeHost
}

// WithIsItSwitch adds the isItSwitch to the get devices params
func (o *GetDevicesParams) WithIsItSwitch(isItSwitch *string) *GetDevicesParams {
	o.SetIsItSwitch(isItSwitch)
	return o
}

// SetIsItSwitch adds the isItSwitch to the get devices params
func (o *GetDevicesParams) SetIsItSwitch(isItSwitch *string) {
	o.IsItSwitch = isItSwitch
}

// WithIsItVirtualHost adds the isItVirtualHost to the get devices params
func (o *GetDevicesParams) WithIsItVirtualHost(isItVirtualHost *string) *GetDevicesParams {
	o.SetIsItVirtualHost(isItVirtualHost)
	return o
}

// SetIsItVirtualHost adds the isItVirtualHost to the get devices params
func (o *GetDevicesParams) SetIsItVirtualHost(isItVirtualHost *string) {
	o.IsItVirtualHost = isItVirtualHost
}

// WithLastUpdatedGt adds the lastUpdatedGt to the get devices params
func (o *GetDevicesParams) WithLastUpdatedGt(lastUpdatedGt *string) *GetDevicesParams {
	o.SetLastUpdatedGt(lastUpdatedGt)
	return o
}

// SetLastUpdatedGt adds the lastUpdatedGt to the get devices params
func (o *GetDevicesParams) SetLastUpdatedGt(lastUpdatedGt *string) {
	o.LastUpdatedGt = lastUpdatedGt
}

// WithLastUpdatedLt adds the lastUpdatedLt to the get devices params
func (o *GetDevicesParams) WithLastUpdatedLt(lastUpdatedLt *string) *GetDevicesParams {
	o.SetLastUpdatedLt(lastUpdatedLt)
	return o
}

// SetLastUpdatedLt adds the lastUpdatedLt to the get devices params
func (o *GetDevicesParams) SetLastUpdatedLt(lastUpdatedLt *string) {
	o.LastUpdatedLt = lastUpdatedLt
}

// WithName adds the name to the get devices params
func (o *GetDevicesParams) WithName(name *string) *GetDevicesParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get devices params
func (o *GetDevicesParams) SetName(name *string) {
	o.Name = name
}

// WithObjectCategory adds the objectCategory to the get devices params
func (o *GetDevicesParams) WithObjectCategory(objectCategory *string) *GetDevicesParams {
	o.SetObjectCategory(objectCategory)
	return o
}

// SetObjectCategory adds the objectCategory to the get devices params
func (o *GetDevicesParams) SetObjectCategory(objectCategory *string) {
	o.ObjectCategory = objectCategory
}

// WithObjectCategoryID adds the objectCategoryID to the get devices params
func (o *GetDevicesParams) WithObjectCategoryID(objectCategoryID *string) *GetDevicesParams {
	o.SetObjectCategoryID(objectCategoryID)
	return o
}

// SetObjectCategoryID adds the objectCategoryId to the get devices params
func (o *GetDevicesParams) SetObjectCategoryID(objectCategoryID *string) {
	o.ObjectCategoryID = objectCategoryID
}

// WithOs adds the os to the get devices params
func (o *GetDevicesParams) WithOs(os *string) *GetDevicesParams {
	o.SetOs(os)
	return o
}

// SetOs adds the os to the get devices params
func (o *GetDevicesParams) SetOs(os *string) {
	o.Os = os
}

// WithRack adds the rack to the get devices params
func (o *GetDevicesParams) WithRack(rack *string) *GetDevicesParams {
	o.SetRack(rack)
	return o
}

// SetRack adds the rack to the get devices params
func (o *GetDevicesParams) SetRack(rack *string) {
	o.Rack = rack
}

// WithRackID adds the rackID to the get devices params
func (o *GetDevicesParams) WithRackID(rackID *string) *GetDevicesParams {
	o.SetRackID(rackID)
	return o
}

// SetRackID adds the rackId to the get devices params
func (o *GetDevicesParams) SetRackID(rackID *string) {
	o.RackID = rackID
}

// WithRoom adds the room to the get devices params
func (o *GetDevicesParams) WithRoom(room *string) *GetDevicesParams {
	o.SetRoom(room)
	return o
}

// SetRoom adds the room to the get devices params
func (o *GetDevicesParams) SetRoom(room *string) {
	o.Room = room
}

// WithRoomID adds the roomID to the get devices params
func (o *GetDevicesParams) WithRoomID(roomID *string) *GetDevicesParams {
	o.SetRoomID(roomID)
	return o
}

// SetRoomID adds the roomId to the get devices params
func (o *GetDevicesParams) SetRoomID(roomID *string) {
	o.RoomID = roomID
}

// WithSerialNo adds the serialNo to the get devices params
func (o *GetDevicesParams) WithSerialNo(serialNo *string) *GetDevicesParams {
	o.SetSerialNo(serialNo)
	return o
}

// SetSerialNo adds the serialNo to the get devices params
func (o *GetDevicesParams) SetSerialNo(serialNo *string) {
	o.SerialNo = serialNo
}

// WithSerialNoContains adds the serialNoContains to the get devices params
func (o *GetDevicesParams) WithSerialNoContains(serialNoContains *string) *GetDevicesParams {
	o.SetSerialNoContains(serialNoContains)
	return o
}

// SetSerialNoContains adds the serialNoContains to the get devices params
func (o *GetDevicesParams) SetSerialNoContains(serialNoContains *string) {
	o.SerialNoContains = serialNoContains
}

// WithServiceLevel adds the serviceLevel to the get devices params
func (o *GetDevicesParams) WithServiceLevel(serviceLevel *string) *GetDevicesParams {
	o.SetServiceLevel(serviceLevel)
	return o
}

// SetServiceLevel adds the serviceLevel to the get devices params
func (o *GetDevicesParams) SetServiceLevel(serviceLevel *string) {
	o.ServiceLevel = serviceLevel
}

// WithTags adds the tags to the get devices params
func (o *GetDevicesParams) WithTags(tags *string) *GetDevicesParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get devices params
func (o *GetDevicesParams) SetTags(tags *string) {
	o.Tags = tags
}

// WithTagsAnd adds the tagsAnd to the get devices params
func (o *GetDevicesParams) WithTagsAnd(tagsAnd *string) *GetDevicesParams {
	o.SetTagsAnd(tagsAnd)
	return o
}

// SetTagsAnd adds the tagsAnd to the get devices params
func (o *GetDevicesParams) SetTagsAnd(tagsAnd *string) {
	o.TagsAnd = tagsAnd
}

// WithType adds the typeVar to the get devices params
func (o *GetDevicesParams) WithType(typeVar *string) *GetDevicesParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get devices params
func (o *GetDevicesParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WithUUID adds the uuid to the get devices params
func (o *GetDevicesParams) WithUUID(uuid *string) *GetDevicesParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the get devices params
func (o *GetDevicesParams) SetUUID(uuid *string) {
	o.UUID = uuid
}

// WithVirtualHostName adds the virtualHostName to the get devices params
func (o *GetDevicesParams) WithVirtualHostName(virtualHostName *string) *GetDevicesParams {
	o.SetVirtualHostName(virtualHostName)
	return o
}

// SetVirtualHostName adds the virtualHostName to the get devices params
func (o *GetDevicesParams) SetVirtualHostName(virtualHostName *string) {
	o.VirtualHostName = virtualHostName
}

// WithVirtualSubtype adds the virtualSubtype to the get devices params
func (o *GetDevicesParams) WithVirtualSubtype(virtualSubtype *string) *GetDevicesParams {
	o.SetVirtualSubtype(virtualSubtype)
	return o
}

// SetVirtualSubtype adds the virtualSubtype to the get devices params
func (o *GetDevicesParams) SetVirtualSubtype(virtualSubtype *string) {
	o.VirtualSubtype = virtualSubtype
}

// WriteToRequest writes these params to a swagger request
func (o *GetDevicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AssetNo != nil {

		// query param asset_no
		var qrAssetNo string
		if o.AssetNo != nil {
			qrAssetNo = *o.AssetNo
		}
		qAssetNo := qrAssetNo
		if qAssetNo != "" {
			if err := r.SetQueryParam("asset_no", qAssetNo); err != nil {
				return err
			}
		}

	}

	if o.BladeHostName != nil {

		// query param blade_host_name
		var qrBladeHostName string
		if o.BladeHostName != nil {
			qrBladeHostName = *o.BladeHostName
		}
		qBladeHostName := qrBladeHostName
		if qBladeHostName != "" {
			if err := r.SetQueryParam("blade_host_name", qBladeHostName); err != nil {
				return err
			}
		}

	}

	if o.Building != nil {

		// query param building
		var qrBuilding string
		if o.Building != nil {
			qrBuilding = *o.Building
		}
		qBuilding := qrBuilding
		if qBuilding != "" {
			if err := r.SetQueryParam("building", qBuilding); err != nil {
				return err
			}
		}

	}

	if o.BuildingID != nil {

		// query param building_id
		var qrBuildingID string
		if o.BuildingID != nil {
			qrBuildingID = *o.BuildingID
		}
		qBuildingID := qrBuildingID
		if qBuildingID != "" {
			if err := r.SetQueryParam("building_id", qBuildingID); err != nil {
				return err
			}
		}

	}

	if o.CustomFieldsAnd != nil {

		// query param custom_fields_and
		var qrCustomFieldsAnd string
		if o.CustomFieldsAnd != nil {
			qrCustomFieldsAnd = *o.CustomFieldsAnd
		}
		qCustomFieldsAnd := qrCustomFieldsAnd
		if qCustomFieldsAnd != "" {
			if err := r.SetQueryParam("custom_fields_and", qCustomFieldsAnd); err != nil {
				return err
			}
		}

	}

	if o.CustomFieldsOr != nil {

		// query param custom_fields_or
		var qrCustomFieldsOr string
		if o.CustomFieldsOr != nil {
			qrCustomFieldsOr = *o.CustomFieldsOr
		}
		qCustomFieldsOr := qrCustomFieldsOr
		if qCustomFieldsOr != "" {
			if err := r.SetQueryParam("custom_fields_or", qCustomFieldsOr); err != nil {
				return err
			}
		}

	}

	if o.Customer != nil {

		// query param customer
		var qrCustomer string
		if o.Customer != nil {
			qrCustomer = *o.Customer
		}
		qCustomer := qrCustomer
		if qCustomer != "" {
			if err := r.SetQueryParam("customer", qCustomer); err != nil {
				return err
			}
		}

	}

	if o.DeviceSubType != nil {

		// query param device_sub_type
		var qrDeviceSubType string
		if o.DeviceSubType != nil {
			qrDeviceSubType = *o.DeviceSubType
		}
		qDeviceSubType := qrDeviceSubType
		if qDeviceSubType != "" {
			if err := r.SetQueryParam("device_sub_type", qDeviceSubType); err != nil {
				return err
			}
		}

	}

	if o.DeviceSubTypeID != nil {

		// query param device_sub_type_id
		var qrDeviceSubTypeID string
		if o.DeviceSubTypeID != nil {
			qrDeviceSubTypeID = *o.DeviceSubTypeID
		}
		qDeviceSubTypeID := qrDeviceSubTypeID
		if qDeviceSubTypeID != "" {
			if err := r.SetQueryParam("device_sub_type_id", qDeviceSubTypeID); err != nil {
				return err
			}
		}

	}

	if o.FirstAddedGt != nil {

		// query param first_added_gt
		var qrFirstAddedGt string
		if o.FirstAddedGt != nil {
			qrFirstAddedGt = *o.FirstAddedGt
		}
		qFirstAddedGt := qrFirstAddedGt
		if qFirstAddedGt != "" {
			if err := r.SetQueryParam("first_added_gt", qFirstAddedGt); err != nil {
				return err
			}
		}

	}

	if o.FirstAddedLt != nil {

		// query param first_added_lt
		var qrFirstAddedLt string
		if o.FirstAddedLt != nil {
			qrFirstAddedLt = *o.FirstAddedLt
		}
		qFirstAddedLt := qrFirstAddedLt
		if qFirstAddedLt != "" {
			if err := r.SetQueryParam("first_added_lt", qFirstAddedLt); err != nil {
				return err
			}
		}

	}

	if o.Hardware != nil {

		// query param hardware
		var qrHardware string
		if o.Hardware != nil {
			qrHardware = *o.Hardware
		}
		qHardware := qrHardware
		if qHardware != "" {
			if err := r.SetQueryParam("hardware", qHardware); err != nil {
				return err
			}
		}

	}

	if o.HardwareIds != nil {

		// query param hardware_ids
		var qrHardwareIds string
		if o.HardwareIds != nil {
			qrHardwareIds = *o.HardwareIds
		}
		qHardwareIds := qrHardwareIds
		if qHardwareIds != "" {
			if err := r.SetQueryParam("hardware_ids", qHardwareIds); err != nil {
				return err
			}
		}

	}

	if o.InService != nil {

		// query param in_service
		var qrInService string
		if o.InService != nil {
			qrInService = *o.InService
		}
		qInService := qrInService
		if qInService != "" {
			if err := r.SetQueryParam("in_service", qInService); err != nil {
				return err
			}
		}

	}

	if o.IsItBladeHost != nil {

		// query param is_it_blade_host
		var qrIsItBladeHost string
		if o.IsItBladeHost != nil {
			qrIsItBladeHost = *o.IsItBladeHost
		}
		qIsItBladeHost := qrIsItBladeHost
		if qIsItBladeHost != "" {
			if err := r.SetQueryParam("is_it_blade_host", qIsItBladeHost); err != nil {
				return err
			}
		}

	}

	if o.IsItSwitch != nil {

		// query param is_it_switch
		var qrIsItSwitch string
		if o.IsItSwitch != nil {
			qrIsItSwitch = *o.IsItSwitch
		}
		qIsItSwitch := qrIsItSwitch
		if qIsItSwitch != "" {
			if err := r.SetQueryParam("is_it_switch", qIsItSwitch); err != nil {
				return err
			}
		}

	}

	if o.IsItVirtualHost != nil {

		// query param is_it_virtual_host
		var qrIsItVirtualHost string
		if o.IsItVirtualHost != nil {
			qrIsItVirtualHost = *o.IsItVirtualHost
		}
		qIsItVirtualHost := qrIsItVirtualHost
		if qIsItVirtualHost != "" {
			if err := r.SetQueryParam("is_it_virtual_host", qIsItVirtualHost); err != nil {
				return err
			}
		}

	}

	if o.LastUpdatedGt != nil {

		// query param last_updated_gt
		var qrLastUpdatedGt string
		if o.LastUpdatedGt != nil {
			qrLastUpdatedGt = *o.LastUpdatedGt
		}
		qLastUpdatedGt := qrLastUpdatedGt
		if qLastUpdatedGt != "" {
			if err := r.SetQueryParam("last_updated_gt", qLastUpdatedGt); err != nil {
				return err
			}
		}

	}

	if o.LastUpdatedLt != nil {

		// query param last_updated_lt
		var qrLastUpdatedLt string
		if o.LastUpdatedLt != nil {
			qrLastUpdatedLt = *o.LastUpdatedLt
		}
		qLastUpdatedLt := qrLastUpdatedLt
		if qLastUpdatedLt != "" {
			if err := r.SetQueryParam("last_updated_lt", qLastUpdatedLt); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.ObjectCategory != nil {

		// query param object_category
		var qrObjectCategory string
		if o.ObjectCategory != nil {
			qrObjectCategory = *o.ObjectCategory
		}
		qObjectCategory := qrObjectCategory
		if qObjectCategory != "" {
			if err := r.SetQueryParam("object_category", qObjectCategory); err != nil {
				return err
			}
		}

	}

	if o.ObjectCategoryID != nil {

		// query param object_category_id
		var qrObjectCategoryID string
		if o.ObjectCategoryID != nil {
			qrObjectCategoryID = *o.ObjectCategoryID
		}
		qObjectCategoryID := qrObjectCategoryID
		if qObjectCategoryID != "" {
			if err := r.SetQueryParam("object_category_id", qObjectCategoryID); err != nil {
				return err
			}
		}

	}

	if o.Os != nil {

		// query param os
		var qrOs string
		if o.Os != nil {
			qrOs = *o.Os
		}
		qOs := qrOs
		if qOs != "" {
			if err := r.SetQueryParam("os", qOs); err != nil {
				return err
			}
		}

	}

	if o.Rack != nil {

		// query param rack
		var qrRack string
		if o.Rack != nil {
			qrRack = *o.Rack
		}
		qRack := qrRack
		if qRack != "" {
			if err := r.SetQueryParam("rack", qRack); err != nil {
				return err
			}
		}

	}

	if o.RackID != nil {

		// query param rack_id
		var qrRackID string
		if o.RackID != nil {
			qrRackID = *o.RackID
		}
		qRackID := qrRackID
		if qRackID != "" {
			if err := r.SetQueryParam("rack_id", qRackID); err != nil {
				return err
			}
		}

	}

	if o.Room != nil {

		// query param room
		var qrRoom string
		if o.Room != nil {
			qrRoom = *o.Room
		}
		qRoom := qrRoom
		if qRoom != "" {
			if err := r.SetQueryParam("room", qRoom); err != nil {
				return err
			}
		}

	}

	if o.RoomID != nil {

		// query param room_id
		var qrRoomID string
		if o.RoomID != nil {
			qrRoomID = *o.RoomID
		}
		qRoomID := qrRoomID
		if qRoomID != "" {
			if err := r.SetQueryParam("room_id", qRoomID); err != nil {
				return err
			}
		}

	}

	if o.SerialNo != nil {

		// query param serial_no
		var qrSerialNo string
		if o.SerialNo != nil {
			qrSerialNo = *o.SerialNo
		}
		qSerialNo := qrSerialNo
		if qSerialNo != "" {
			if err := r.SetQueryParam("serial_no", qSerialNo); err != nil {
				return err
			}
		}

	}

	if o.SerialNoContains != nil {

		// query param serial_no_contains
		var qrSerialNoContains string
		if o.SerialNoContains != nil {
			qrSerialNoContains = *o.SerialNoContains
		}
		qSerialNoContains := qrSerialNoContains
		if qSerialNoContains != "" {
			if err := r.SetQueryParam("serial_no_contains", qSerialNoContains); err != nil {
				return err
			}
		}

	}

	if o.ServiceLevel != nil {

		// query param service_level
		var qrServiceLevel string
		if o.ServiceLevel != nil {
			qrServiceLevel = *o.ServiceLevel
		}
		qServiceLevel := qrServiceLevel
		if qServiceLevel != "" {
			if err := r.SetQueryParam("service_level", qServiceLevel); err != nil {
				return err
			}
		}

	}

	if o.Tags != nil {

		// query param tags
		var qrTags string
		if o.Tags != nil {
			qrTags = *o.Tags
		}
		qTags := qrTags
		if qTags != "" {
			if err := r.SetQueryParam("tags", qTags); err != nil {
				return err
			}
		}

	}

	if o.TagsAnd != nil {

		// query param tags_and
		var qrTagsAnd string
		if o.TagsAnd != nil {
			qrTagsAnd = *o.TagsAnd
		}
		qTagsAnd := qrTagsAnd
		if qTagsAnd != "" {
			if err := r.SetQueryParam("tags_and", qTagsAnd); err != nil {
				return err
			}
		}

	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if o.UUID != nil {

		// query param uuid
		var qrUUID string
		if o.UUID != nil {
			qrUUID = *o.UUID
		}
		qUUID := qrUUID
		if qUUID != "" {
			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}

	}

	if o.VirtualHostName != nil {

		// query param virtual_host_name
		var qrVirtualHostName string
		if o.VirtualHostName != nil {
			qrVirtualHostName = *o.VirtualHostName
		}
		qVirtualHostName := qrVirtualHostName
		if qVirtualHostName != "" {
			if err := r.SetQueryParam("virtual_host_name", qVirtualHostName); err != nil {
				return err
			}
		}

	}

	if o.VirtualSubtype != nil {

		// query param virtual_subtype
		var qrVirtualSubtype string
		if o.VirtualSubtype != nil {
			qrVirtualSubtype = *o.VirtualSubtype
		}
		qVirtualSubtype := qrVirtualSubtype
		if qVirtualSubtype != "" {
			if err := r.SetQueryParam("virtual_subtype", qVirtualSubtype); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
