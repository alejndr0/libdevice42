// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostCloudInstanceDeviceParams creates a new PostCloudInstanceDeviceParams object
// with the default values initialized.
func NewPostCloudInstanceDeviceParams() *PostCloudInstanceDeviceParams {
	var ()
	return &PostCloudInstanceDeviceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostCloudInstanceDeviceParamsWithTimeout creates a new PostCloudInstanceDeviceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostCloudInstanceDeviceParamsWithTimeout(timeout time.Duration) *PostCloudInstanceDeviceParams {
	var ()
	return &PostCloudInstanceDeviceParams{

		timeout: timeout,
	}
}

// NewPostCloudInstanceDeviceParamsWithContext creates a new PostCloudInstanceDeviceParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostCloudInstanceDeviceParamsWithContext(ctx context.Context) *PostCloudInstanceDeviceParams {
	var ()
	return &PostCloudInstanceDeviceParams{

		Context: ctx,
	}
}

// NewPostCloudInstanceDeviceParamsWithHTTPClient creates a new PostCloudInstanceDeviceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostCloudInstanceDeviceParamsWithHTTPClient(client *http.Client) *PostCloudInstanceDeviceParams {
	var ()
	return &PostCloudInstanceDeviceParams{
		HTTPClient: client,
	}
}

/*PostCloudInstanceDeviceParams contains all the parameters to send to the API endpoint
for the post cloud instance device operation typically these are written to a http.Request
*/
type PostCloudInstanceDeviceParams struct {

	/*Device
	  Device name

	*/
	Device *string
	/*DeviceID
	  Device ID

	*/
	DeviceID *int64
	/*InstanceID
	  The cloud instance ID of the device

	*/
	InstanceID *int64
	/*Location
	  Location/region of instance deployment

	*/
	Location *string
	/*Notes
	  Any additional notes

	*/
	Notes *string
	/*Status
	  Instance status (ie, running, stopped)

	*/
	Status *string
	/*Vendor
	  The cloud vendor

	*/
	Vendor *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithTimeout(timeout time.Duration) *PostCloudInstanceDeviceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithContext(ctx context.Context) *PostCloudInstanceDeviceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithHTTPClient(client *http.Client) *PostCloudInstanceDeviceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDevice adds the device to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithDevice(device *string) *PostCloudInstanceDeviceParams {
	o.SetDevice(device)
	return o
}

// SetDevice adds the device to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetDevice(device *string) {
	o.Device = device
}

// WithDeviceID adds the deviceID to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithDeviceID(deviceID *int64) *PostCloudInstanceDeviceParams {
	o.SetDeviceID(deviceID)
	return o
}

// SetDeviceID adds the deviceId to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetDeviceID(deviceID *int64) {
	o.DeviceID = deviceID
}

// WithInstanceID adds the instanceID to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithInstanceID(instanceID *int64) *PostCloudInstanceDeviceParams {
	o.SetInstanceID(instanceID)
	return o
}

// SetInstanceID adds the instanceId to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetInstanceID(instanceID *int64) {
	o.InstanceID = instanceID
}

// WithLocation adds the location to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithLocation(location *string) *PostCloudInstanceDeviceParams {
	o.SetLocation(location)
	return o
}

// SetLocation adds the location to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetLocation(location *string) {
	o.Location = location
}

// WithNotes adds the notes to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithNotes(notes *string) *PostCloudInstanceDeviceParams {
	o.SetNotes(notes)
	return o
}

// SetNotes adds the notes to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetNotes(notes *string) {
	o.Notes = notes
}

// WithStatus adds the status to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithStatus(status *string) *PostCloudInstanceDeviceParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetStatus(status *string) {
	o.Status = status
}

// WithVendor adds the vendor to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) WithVendor(vendor *string) *PostCloudInstanceDeviceParams {
	o.SetVendor(vendor)
	return o
}

// SetVendor adds the vendor to the post cloud instance device params
func (o *PostCloudInstanceDeviceParams) SetVendor(vendor *string) {
	o.Vendor = vendor
}

// WriteToRequest writes these params to a swagger request
func (o *PostCloudInstanceDeviceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Device != nil {

		// form param device
		var frDevice string
		if o.Device != nil {
			frDevice = *o.Device
		}
		fDevice := frDevice
		if fDevice != "" {
			if err := r.SetFormParam("device", fDevice); err != nil {
				return err
			}
		}

	}

	if o.DeviceID != nil {

		// form param device_id
		var frDeviceID int64
		if o.DeviceID != nil {
			frDeviceID = *o.DeviceID
		}
		fDeviceID := swag.FormatInt64(frDeviceID)
		if fDeviceID != "" {
			if err := r.SetFormParam("device_id", fDeviceID); err != nil {
				return err
			}
		}

	}

	if o.InstanceID != nil {

		// form param instance_id
		var frInstanceID int64
		if o.InstanceID != nil {
			frInstanceID = *o.InstanceID
		}
		fInstanceID := swag.FormatInt64(frInstanceID)
		if fInstanceID != "" {
			if err := r.SetFormParam("instance_id", fInstanceID); err != nil {
				return err
			}
		}

	}

	if o.Location != nil {

		// form param location
		var frLocation string
		if o.Location != nil {
			frLocation = *o.Location
		}
		fLocation := frLocation
		if fLocation != "" {
			if err := r.SetFormParam("location", fLocation); err != nil {
				return err
			}
		}

	}

	if o.Notes != nil {

		// form param notes
		var frNotes string
		if o.Notes != nil {
			frNotes = *o.Notes
		}
		fNotes := frNotes
		if fNotes != "" {
			if err := r.SetFormParam("notes", fNotes); err != nil {
				return err
			}
		}

	}

	if o.Status != nil {

		// form param status
		var frStatus string
		if o.Status != nil {
			frStatus = *o.Status
		}
		fStatus := frStatus
		if fStatus != "" {
			if err := r.SetFormParam("status", fStatus); err != nil {
				return err
			}
		}

	}

	if o.Vendor != nil {

		// form param vendor
		var frVendor string
		if o.Vendor != nil {
			frVendor = *o.Vendor
		}
		fVendor := frVendor
		if fVendor != "" {
			if err := r.SetFormParam("vendor", fVendor); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
