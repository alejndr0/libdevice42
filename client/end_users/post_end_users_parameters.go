// Code generated by go-swagger; DO NOT EDIT.

package end_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostEndUsersParams creates a new PostEndUsersParams object
// with the default values initialized.
func NewPostEndUsersParams() *PostEndUsersParams {
	var ()
	return &PostEndUsersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostEndUsersParamsWithTimeout creates a new PostEndUsersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostEndUsersParamsWithTimeout(timeout time.Duration) *PostEndUsersParams {
	var ()
	return &PostEndUsersParams{

		timeout: timeout,
	}
}

// NewPostEndUsersParamsWithContext creates a new PostEndUsersParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostEndUsersParamsWithContext(ctx context.Context) *PostEndUsersParams {
	var ()
	return &PostEndUsersParams{

		Context: ctx,
	}
}

// NewPostEndUsersParamsWithHTTPClient creates a new PostEndUsersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostEndUsersParamsWithHTTPClient(client *http.Client) *PostEndUsersParams {
	var ()
	return &PostEndUsersParams{
		HTTPClient: client,
	}
}

/*PostEndUsersParams contains all the parameters to send to the API endpoint
for the post end users operation typically these are written to a http.Request
*/
type PostEndUsersParams struct {

	/*Contact*/
	Contact *string
	/*Email
	  Text field.

	*/
	Email *string
	/*Location*/
	Location *string
	/*Name
	  enduser name

	*/
	Name string
	/*Notes
	  Any additional notes

	*/
	Notes *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post end users params
func (o *PostEndUsersParams) WithTimeout(timeout time.Duration) *PostEndUsersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post end users params
func (o *PostEndUsersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post end users params
func (o *PostEndUsersParams) WithContext(ctx context.Context) *PostEndUsersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post end users params
func (o *PostEndUsersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post end users params
func (o *PostEndUsersParams) WithHTTPClient(client *http.Client) *PostEndUsersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post end users params
func (o *PostEndUsersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContact adds the contact to the post end users params
func (o *PostEndUsersParams) WithContact(contact *string) *PostEndUsersParams {
	o.SetContact(contact)
	return o
}

// SetContact adds the contact to the post end users params
func (o *PostEndUsersParams) SetContact(contact *string) {
	o.Contact = contact
}

// WithEmail adds the email to the post end users params
func (o *PostEndUsersParams) WithEmail(email *string) *PostEndUsersParams {
	o.SetEmail(email)
	return o
}

// SetEmail adds the email to the post end users params
func (o *PostEndUsersParams) SetEmail(email *string) {
	o.Email = email
}

// WithLocation adds the location to the post end users params
func (o *PostEndUsersParams) WithLocation(location *string) *PostEndUsersParams {
	o.SetLocation(location)
	return o
}

// SetLocation adds the location to the post end users params
func (o *PostEndUsersParams) SetLocation(location *string) {
	o.Location = location
}

// WithName adds the name to the post end users params
func (o *PostEndUsersParams) WithName(name string) *PostEndUsersParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post end users params
func (o *PostEndUsersParams) SetName(name string) {
	o.Name = name
}

// WithNotes adds the notes to the post end users params
func (o *PostEndUsersParams) WithNotes(notes *string) *PostEndUsersParams {
	o.SetNotes(notes)
	return o
}

// SetNotes adds the notes to the post end users params
func (o *PostEndUsersParams) SetNotes(notes *string) {
	o.Notes = notes
}

// WriteToRequest writes these params to a swagger request
func (o *PostEndUsersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Contact != nil {

		// form param contact
		var frContact string
		if o.Contact != nil {
			frContact = *o.Contact
		}
		fContact := frContact
		if fContact != "" {
			if err := r.SetFormParam("contact", fContact); err != nil {
				return err
			}
		}

	}

	if o.Email != nil {

		// form param email
		var frEmail string
		if o.Email != nil {
			frEmail = *o.Email
		}
		fEmail := frEmail
		if fEmail != "" {
			if err := r.SetFormParam("email", fEmail); err != nil {
				return err
			}
		}

	}

	if o.Location != nil {

		// form param location
		var frLocation string
		if o.Location != nil {
			frLocation = *o.Location
		}
		fLocation := frLocation
		if fLocation != "" {
			if err := r.SetFormParam("location", fLocation); err != nil {
				return err
			}
		}

	}

	// form param name
	frName := o.Name
	fName := frName
	if fName != "" {
		if err := r.SetFormParam("name", fName); err != nil {
			return err
		}
	}

	if o.Notes != nil {

		// form param notes
		var frNotes string
		if o.Notes != nil {
			frNotes = *o.Notes
		}
		fNotes := frNotes
		if fNotes != "" {
			if err := r.SetFormParam("notes", fNotes); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
