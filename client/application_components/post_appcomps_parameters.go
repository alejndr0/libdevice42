// Code generated by go-swagger; DO NOT EDIT.

package application_components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostAppcompsParams creates a new PostAppcompsParams object
// with the default values initialized.
func NewPostAppcompsParams() *PostAppcompsParams {
	var ()
	return &PostAppcompsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAppcompsParamsWithTimeout creates a new PostAppcompsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAppcompsParamsWithTimeout(timeout time.Duration) *PostAppcompsParams {
	var ()
	return &PostAppcompsParams{

		timeout: timeout,
	}
}

// NewPostAppcompsParamsWithContext creates a new PostAppcompsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAppcompsParamsWithContext(ctx context.Context) *PostAppcompsParams {
	var ()
	return &PostAppcompsParams{

		Context: ctx,
	}
}

// NewPostAppcompsParamsWithHTTPClient creates a new PostAppcompsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAppcompsParamsWithHTTPClient(client *http.Client) *PostAppcompsParams {
	var ()
	return &PostAppcompsParams{
		HTTPClient: client,
	}
}

/*PostAppcompsParams contains all the parameters to send to the API endpoint
for the post appcomps operation typically these are written to a http.Request
*/
type PostAppcompsParams struct {

	/*Dependents
	  Names of app components that depend on this component separated by commas - must match component names exactly.

	*/
	Dependents *string
	/*DependsOn
	  Names of app components this component depends on, separated by commas - must match component names exactly.

	*/
	DependsOn *string
	/*DependsOnReasons
	  list of string pairs for dependent appcomps on this appcomp e.g. => depend_appcomp_name1:reason1, depend_appcomp_name2:reason2, depend_appcomp_nameN:reason3 (added in v6.6.0)

	*/
	DependsOnReasons *string
	/*Device
	  device (name) that this component is dependent on

	*/
	Device string
	/*DeviceReason
	  string for the device reason on this appcomp (added in v6.6.0)

	*/
	DeviceReason *string
	/*GroupOwner
	  Name of group that is responsible for this component - must match group name exactly.

	*/
	GroupOwner *string
	/*GroupsAffected
	  Names of affected groups separated by commas - must match group names exactly.

	*/
	GroupsAffected *string
	/*Name
	  unique name for component

	*/
	Name string
	/*What
	  Description of business impact due to loss of component.

	*/
	What *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post appcomps params
func (o *PostAppcompsParams) WithTimeout(timeout time.Duration) *PostAppcompsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post appcomps params
func (o *PostAppcompsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post appcomps params
func (o *PostAppcompsParams) WithContext(ctx context.Context) *PostAppcompsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post appcomps params
func (o *PostAppcompsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post appcomps params
func (o *PostAppcompsParams) WithHTTPClient(client *http.Client) *PostAppcompsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post appcomps params
func (o *PostAppcompsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDependents adds the dependents to the post appcomps params
func (o *PostAppcompsParams) WithDependents(dependents *string) *PostAppcompsParams {
	o.SetDependents(dependents)
	return o
}

// SetDependents adds the dependents to the post appcomps params
func (o *PostAppcompsParams) SetDependents(dependents *string) {
	o.Dependents = dependents
}

// WithDependsOn adds the dependsOn to the post appcomps params
func (o *PostAppcompsParams) WithDependsOn(dependsOn *string) *PostAppcompsParams {
	o.SetDependsOn(dependsOn)
	return o
}

// SetDependsOn adds the dependsOn to the post appcomps params
func (o *PostAppcompsParams) SetDependsOn(dependsOn *string) {
	o.DependsOn = dependsOn
}

// WithDependsOnReasons adds the dependsOnReasons to the post appcomps params
func (o *PostAppcompsParams) WithDependsOnReasons(dependsOnReasons *string) *PostAppcompsParams {
	o.SetDependsOnReasons(dependsOnReasons)
	return o
}

// SetDependsOnReasons adds the dependsOnReasons to the post appcomps params
func (o *PostAppcompsParams) SetDependsOnReasons(dependsOnReasons *string) {
	o.DependsOnReasons = dependsOnReasons
}

// WithDevice adds the device to the post appcomps params
func (o *PostAppcompsParams) WithDevice(device string) *PostAppcompsParams {
	o.SetDevice(device)
	return o
}

// SetDevice adds the device to the post appcomps params
func (o *PostAppcompsParams) SetDevice(device string) {
	o.Device = device
}

// WithDeviceReason adds the deviceReason to the post appcomps params
func (o *PostAppcompsParams) WithDeviceReason(deviceReason *string) *PostAppcompsParams {
	o.SetDeviceReason(deviceReason)
	return o
}

// SetDeviceReason adds the deviceReason to the post appcomps params
func (o *PostAppcompsParams) SetDeviceReason(deviceReason *string) {
	o.DeviceReason = deviceReason
}

// WithGroupOwner adds the groupOwner to the post appcomps params
func (o *PostAppcompsParams) WithGroupOwner(groupOwner *string) *PostAppcompsParams {
	o.SetGroupOwner(groupOwner)
	return o
}

// SetGroupOwner adds the groupOwner to the post appcomps params
func (o *PostAppcompsParams) SetGroupOwner(groupOwner *string) {
	o.GroupOwner = groupOwner
}

// WithGroupsAffected adds the groupsAffected to the post appcomps params
func (o *PostAppcompsParams) WithGroupsAffected(groupsAffected *string) *PostAppcompsParams {
	o.SetGroupsAffected(groupsAffected)
	return o
}

// SetGroupsAffected adds the groupsAffected to the post appcomps params
func (o *PostAppcompsParams) SetGroupsAffected(groupsAffected *string) {
	o.GroupsAffected = groupsAffected
}

// WithName adds the name to the post appcomps params
func (o *PostAppcompsParams) WithName(name string) *PostAppcompsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post appcomps params
func (o *PostAppcompsParams) SetName(name string) {
	o.Name = name
}

// WithWhat adds the what to the post appcomps params
func (o *PostAppcompsParams) WithWhat(what *string) *PostAppcompsParams {
	o.SetWhat(what)
	return o
}

// SetWhat adds the what to the post appcomps params
func (o *PostAppcompsParams) SetWhat(what *string) {
	o.What = what
}

// WriteToRequest writes these params to a swagger request
func (o *PostAppcompsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Dependents != nil {

		// form param dependents
		var frDependents string
		if o.Dependents != nil {
			frDependents = *o.Dependents
		}
		fDependents := frDependents
		if fDependents != "" {
			if err := r.SetFormParam("dependents", fDependents); err != nil {
				return err
			}
		}

	}

	if o.DependsOn != nil {

		// form param depends_on
		var frDependsOn string
		if o.DependsOn != nil {
			frDependsOn = *o.DependsOn
		}
		fDependsOn := frDependsOn
		if fDependsOn != "" {
			if err := r.SetFormParam("depends_on", fDependsOn); err != nil {
				return err
			}
		}

	}

	if o.DependsOnReasons != nil {

		// form param depends_on_reasons
		var frDependsOnReasons string
		if o.DependsOnReasons != nil {
			frDependsOnReasons = *o.DependsOnReasons
		}
		fDependsOnReasons := frDependsOnReasons
		if fDependsOnReasons != "" {
			if err := r.SetFormParam("depends_on_reasons", fDependsOnReasons); err != nil {
				return err
			}
		}

	}

	// form param device
	frDevice := o.Device
	fDevice := frDevice
	if fDevice != "" {
		if err := r.SetFormParam("device", fDevice); err != nil {
			return err
		}
	}

	if o.DeviceReason != nil {

		// form param device_reason
		var frDeviceReason string
		if o.DeviceReason != nil {
			frDeviceReason = *o.DeviceReason
		}
		fDeviceReason := frDeviceReason
		if fDeviceReason != "" {
			if err := r.SetFormParam("device_reason", fDeviceReason); err != nil {
				return err
			}
		}

	}

	if o.GroupOwner != nil {

		// form param group_owner
		var frGroupOwner string
		if o.GroupOwner != nil {
			frGroupOwner = *o.GroupOwner
		}
		fGroupOwner := frGroupOwner
		if fGroupOwner != "" {
			if err := r.SetFormParam("group_owner", fGroupOwner); err != nil {
				return err
			}
		}

	}

	if o.GroupsAffected != nil {

		// form param groups_affected
		var frGroupsAffected string
		if o.GroupsAffected != nil {
			frGroupsAffected = *o.GroupsAffected
		}
		fGroupsAffected := frGroupsAffected
		if fGroupsAffected != "" {
			if err := r.SetFormParam("groups_affected", fGroupsAffected); err != nil {
				return err
			}
		}

	}

	// form param name
	frName := o.Name
	fName := frName
	if fName != "" {
		if err := r.SetFormParam("name", fName); err != nil {
			return err
		}
	}

	if o.What != nil {

		// form param what
		var frWhat string
		if o.What != nil {
			frWhat = *o.What
		}
		fWhat := frWhat
		if fWhat != "" {
			if err := r.SetFormParam("what", fWhat); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
