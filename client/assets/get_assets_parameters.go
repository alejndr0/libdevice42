// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAssetsParams creates a new GetAssetsParams object
// with the default values initialized.
func NewGetAssetsParams() *GetAssetsParams {
	var ()
	return &GetAssetsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAssetsParamsWithTimeout creates a new GetAssetsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAssetsParamsWithTimeout(timeout time.Duration) *GetAssetsParams {
	var ()
	return &GetAssetsParams{

		timeout: timeout,
	}
}

// NewGetAssetsParamsWithContext creates a new GetAssetsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAssetsParamsWithContext(ctx context.Context) *GetAssetsParams {
	var ()
	return &GetAssetsParams{

		Context: ctx,
	}
}

// NewGetAssetsParamsWithHTTPClient creates a new GetAssetsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAssetsParamsWithHTTPClient(client *http.Client) *GetAssetsParams {
	var ()
	return &GetAssetsParams{
		HTTPClient: client,
	}
}

/*GetAssetsParams contains all the parameters to send to the API endpoint
for the get assets operation typically these are written to a http.Request
*/
type GetAssetsParams struct {

	/*AssetID
	  comma separated values of existing assets.

	*/
	AssetID *string
	/*AssetNo
	  filter by asset # (Added in v6.0.0)

	*/
	AssetNo *string
	/*AssetNoContains
	  search for any asset that contains matching asset # (Added in v9.2.0)

	*/
	AssetNoContains *string
	/*CustomFieldsAnd
	  filter by custom fields, and filter, format of key1:value1,key2:value2

	*/
	CustomFieldsAnd *string
	/*CustomFieldsOr
	  filter by custom fields, or filter, format of key1:value1,key2:value2

	*/
	CustomFieldsOr *string
	/*Customer
	  filter by customer name

	*/
	Customer *string
	/*FirstAddedGt
	  first added greater date YYYY-MM-DD format

	*/
	FirstAddedGt *string
	/*FirstAddedLt
	  first added less than date YYYY-MM-DD format

	*/
	FirstAddedLt *string
	/*LastUpdatedGt
	  last updated greater than date YYYY-MM-DD format

	*/
	LastUpdatedGt *string
	/*LastUpdatedLt
	  last updated less than date YYYY-MM-DD format

	*/
	LastUpdatedLt *string
	/*RelatedDeviceID
	  ID of the related device (added in v9.3.0)

	*/
	RelatedDeviceID *string
	/*SerialNo
	  filter by serial # (Added in v6.0.0)

	*/
	SerialNo *string
	/*ServiceLevel
	  filter by service level name

	*/
	ServiceLevel *string
	/*Tags
	  filter by tags. comma separated for multiple tags (This is an OR filter, gets all the devices for all comma separated tags)

	*/
	Tags *string
	/*TagsAnd
	  filter by all the tags, separated by comma. (This is an AND filter and all tags have to match for filter, this was added in v6.3.1)

	*/
	TagsAnd *string
	/*Type
	  filter by asset type

	*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get assets params
func (o *GetAssetsParams) WithTimeout(timeout time.Duration) *GetAssetsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get assets params
func (o *GetAssetsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get assets params
func (o *GetAssetsParams) WithContext(ctx context.Context) *GetAssetsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get assets params
func (o *GetAssetsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get assets params
func (o *GetAssetsParams) WithHTTPClient(client *http.Client) *GetAssetsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get assets params
func (o *GetAssetsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAssetID adds the assetID to the get assets params
func (o *GetAssetsParams) WithAssetID(assetID *string) *GetAssetsParams {
	o.SetAssetID(assetID)
	return o
}

// SetAssetID adds the assetId to the get assets params
func (o *GetAssetsParams) SetAssetID(assetID *string) {
	o.AssetID = assetID
}

// WithAssetNo adds the assetNo to the get assets params
func (o *GetAssetsParams) WithAssetNo(assetNo *string) *GetAssetsParams {
	o.SetAssetNo(assetNo)
	return o
}

// SetAssetNo adds the assetNo to the get assets params
func (o *GetAssetsParams) SetAssetNo(assetNo *string) {
	o.AssetNo = assetNo
}

// WithAssetNoContains adds the assetNoContains to the get assets params
func (o *GetAssetsParams) WithAssetNoContains(assetNoContains *string) *GetAssetsParams {
	o.SetAssetNoContains(assetNoContains)
	return o
}

// SetAssetNoContains adds the assetNoContains to the get assets params
func (o *GetAssetsParams) SetAssetNoContains(assetNoContains *string) {
	o.AssetNoContains = assetNoContains
}

// WithCustomFieldsAnd adds the customFieldsAnd to the get assets params
func (o *GetAssetsParams) WithCustomFieldsAnd(customFieldsAnd *string) *GetAssetsParams {
	o.SetCustomFieldsAnd(customFieldsAnd)
	return o
}

// SetCustomFieldsAnd adds the customFieldsAnd to the get assets params
func (o *GetAssetsParams) SetCustomFieldsAnd(customFieldsAnd *string) {
	o.CustomFieldsAnd = customFieldsAnd
}

// WithCustomFieldsOr adds the customFieldsOr to the get assets params
func (o *GetAssetsParams) WithCustomFieldsOr(customFieldsOr *string) *GetAssetsParams {
	o.SetCustomFieldsOr(customFieldsOr)
	return o
}

// SetCustomFieldsOr adds the customFieldsOr to the get assets params
func (o *GetAssetsParams) SetCustomFieldsOr(customFieldsOr *string) {
	o.CustomFieldsOr = customFieldsOr
}

// WithCustomer adds the customer to the get assets params
func (o *GetAssetsParams) WithCustomer(customer *string) *GetAssetsParams {
	o.SetCustomer(customer)
	return o
}

// SetCustomer adds the customer to the get assets params
func (o *GetAssetsParams) SetCustomer(customer *string) {
	o.Customer = customer
}

// WithFirstAddedGt adds the firstAddedGt to the get assets params
func (o *GetAssetsParams) WithFirstAddedGt(firstAddedGt *string) *GetAssetsParams {
	o.SetFirstAddedGt(firstAddedGt)
	return o
}

// SetFirstAddedGt adds the firstAddedGt to the get assets params
func (o *GetAssetsParams) SetFirstAddedGt(firstAddedGt *string) {
	o.FirstAddedGt = firstAddedGt
}

// WithFirstAddedLt adds the firstAddedLt to the get assets params
func (o *GetAssetsParams) WithFirstAddedLt(firstAddedLt *string) *GetAssetsParams {
	o.SetFirstAddedLt(firstAddedLt)
	return o
}

// SetFirstAddedLt adds the firstAddedLt to the get assets params
func (o *GetAssetsParams) SetFirstAddedLt(firstAddedLt *string) {
	o.FirstAddedLt = firstAddedLt
}

// WithLastUpdatedGt adds the lastUpdatedGt to the get assets params
func (o *GetAssetsParams) WithLastUpdatedGt(lastUpdatedGt *string) *GetAssetsParams {
	o.SetLastUpdatedGt(lastUpdatedGt)
	return o
}

// SetLastUpdatedGt adds the lastUpdatedGt to the get assets params
func (o *GetAssetsParams) SetLastUpdatedGt(lastUpdatedGt *string) {
	o.LastUpdatedGt = lastUpdatedGt
}

// WithLastUpdatedLt adds the lastUpdatedLt to the get assets params
func (o *GetAssetsParams) WithLastUpdatedLt(lastUpdatedLt *string) *GetAssetsParams {
	o.SetLastUpdatedLt(lastUpdatedLt)
	return o
}

// SetLastUpdatedLt adds the lastUpdatedLt to the get assets params
func (o *GetAssetsParams) SetLastUpdatedLt(lastUpdatedLt *string) {
	o.LastUpdatedLt = lastUpdatedLt
}

// WithRelatedDeviceID adds the relatedDeviceID to the get assets params
func (o *GetAssetsParams) WithRelatedDeviceID(relatedDeviceID *string) *GetAssetsParams {
	o.SetRelatedDeviceID(relatedDeviceID)
	return o
}

// SetRelatedDeviceID adds the relatedDeviceId to the get assets params
func (o *GetAssetsParams) SetRelatedDeviceID(relatedDeviceID *string) {
	o.RelatedDeviceID = relatedDeviceID
}

// WithSerialNo adds the serialNo to the get assets params
func (o *GetAssetsParams) WithSerialNo(serialNo *string) *GetAssetsParams {
	o.SetSerialNo(serialNo)
	return o
}

// SetSerialNo adds the serialNo to the get assets params
func (o *GetAssetsParams) SetSerialNo(serialNo *string) {
	o.SerialNo = serialNo
}

// WithServiceLevel adds the serviceLevel to the get assets params
func (o *GetAssetsParams) WithServiceLevel(serviceLevel *string) *GetAssetsParams {
	o.SetServiceLevel(serviceLevel)
	return o
}

// SetServiceLevel adds the serviceLevel to the get assets params
func (o *GetAssetsParams) SetServiceLevel(serviceLevel *string) {
	o.ServiceLevel = serviceLevel
}

// WithTags adds the tags to the get assets params
func (o *GetAssetsParams) WithTags(tags *string) *GetAssetsParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get assets params
func (o *GetAssetsParams) SetTags(tags *string) {
	o.Tags = tags
}

// WithTagsAnd adds the tagsAnd to the get assets params
func (o *GetAssetsParams) WithTagsAnd(tagsAnd *string) *GetAssetsParams {
	o.SetTagsAnd(tagsAnd)
	return o
}

// SetTagsAnd adds the tagsAnd to the get assets params
func (o *GetAssetsParams) SetTagsAnd(tagsAnd *string) {
	o.TagsAnd = tagsAnd
}

// WithType adds the typeVar to the get assets params
func (o *GetAssetsParams) WithType(typeVar *string) *GetAssetsParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get assets params
func (o *GetAssetsParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetAssetsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AssetID != nil {

		// query param asset_id
		var qrAssetID string
		if o.AssetID != nil {
			qrAssetID = *o.AssetID
		}
		qAssetID := qrAssetID
		if qAssetID != "" {
			if err := r.SetQueryParam("asset_id", qAssetID); err != nil {
				return err
			}
		}

	}

	if o.AssetNo != nil {

		// query param asset_no
		var qrAssetNo string
		if o.AssetNo != nil {
			qrAssetNo = *o.AssetNo
		}
		qAssetNo := qrAssetNo
		if qAssetNo != "" {
			if err := r.SetQueryParam("asset_no", qAssetNo); err != nil {
				return err
			}
		}

	}

	if o.AssetNoContains != nil {

		// query param asset_no_contains
		var qrAssetNoContains string
		if o.AssetNoContains != nil {
			qrAssetNoContains = *o.AssetNoContains
		}
		qAssetNoContains := qrAssetNoContains
		if qAssetNoContains != "" {
			if err := r.SetQueryParam("asset_no_contains", qAssetNoContains); err != nil {
				return err
			}
		}

	}

	if o.CustomFieldsAnd != nil {

		// query param custom_fields_and
		var qrCustomFieldsAnd string
		if o.CustomFieldsAnd != nil {
			qrCustomFieldsAnd = *o.CustomFieldsAnd
		}
		qCustomFieldsAnd := qrCustomFieldsAnd
		if qCustomFieldsAnd != "" {
			if err := r.SetQueryParam("custom_fields_and", qCustomFieldsAnd); err != nil {
				return err
			}
		}

	}

	if o.CustomFieldsOr != nil {

		// query param custom_fields_or
		var qrCustomFieldsOr string
		if o.CustomFieldsOr != nil {
			qrCustomFieldsOr = *o.CustomFieldsOr
		}
		qCustomFieldsOr := qrCustomFieldsOr
		if qCustomFieldsOr != "" {
			if err := r.SetQueryParam("custom_fields_or", qCustomFieldsOr); err != nil {
				return err
			}
		}

	}

	if o.Customer != nil {

		// query param customer
		var qrCustomer string
		if o.Customer != nil {
			qrCustomer = *o.Customer
		}
		qCustomer := qrCustomer
		if qCustomer != "" {
			if err := r.SetQueryParam("customer", qCustomer); err != nil {
				return err
			}
		}

	}

	if o.FirstAddedGt != nil {

		// query param first_added_gt
		var qrFirstAddedGt string
		if o.FirstAddedGt != nil {
			qrFirstAddedGt = *o.FirstAddedGt
		}
		qFirstAddedGt := qrFirstAddedGt
		if qFirstAddedGt != "" {
			if err := r.SetQueryParam("first_added_gt", qFirstAddedGt); err != nil {
				return err
			}
		}

	}

	if o.FirstAddedLt != nil {

		// query param first_added_lt
		var qrFirstAddedLt string
		if o.FirstAddedLt != nil {
			qrFirstAddedLt = *o.FirstAddedLt
		}
		qFirstAddedLt := qrFirstAddedLt
		if qFirstAddedLt != "" {
			if err := r.SetQueryParam("first_added_lt", qFirstAddedLt); err != nil {
				return err
			}
		}

	}

	if o.LastUpdatedGt != nil {

		// query param last_updated_gt
		var qrLastUpdatedGt string
		if o.LastUpdatedGt != nil {
			qrLastUpdatedGt = *o.LastUpdatedGt
		}
		qLastUpdatedGt := qrLastUpdatedGt
		if qLastUpdatedGt != "" {
			if err := r.SetQueryParam("last_updated_gt", qLastUpdatedGt); err != nil {
				return err
			}
		}

	}

	if o.LastUpdatedLt != nil {

		// query param last_updated_lt
		var qrLastUpdatedLt string
		if o.LastUpdatedLt != nil {
			qrLastUpdatedLt = *o.LastUpdatedLt
		}
		qLastUpdatedLt := qrLastUpdatedLt
		if qLastUpdatedLt != "" {
			if err := r.SetQueryParam("last_updated_lt", qLastUpdatedLt); err != nil {
				return err
			}
		}

	}

	if o.RelatedDeviceID != nil {

		// query param related_device_id
		var qrRelatedDeviceID string
		if o.RelatedDeviceID != nil {
			qrRelatedDeviceID = *o.RelatedDeviceID
		}
		qRelatedDeviceID := qrRelatedDeviceID
		if qRelatedDeviceID != "" {
			if err := r.SetQueryParam("related_device_id", qRelatedDeviceID); err != nil {
				return err
			}
		}

	}

	if o.SerialNo != nil {

		// query param serial_no
		var qrSerialNo string
		if o.SerialNo != nil {
			qrSerialNo = *o.SerialNo
		}
		qSerialNo := qrSerialNo
		if qSerialNo != "" {
			if err := r.SetQueryParam("serial_no", qSerialNo); err != nil {
				return err
			}
		}

	}

	if o.ServiceLevel != nil {

		// query param service_level
		var qrServiceLevel string
		if o.ServiceLevel != nil {
			qrServiceLevel = *o.ServiceLevel
		}
		qServiceLevel := qrServiceLevel
		if qServiceLevel != "" {
			if err := r.SetQueryParam("service_level", qServiceLevel); err != nil {
				return err
			}
		}

	}

	if o.Tags != nil {

		// query param tags
		var qrTags string
		if o.Tags != nil {
			qrTags = *o.Tags
		}
		qTags := qrTags
		if qTags != "" {
			if err := r.SetQueryParam("tags", qTags); err != nil {
				return err
			}
		}

	}

	if o.TagsAnd != nil {

		// query param tags_and
		var qrTagsAnd string
		if o.TagsAnd != nil {
			qrTagsAnd = *o.TagsAnd
		}
		qTagsAnd := qrTagsAnd
		if qTagsAnd != "" {
			if err := r.SetQueryParam("tags_and", qTagsAnd); err != nil {
				return err
			}
		}

	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
