// Code generated by go-swagger; DO NOT EDIT.

package operating_systems

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostOperatingSystemsReader is a Reader for the PostOperatingSystems structure.
type PostOperatingSystemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOperatingSystemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOperatingSystemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOperatingSystemsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOperatingSystemsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOperatingSystemsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOperatingSystemsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostOperatingSystemsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostOperatingSystemsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOperatingSystemsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOperatingSystemsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostOperatingSystemsOK creates a PostOperatingSystemsOK with default headers values
func NewPostOperatingSystemsOK() *PostOperatingSystemsOK {
	return &PostOperatingSystemsOK{}
}

/*PostOperatingSystemsOK handles this case with default header values.

The above command returns results like this:
*/
type PostOperatingSystemsOK struct {
	Payload *PostOperatingSystemsOKBody
}

func (o *PostOperatingSystemsOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsOK  %+v", 200, o.Payload)
}

func (o *PostOperatingSystemsOK) GetPayload() *PostOperatingSystemsOKBody {
	return o.Payload
}

func (o *PostOperatingSystemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostOperatingSystemsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOperatingSystemsBadRequest creates a PostOperatingSystemsBadRequest with default headers values
func NewPostOperatingSystemsBadRequest() *PostOperatingSystemsBadRequest {
	return &PostOperatingSystemsBadRequest{}
}

/*PostOperatingSystemsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostOperatingSystemsBadRequest struct {
}

func (o *PostOperatingSystemsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsBadRequest ", 400)
}

func (o *PostOperatingSystemsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOperatingSystemsUnauthorized creates a PostOperatingSystemsUnauthorized with default headers values
func NewPostOperatingSystemsUnauthorized() *PostOperatingSystemsUnauthorized {
	return &PostOperatingSystemsUnauthorized{}
}

/*PostOperatingSystemsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostOperatingSystemsUnauthorized struct {
}

func (o *PostOperatingSystemsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsUnauthorized ", 401)
}

func (o *PostOperatingSystemsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOperatingSystemsForbidden creates a PostOperatingSystemsForbidden with default headers values
func NewPostOperatingSystemsForbidden() *PostOperatingSystemsForbidden {
	return &PostOperatingSystemsForbidden{}
}

/*PostOperatingSystemsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostOperatingSystemsForbidden struct {
}

func (o *PostOperatingSystemsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsForbidden ", 403)
}

func (o *PostOperatingSystemsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOperatingSystemsNotFound creates a PostOperatingSystemsNotFound with default headers values
func NewPostOperatingSystemsNotFound() *PostOperatingSystemsNotFound {
	return &PostOperatingSystemsNotFound{}
}

/*PostOperatingSystemsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostOperatingSystemsNotFound struct {
}

func (o *PostOperatingSystemsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsNotFound ", 404)
}

func (o *PostOperatingSystemsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOperatingSystemsMethodNotAllowed creates a PostOperatingSystemsMethodNotAllowed with default headers values
func NewPostOperatingSystemsMethodNotAllowed() *PostOperatingSystemsMethodNotAllowed {
	return &PostOperatingSystemsMethodNotAllowed{}
}

/*PostOperatingSystemsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostOperatingSystemsMethodNotAllowed struct {
}

func (o *PostOperatingSystemsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsMethodNotAllowed ", 405)
}

func (o *PostOperatingSystemsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOperatingSystemsGone creates a PostOperatingSystemsGone with default headers values
func NewPostOperatingSystemsGone() *PostOperatingSystemsGone {
	return &PostOperatingSystemsGone{}
}

/*PostOperatingSystemsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostOperatingSystemsGone struct {
}

func (o *PostOperatingSystemsGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsGone ", 410)
}

func (o *PostOperatingSystemsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOperatingSystemsInternalServerError creates a PostOperatingSystemsInternalServerError with default headers values
func NewPostOperatingSystemsInternalServerError() *PostOperatingSystemsInternalServerError {
	return &PostOperatingSystemsInternalServerError{}
}

/*PostOperatingSystemsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostOperatingSystemsInternalServerError struct {
}

func (o *PostOperatingSystemsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsInternalServerError ", 500)
}

func (o *PostOperatingSystemsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOperatingSystemsServiceUnavailable creates a PostOperatingSystemsServiceUnavailable with default headers values
func NewPostOperatingSystemsServiceUnavailable() *PostOperatingSystemsServiceUnavailable {
	return &PostOperatingSystemsServiceUnavailable{}
}

/*PostOperatingSystemsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostOperatingSystemsServiceUnavailable struct {
}

func (o *PostOperatingSystemsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/operatingsystems/][%d] postOperatingSystemsServiceUnavailable ", 503)
}

func (o *PostOperatingSystemsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostOperatingSystemsOKBody post operating systems o k body
swagger:model PostOperatingSystemsOKBody
*/
type PostOperatingSystemsOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post operating systems o k body
func (o *PostOperatingSystemsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOperatingSystemsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOperatingSystemsOKBody) UnmarshalBinary(b []byte) error {
	var res PostOperatingSystemsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
