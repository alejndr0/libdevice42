// Code generated by go-swagger; DO NOT EDIT.

package operating_systems

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteDeviceOsParams creates a new DeleteDeviceOsParams object
// with the default values initialized.
func NewDeleteDeviceOsParams() *DeleteDeviceOsParams {
	var ()
	return &DeleteDeviceOsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteDeviceOsParamsWithTimeout creates a new DeleteDeviceOsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteDeviceOsParamsWithTimeout(timeout time.Duration) *DeleteDeviceOsParams {
	var ()
	return &DeleteDeviceOsParams{

		timeout: timeout,
	}
}

// NewDeleteDeviceOsParamsWithContext creates a new DeleteDeviceOsParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteDeviceOsParamsWithContext(ctx context.Context) *DeleteDeviceOsParams {
	var ()
	return &DeleteDeviceOsParams{

		Context: ctx,
	}
}

// NewDeleteDeviceOsParamsWithHTTPClient creates a new DeleteDeviceOsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteDeviceOsParamsWithHTTPClient(client *http.Client) *DeleteDeviceOsParams {
	var ()
	return &DeleteDeviceOsParams{
		HTTPClient: client,
	}
}

/*DeleteDeviceOsParams contains all the parameters to send to the API endpoint
for the delete device os operation typically these are written to a http.Request
*/
type DeleteDeviceOsParams struct {

	/*DeviceOsID
	  ID of specific operating system

	*/
	DeviceOsID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete device os params
func (o *DeleteDeviceOsParams) WithTimeout(timeout time.Duration) *DeleteDeviceOsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete device os params
func (o *DeleteDeviceOsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete device os params
func (o *DeleteDeviceOsParams) WithContext(ctx context.Context) *DeleteDeviceOsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete device os params
func (o *DeleteDeviceOsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete device os params
func (o *DeleteDeviceOsParams) WithHTTPClient(client *http.Client) *DeleteDeviceOsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete device os params
func (o *DeleteDeviceOsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeviceOsID adds the deviceOsID to the delete device os params
func (o *DeleteDeviceOsParams) WithDeviceOsID(deviceOsID int64) *DeleteDeviceOsParams {
	o.SetDeviceOsID(deviceOsID)
	return o
}

// SetDeviceOsID adds the deviceOsId to the delete device os params
func (o *DeleteDeviceOsParams) SetDeviceOsID(deviceOsID int64) {
	o.DeviceOsID = deviceOsID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteDeviceOsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param device_os_id
	if err := r.SetPathParam("device_os_id", swag.FormatInt64(o.DeviceOsID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
