// Code generated by go-swagger; DO NOT EDIT.

package asset_device_life_cycle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetLifecycleEventReader is a Reader for the GetLifecycleEvent structure.
type GetLifecycleEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLifecycleEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLifecycleEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLifecycleEventBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLifecycleEventUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLifecycleEventForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLifecycleEventNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetLifecycleEventMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetLifecycleEventGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLifecycleEventInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLifecycleEventServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLifecycleEventOK creates a GetLifecycleEventOK with default headers values
func NewGetLifecycleEventOK() *GetLifecycleEventOK {
	return &GetLifecycleEventOK{}
}

/*GetLifecycleEventOK handles this case with default header values.

The above command returns results like this:
*/
type GetLifecycleEventOK struct {
	Payload *GetLifecycleEventOKBody
}

func (o *GetLifecycleEventOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventOK  %+v", 200, o.Payload)
}

func (o *GetLifecycleEventOK) GetPayload() *GetLifecycleEventOKBody {
	return o.Payload
}

func (o *GetLifecycleEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetLifecycleEventOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLifecycleEventBadRequest creates a GetLifecycleEventBadRequest with default headers values
func NewGetLifecycleEventBadRequest() *GetLifecycleEventBadRequest {
	return &GetLifecycleEventBadRequest{}
}

/*GetLifecycleEventBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetLifecycleEventBadRequest struct {
}

func (o *GetLifecycleEventBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventBadRequest ", 400)
}

func (o *GetLifecycleEventBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLifecycleEventUnauthorized creates a GetLifecycleEventUnauthorized with default headers values
func NewGetLifecycleEventUnauthorized() *GetLifecycleEventUnauthorized {
	return &GetLifecycleEventUnauthorized{}
}

/*GetLifecycleEventUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetLifecycleEventUnauthorized struct {
}

func (o *GetLifecycleEventUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventUnauthorized ", 401)
}

func (o *GetLifecycleEventUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLifecycleEventForbidden creates a GetLifecycleEventForbidden with default headers values
func NewGetLifecycleEventForbidden() *GetLifecycleEventForbidden {
	return &GetLifecycleEventForbidden{}
}

/*GetLifecycleEventForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetLifecycleEventForbidden struct {
}

func (o *GetLifecycleEventForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventForbidden ", 403)
}

func (o *GetLifecycleEventForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLifecycleEventNotFound creates a GetLifecycleEventNotFound with default headers values
func NewGetLifecycleEventNotFound() *GetLifecycleEventNotFound {
	return &GetLifecycleEventNotFound{}
}

/*GetLifecycleEventNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetLifecycleEventNotFound struct {
}

func (o *GetLifecycleEventNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventNotFound ", 404)
}

func (o *GetLifecycleEventNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLifecycleEventMethodNotAllowed creates a GetLifecycleEventMethodNotAllowed with default headers values
func NewGetLifecycleEventMethodNotAllowed() *GetLifecycleEventMethodNotAllowed {
	return &GetLifecycleEventMethodNotAllowed{}
}

/*GetLifecycleEventMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetLifecycleEventMethodNotAllowed struct {
}

func (o *GetLifecycleEventMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventMethodNotAllowed ", 405)
}

func (o *GetLifecycleEventMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLifecycleEventGone creates a GetLifecycleEventGone with default headers values
func NewGetLifecycleEventGone() *GetLifecycleEventGone {
	return &GetLifecycleEventGone{}
}

/*GetLifecycleEventGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetLifecycleEventGone struct {
}

func (o *GetLifecycleEventGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventGone ", 410)
}

func (o *GetLifecycleEventGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLifecycleEventInternalServerError creates a GetLifecycleEventInternalServerError with default headers values
func NewGetLifecycleEventInternalServerError() *GetLifecycleEventInternalServerError {
	return &GetLifecycleEventInternalServerError{}
}

/*GetLifecycleEventInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetLifecycleEventInternalServerError struct {
}

func (o *GetLifecycleEventInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventInternalServerError ", 500)
}

func (o *GetLifecycleEventInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLifecycleEventServiceUnavailable creates a GetLifecycleEventServiceUnavailable with default headers values
func NewGetLifecycleEventServiceUnavailable() *GetLifecycleEventServiceUnavailable {
	return &GetLifecycleEventServiceUnavailable{}
}

/*GetLifecycleEventServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetLifecycleEventServiceUnavailable struct {
}

func (o *GetLifecycleEventServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/lifecycle_event/][%d] getLifecycleEventServiceUnavailable ", 503)
}

func (o *GetLifecycleEventServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetLifecycleEventOKBody get lifecycle event o k body
swagger:model GetLifecycleEventOKBody
*/
type GetLifecycleEventOKBody struct {

	// lifecycle events
	LifecycleEvents []*LifecycleEventsItems0 `json:"lifecycle_events"`
}

// Validate validates this get lifecycle event o k body
func (o *GetLifecycleEventOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLifecycleEvents(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLifecycleEventOKBody) validateLifecycleEvents(formats strfmt.Registry) error {

	if swag.IsZero(o.LifecycleEvents) { // not required
		return nil
	}

	for i := 0; i < len(o.LifecycleEvents); i++ {
		if swag.IsZero(o.LifecycleEvents[i]) { // not required
			continue
		}

		if o.LifecycleEvents[i] != nil {
			if err := o.LifecycleEvents[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getLifecycleEventOK" + "." + "lifecycle_events" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetLifecycleEventOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLifecycleEventOKBody) UnmarshalBinary(b []byte) error {
	var res GetLifecycleEventOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LifecycleEventsItems0 lifecycle events items0
swagger:model LifecycleEventsItems0
*/
type LifecycleEventsItems0 struct {

	// asset id
	AssetID interface{} `json:"asset_id,omitempty"`

	// asset name
	AssetName interface{} `json:"asset_name,omitempty"`

	// date
	Date interface{} `json:"date,omitempty"`

	// enduser
	Enduser interface{} `json:"enduser,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// type
	Type interface{} `json:"type,omitempty"`
}

// Validate validates this lifecycle events items0
func (o *LifecycleEventsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LifecycleEventsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LifecycleEventsItems0) UnmarshalBinary(b []byte) error {
	var res LifecycleEventsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
