// Code generated by go-swagger; DO NOT EDIT.

package parts_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new parts management API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for parts management API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeletePartmodels(params *DeletePartmodelsParams) (*DeletePartmodelsOK, error)

	DeleteParts(params *DeletePartsParams) (*DeletePartsOK, error)

	GetPartmodels(params *GetPartmodelsParams) (*GetPartmodelsOK, error)

	GetParts(params *GetPartsParams) (*GetPartsOK, error)

	PostPartmodels(params *PostPartmodelsParams) (*PostPartmodelsOK, error)

	PostParts(params *PostPartsParams) (*PostPartsOK, error)

	PutCustomFieldPart(params *PutCustomFieldPartParams) (*PutCustomFieldPartOK, error)

	PutCustomFieldPartmodel(params *PutCustomFieldPartmodelParams) (*PutCustomFieldPartmodelOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeletePartmodels deletes part model

  This API is used to delete the part model with the part model id supplied as the required argument.
*/
func (a *Client) DeletePartmodels(params *DeletePartmodelsParams) (*DeletePartmodelsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeletePartmodelsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deletePartmodels",
		Method:             "DELETE",
		PathPattern:        "/api/1.0/partmodels/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeletePartmodelsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeletePartmodelsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deletePartmodels: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteParts deletes part

  This API is used to delete the part with the part id supplied as the required argument.
*/
func (a *Client) DeleteParts(params *DeletePartsParams) (*DeletePartsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeletePartsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteParts",
		Method:             "DELETE",
		PathPattern:        "/api/1.0/parts/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeletePartsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeletePartsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteParts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetPartmodels gets all part models introduced in version 5 7 2

  Get all Part Models
*/
func (a *Client) GetPartmodels(params *GetPartmodelsParams) (*GetPartmodelsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPartmodelsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getPartmodels",
		Method:             "GET",
		PathPattern:        "/api/1.0/partmodels/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetPartmodelsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPartmodelsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPartmodels: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetParts gets all parts introduced in version 5 7 2

  Get all Parts
*/
func (a *Client) GetParts(params *GetPartsParams) (*GetPartsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPartsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getParts",
		Method:             "GET",
		PathPattern:        "/api/1.0/parts/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetPartsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPartsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getParts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostPartmodels creates update part models introduced in version 5 7 2

  Create / Update Part Models
*/
func (a *Client) PostPartmodels(params *PostPartmodelsParams) (*PostPartmodelsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPartmodelsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "postPartmodels",
		Method:             "POST",
		PathPattern:        "/api/1.0/partmodels/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostPartmodelsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostPartmodelsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postPartmodels: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostParts creates update parts introduced in version 5 7 2

  Create / Update Parts
*/
func (a *Client) PostParts(params *PostPartsParams) (*PostPartsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPartsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "postParts",
		Method:             "POST",
		PathPattern:        "/api/1.0/parts/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostPartsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostPartsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postParts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutCustomFieldPart creates update existing custom fields for parts

  Create/updated custom fields for parts.
*/
func (a *Client) PutCustomFieldPart(params *PutCustomFieldPartParams) (*PutCustomFieldPartOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutCustomFieldPartParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "putCustom_FieldPart",
		Method:             "PUT",
		PathPattern:        "/api/1.0/custom_fields/part/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PutCustomFieldPartReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutCustomFieldPartOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for putCustom_FieldPart: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutCustomFieldPartmodel creates update custom fields for part models

  Custom Fields
*/
func (a *Client) PutCustomFieldPartmodel(params *PutCustomFieldPartmodelParams) (*PutCustomFieldPartmodelOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutCustomFieldPartmodelParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "putCustom_FieldPartmodel",
		Method:             "PUT",
		PathPattern:        "/api/1.0/custom_fields/partmodel/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PutCustomFieldPartmodelReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutCustomFieldPartmodelOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for putCustom_FieldPartmodel: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
