// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostScheduledTasksReader is a Reader for the PostScheduledTasks structure.
type PostScheduledTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostScheduledTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostScheduledTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostScheduledTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostScheduledTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostScheduledTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostScheduledTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostScheduledTasksMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostScheduledTasksGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostScheduledTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostScheduledTasksServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostScheduledTasksOK creates a PostScheduledTasksOK with default headers values
func NewPostScheduledTasksOK() *PostScheduledTasksOK {
	return &PostScheduledTasksOK{}
}

/*PostScheduledTasksOK handles this case with default header values.

The above command returns results like this:
*/
type PostScheduledTasksOK struct {
	Payload *PostScheduledTasksOKBody
}

func (o *PostScheduledTasksOK) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksOK  %+v", 200, o.Payload)
}

func (o *PostScheduledTasksOK) GetPayload() *PostScheduledTasksOKBody {
	return o.Payload
}

func (o *PostScheduledTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostScheduledTasksOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScheduledTasksBadRequest creates a PostScheduledTasksBadRequest with default headers values
func NewPostScheduledTasksBadRequest() *PostScheduledTasksBadRequest {
	return &PostScheduledTasksBadRequest{}
}

/*PostScheduledTasksBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostScheduledTasksBadRequest struct {
}

func (o *PostScheduledTasksBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksBadRequest ", 400)
}

func (o *PostScheduledTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostScheduledTasksUnauthorized creates a PostScheduledTasksUnauthorized with default headers values
func NewPostScheduledTasksUnauthorized() *PostScheduledTasksUnauthorized {
	return &PostScheduledTasksUnauthorized{}
}

/*PostScheduledTasksUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostScheduledTasksUnauthorized struct {
}

func (o *PostScheduledTasksUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksUnauthorized ", 401)
}

func (o *PostScheduledTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostScheduledTasksForbidden creates a PostScheduledTasksForbidden with default headers values
func NewPostScheduledTasksForbidden() *PostScheduledTasksForbidden {
	return &PostScheduledTasksForbidden{}
}

/*PostScheduledTasksForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostScheduledTasksForbidden struct {
}

func (o *PostScheduledTasksForbidden) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksForbidden ", 403)
}

func (o *PostScheduledTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostScheduledTasksNotFound creates a PostScheduledTasksNotFound with default headers values
func NewPostScheduledTasksNotFound() *PostScheduledTasksNotFound {
	return &PostScheduledTasksNotFound{}
}

/*PostScheduledTasksNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostScheduledTasksNotFound struct {
}

func (o *PostScheduledTasksNotFound) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksNotFound ", 404)
}

func (o *PostScheduledTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostScheduledTasksMethodNotAllowed creates a PostScheduledTasksMethodNotAllowed with default headers values
func NewPostScheduledTasksMethodNotAllowed() *PostScheduledTasksMethodNotAllowed {
	return &PostScheduledTasksMethodNotAllowed{}
}

/*PostScheduledTasksMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostScheduledTasksMethodNotAllowed struct {
}

func (o *PostScheduledTasksMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksMethodNotAllowed ", 405)
}

func (o *PostScheduledTasksMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostScheduledTasksGone creates a PostScheduledTasksGone with default headers values
func NewPostScheduledTasksGone() *PostScheduledTasksGone {
	return &PostScheduledTasksGone{}
}

/*PostScheduledTasksGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostScheduledTasksGone struct {
}

func (o *PostScheduledTasksGone) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksGone ", 410)
}

func (o *PostScheduledTasksGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostScheduledTasksInternalServerError creates a PostScheduledTasksInternalServerError with default headers values
func NewPostScheduledTasksInternalServerError() *PostScheduledTasksInternalServerError {
	return &PostScheduledTasksInternalServerError{}
}

/*PostScheduledTasksInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostScheduledTasksInternalServerError struct {
}

func (o *PostScheduledTasksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksInternalServerError ", 500)
}

func (o *PostScheduledTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostScheduledTasksServiceUnavailable creates a PostScheduledTasksServiceUnavailable with default headers values
func NewPostScheduledTasksServiceUnavailable() *PostScheduledTasksServiceUnavailable {
	return &PostScheduledTasksServiceUnavailable{}
}

/*PostScheduledTasksServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostScheduledTasksServiceUnavailable struct {
}

func (o *PostScheduledTasksServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/2.0/scheduled_tasks/][%d] postScheduledTasksServiceUnavailable ", 503)
}

func (o *PostScheduledTasksServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostScheduledTasksOKBody post scheduled tasks o k body
swagger:model PostScheduledTasksOKBody
*/
type PostScheduledTasksOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post scheduled tasks o k body
func (o *PostScheduledTasksOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostScheduledTasksOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostScheduledTasksOKBody) UnmarshalBinary(b []byte) error {
	var res PostScheduledTasksOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
