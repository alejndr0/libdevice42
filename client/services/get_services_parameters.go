// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetServicesParams creates a new GetServicesParams object
// with the default values initialized.
func NewGetServicesParams() *GetServicesParams {
	var ()
	return &GetServicesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetServicesParamsWithTimeout creates a new GetServicesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetServicesParamsWithTimeout(timeout time.Duration) *GetServicesParams {
	var ()
	return &GetServicesParams{

		timeout: timeout,
	}
}

// NewGetServicesParamsWithContext creates a new GetServicesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetServicesParamsWithContext(ctx context.Context) *GetServicesParams {
	var ()
	return &GetServicesParams{

		Context: ctx,
	}
}

// NewGetServicesParamsWithHTTPClient creates a new GetServicesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetServicesParamsWithHTTPClient(client *http.Client) *GetServicesParams {
	var ()
	return &GetServicesParams{
		HTTPClient: client,
	}
}

/*GetServicesParams contains all the parameters to send to the API endpoint
for the get services operation typically these are written to a http.Request
*/
type GetServicesParams struct {

	/*Category
	  name of the category

	*/
	Category *string
	/*Name
	  filter by name (Added in v6.0.0)

	*/
	Name *string
	/*ServiceID
	  D42 ID of the service

	*/
	ServiceID string
	/*Vendor
	  The cloud vendor

	*/
	Vendor *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get services params
func (o *GetServicesParams) WithTimeout(timeout time.Duration) *GetServicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get services params
func (o *GetServicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get services params
func (o *GetServicesParams) WithContext(ctx context.Context) *GetServicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get services params
func (o *GetServicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get services params
func (o *GetServicesParams) WithHTTPClient(client *http.Client) *GetServicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get services params
func (o *GetServicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCategory adds the category to the get services params
func (o *GetServicesParams) WithCategory(category *string) *GetServicesParams {
	o.SetCategory(category)
	return o
}

// SetCategory adds the category to the get services params
func (o *GetServicesParams) SetCategory(category *string) {
	o.Category = category
}

// WithName adds the name to the get services params
func (o *GetServicesParams) WithName(name *string) *GetServicesParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get services params
func (o *GetServicesParams) SetName(name *string) {
	o.Name = name
}

// WithServiceID adds the serviceID to the get services params
func (o *GetServicesParams) WithServiceID(serviceID string) *GetServicesParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the get services params
func (o *GetServicesParams) SetServiceID(serviceID string) {
	o.ServiceID = serviceID
}

// WithVendor adds the vendor to the get services params
func (o *GetServicesParams) WithVendor(vendor *string) *GetServicesParams {
	o.SetVendor(vendor)
	return o
}

// SetVendor adds the vendor to the get services params
func (o *GetServicesParams) SetVendor(vendor *string) {
	o.Vendor = vendor
}

// WriteToRequest writes these params to a swagger request
func (o *GetServicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Category != nil {

		// query param category
		var qrCategory string
		if o.Category != nil {
			qrCategory = *o.Category
		}
		qCategory := qrCategory
		if qCategory != "" {
			if err := r.SetQueryParam("category", qCategory); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	// query param service_id
	qrServiceID := o.ServiceID
	qServiceID := qrServiceID
	if qServiceID != "" {
		if err := r.SetQueryParam("service_id", qServiceID); err != nil {
			return err
		}
	}

	if o.Vendor != nil {

		// query param vendor
		var qrVendor string
		if o.Vendor != nil {
			qrVendor = *o.Vendor
		}
		qVendor := qrVendor
		if qVendor != "" {
			if err := r.SetQueryParam("vendor", qVendor); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
