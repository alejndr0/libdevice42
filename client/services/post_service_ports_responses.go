// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostServicePortsReader is a Reader for the PostServicePorts structure.
type PostServicePortsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostServicePortsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostServicePortsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostServicePortsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostServicePortsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostServicePortsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostServicePortsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostServicePortsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostServicePortsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostServicePortsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostServicePortsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostServicePortsOK creates a PostServicePortsOK with default headers values
func NewPostServicePortsOK() *PostServicePortsOK {
	return &PostServicePortsOK{}
}

/*PostServicePortsOK handles this case with default header values.

The above command returns results like this:
*/
type PostServicePortsOK struct {
	Payload *PostServicePortsOKBody
}

func (o *PostServicePortsOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsOK  %+v", 200, o.Payload)
}

func (o *PostServicePortsOK) GetPayload() *PostServicePortsOKBody {
	return o.Payload
}

func (o *PostServicePortsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostServicePortsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostServicePortsBadRequest creates a PostServicePortsBadRequest with default headers values
func NewPostServicePortsBadRequest() *PostServicePortsBadRequest {
	return &PostServicePortsBadRequest{}
}

/*PostServicePortsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostServicePortsBadRequest struct {
}

func (o *PostServicePortsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsBadRequest ", 400)
}

func (o *PostServicePortsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostServicePortsUnauthorized creates a PostServicePortsUnauthorized with default headers values
func NewPostServicePortsUnauthorized() *PostServicePortsUnauthorized {
	return &PostServicePortsUnauthorized{}
}

/*PostServicePortsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostServicePortsUnauthorized struct {
}

func (o *PostServicePortsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsUnauthorized ", 401)
}

func (o *PostServicePortsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostServicePortsForbidden creates a PostServicePortsForbidden with default headers values
func NewPostServicePortsForbidden() *PostServicePortsForbidden {
	return &PostServicePortsForbidden{}
}

/*PostServicePortsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostServicePortsForbidden struct {
}

func (o *PostServicePortsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsForbidden ", 403)
}

func (o *PostServicePortsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostServicePortsNotFound creates a PostServicePortsNotFound with default headers values
func NewPostServicePortsNotFound() *PostServicePortsNotFound {
	return &PostServicePortsNotFound{}
}

/*PostServicePortsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostServicePortsNotFound struct {
}

func (o *PostServicePortsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsNotFound ", 404)
}

func (o *PostServicePortsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostServicePortsMethodNotAllowed creates a PostServicePortsMethodNotAllowed with default headers values
func NewPostServicePortsMethodNotAllowed() *PostServicePortsMethodNotAllowed {
	return &PostServicePortsMethodNotAllowed{}
}

/*PostServicePortsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostServicePortsMethodNotAllowed struct {
}

func (o *PostServicePortsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsMethodNotAllowed ", 405)
}

func (o *PostServicePortsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostServicePortsGone creates a PostServicePortsGone with default headers values
func NewPostServicePortsGone() *PostServicePortsGone {
	return &PostServicePortsGone{}
}

/*PostServicePortsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostServicePortsGone struct {
}

func (o *PostServicePortsGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsGone ", 410)
}

func (o *PostServicePortsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostServicePortsInternalServerError creates a PostServicePortsInternalServerError with default headers values
func NewPostServicePortsInternalServerError() *PostServicePortsInternalServerError {
	return &PostServicePortsInternalServerError{}
}

/*PostServicePortsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostServicePortsInternalServerError struct {
}

func (o *PostServicePortsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsInternalServerError ", 500)
}

func (o *PostServicePortsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostServicePortsServiceUnavailable creates a PostServicePortsServiceUnavailable with default headers values
func NewPostServicePortsServiceUnavailable() *PostServicePortsServiceUnavailable {
	return &PostServicePortsServiceUnavailable{}
}

/*PostServicePortsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostServicePortsServiceUnavailable struct {
}

func (o *PostServicePortsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/service_ports/][%d] postServicePortsServiceUnavailable ", 503)
}

func (o *PostServicePortsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostServicePortsOKBody post service ports o k body
swagger:model PostServicePortsOKBody
*/
type PostServicePortsOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post service ports o k body
func (o *PostServicePortsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostServicePortsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostServicePortsOKBody) UnmarshalBinary(b []byte) error {
	var res PostServicePortsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
