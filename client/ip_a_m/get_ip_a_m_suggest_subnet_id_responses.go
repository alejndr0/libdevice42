// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetIPAMSuggestSubnetIDReader is a Reader for the GetIPAMSuggestSubnetID structure.
type GetIPAMSuggestSubnetIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIPAMSuggestSubnetIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIPAMSuggestSubnetIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIPAMSuggestSubnetIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIPAMSuggestSubnetIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIPAMSuggestSubnetIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIPAMSuggestSubnetIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetIPAMSuggestSubnetIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetIPAMSuggestSubnetIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIPAMSuggestSubnetIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIPAMSuggestSubnetIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIPAMSuggestSubnetIDOK creates a GetIPAMSuggestSubnetIDOK with default headers values
func NewGetIPAMSuggestSubnetIDOK() *GetIPAMSuggestSubnetIDOK {
	return &GetIPAMSuggestSubnetIDOK{}
}

/*GetIPAMSuggestSubnetIDOK handles this case with default header values.

The above command returns results like this:
*/
type GetIPAMSuggestSubnetIDOK struct {
	Payload *GetIPAMSuggestSubnetIDOKBody
}

func (o *GetIPAMSuggestSubnetIDOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdOK  %+v", 200, o.Payload)
}

func (o *GetIPAMSuggestSubnetIDOK) GetPayload() *GetIPAMSuggestSubnetIDOKBody {
	return o.Payload
}

func (o *GetIPAMSuggestSubnetIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetIPAMSuggestSubnetIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIPAMSuggestSubnetIDBadRequest creates a GetIPAMSuggestSubnetIDBadRequest with default headers values
func NewGetIPAMSuggestSubnetIDBadRequest() *GetIPAMSuggestSubnetIDBadRequest {
	return &GetIPAMSuggestSubnetIDBadRequest{}
}

/*GetIPAMSuggestSubnetIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetIPAMSuggestSubnetIDBadRequest struct {
}

func (o *GetIPAMSuggestSubnetIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdBadRequest ", 400)
}

func (o *GetIPAMSuggestSubnetIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSuggestSubnetIDUnauthorized creates a GetIPAMSuggestSubnetIDUnauthorized with default headers values
func NewGetIPAMSuggestSubnetIDUnauthorized() *GetIPAMSuggestSubnetIDUnauthorized {
	return &GetIPAMSuggestSubnetIDUnauthorized{}
}

/*GetIPAMSuggestSubnetIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetIPAMSuggestSubnetIDUnauthorized struct {
}

func (o *GetIPAMSuggestSubnetIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdUnauthorized ", 401)
}

func (o *GetIPAMSuggestSubnetIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSuggestSubnetIDForbidden creates a GetIPAMSuggestSubnetIDForbidden with default headers values
func NewGetIPAMSuggestSubnetIDForbidden() *GetIPAMSuggestSubnetIDForbidden {
	return &GetIPAMSuggestSubnetIDForbidden{}
}

/*GetIPAMSuggestSubnetIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetIPAMSuggestSubnetIDForbidden struct {
}

func (o *GetIPAMSuggestSubnetIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdForbidden ", 403)
}

func (o *GetIPAMSuggestSubnetIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSuggestSubnetIDNotFound creates a GetIPAMSuggestSubnetIDNotFound with default headers values
func NewGetIPAMSuggestSubnetIDNotFound() *GetIPAMSuggestSubnetIDNotFound {
	return &GetIPAMSuggestSubnetIDNotFound{}
}

/*GetIPAMSuggestSubnetIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetIPAMSuggestSubnetIDNotFound struct {
}

func (o *GetIPAMSuggestSubnetIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdNotFound ", 404)
}

func (o *GetIPAMSuggestSubnetIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSuggestSubnetIDMethodNotAllowed creates a GetIPAMSuggestSubnetIDMethodNotAllowed with default headers values
func NewGetIPAMSuggestSubnetIDMethodNotAllowed() *GetIPAMSuggestSubnetIDMethodNotAllowed {
	return &GetIPAMSuggestSubnetIDMethodNotAllowed{}
}

/*GetIPAMSuggestSubnetIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetIPAMSuggestSubnetIDMethodNotAllowed struct {
}

func (o *GetIPAMSuggestSubnetIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdMethodNotAllowed ", 405)
}

func (o *GetIPAMSuggestSubnetIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSuggestSubnetIDGone creates a GetIPAMSuggestSubnetIDGone with default headers values
func NewGetIPAMSuggestSubnetIDGone() *GetIPAMSuggestSubnetIDGone {
	return &GetIPAMSuggestSubnetIDGone{}
}

/*GetIPAMSuggestSubnetIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetIPAMSuggestSubnetIDGone struct {
}

func (o *GetIPAMSuggestSubnetIDGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdGone ", 410)
}

func (o *GetIPAMSuggestSubnetIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSuggestSubnetIDInternalServerError creates a GetIPAMSuggestSubnetIDInternalServerError with default headers values
func NewGetIPAMSuggestSubnetIDInternalServerError() *GetIPAMSuggestSubnetIDInternalServerError {
	return &GetIPAMSuggestSubnetIDInternalServerError{}
}

/*GetIPAMSuggestSubnetIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetIPAMSuggestSubnetIDInternalServerError struct {
}

func (o *GetIPAMSuggestSubnetIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdInternalServerError ", 500)
}

func (o *GetIPAMSuggestSubnetIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSuggestSubnetIDServiceUnavailable creates a GetIPAMSuggestSubnetIDServiceUnavailable with default headers values
func NewGetIPAMSuggestSubnetIDServiceUnavailable() *GetIPAMSuggestSubnetIDServiceUnavailable {
	return &GetIPAMSuggestSubnetIDServiceUnavailable{}
}

/*GetIPAMSuggestSubnetIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetIPAMSuggestSubnetIDServiceUnavailable struct {
}

func (o *GetIPAMSuggestSubnetIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/suggest_subnet/{id}/][%d] getIpAMSuggestSubnetIdServiceUnavailable ", 503)
}

func (o *GetIPAMSuggestSubnetIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetIPAMSuggestSubnetIDOKBody get IP a m suggest subnet ID o k body
swagger:model GetIPAMSuggestSubnetIDOKBody
*/
type GetIPAMSuggestSubnetIDOKBody struct {

	// ip
	IP interface{} `json:"ip,omitempty"`

	// mask
	Mask interface{} `json:"mask,omitempty"`
}

// Validate validates this get IP a m suggest subnet ID o k body
func (o *GetIPAMSuggestSubnetIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIPAMSuggestSubnetIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIPAMSuggestSubnetIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetIPAMSuggestSubnetIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
