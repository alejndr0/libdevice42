// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteIPAMIpnatReader is a Reader for the DeleteIPAMIpnat structure.
type DeleteIPAMIpnatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIPAMIpnatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIPAMIpnatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIPAMIpnatBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIPAMIpnatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIPAMIpnatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteIPAMIpnatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteIPAMIpnatMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewDeleteIPAMIpnatGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteIPAMIpnatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteIPAMIpnatServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteIPAMIpnatOK creates a DeleteIPAMIpnatOK with default headers values
func NewDeleteIPAMIpnatOK() *DeleteIPAMIpnatOK {
	return &DeleteIPAMIpnatOK{}
}

/*DeleteIPAMIpnatOK handles this case with default header values.

The above command returns results like this:
*/
type DeleteIPAMIpnatOK struct {
	Payload *DeleteIPAMIpnatOKBody
}

func (o *DeleteIPAMIpnatOK) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatOK  %+v", 200, o.Payload)
}

func (o *DeleteIPAMIpnatOK) GetPayload() *DeleteIPAMIpnatOKBody {
	return o.Payload
}

func (o *DeleteIPAMIpnatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteIPAMIpnatOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIPAMIpnatBadRequest creates a DeleteIPAMIpnatBadRequest with default headers values
func NewDeleteIPAMIpnatBadRequest() *DeleteIPAMIpnatBadRequest {
	return &DeleteIPAMIpnatBadRequest{}
}

/*DeleteIPAMIpnatBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type DeleteIPAMIpnatBadRequest struct {
}

func (o *DeleteIPAMIpnatBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatBadRequest ", 400)
}

func (o *DeleteIPAMIpnatBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMIpnatUnauthorized creates a DeleteIPAMIpnatUnauthorized with default headers values
func NewDeleteIPAMIpnatUnauthorized() *DeleteIPAMIpnatUnauthorized {
	return &DeleteIPAMIpnatUnauthorized{}
}

/*DeleteIPAMIpnatUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type DeleteIPAMIpnatUnauthorized struct {
}

func (o *DeleteIPAMIpnatUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatUnauthorized ", 401)
}

func (o *DeleteIPAMIpnatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMIpnatForbidden creates a DeleteIPAMIpnatForbidden with default headers values
func NewDeleteIPAMIpnatForbidden() *DeleteIPAMIpnatForbidden {
	return &DeleteIPAMIpnatForbidden{}
}

/*DeleteIPAMIpnatForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type DeleteIPAMIpnatForbidden struct {
}

func (o *DeleteIPAMIpnatForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatForbidden ", 403)
}

func (o *DeleteIPAMIpnatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMIpnatNotFound creates a DeleteIPAMIpnatNotFound with default headers values
func NewDeleteIPAMIpnatNotFound() *DeleteIPAMIpnatNotFound {
	return &DeleteIPAMIpnatNotFound{}
}

/*DeleteIPAMIpnatNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type DeleteIPAMIpnatNotFound struct {
}

func (o *DeleteIPAMIpnatNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatNotFound ", 404)
}

func (o *DeleteIPAMIpnatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMIpnatMethodNotAllowed creates a DeleteIPAMIpnatMethodNotAllowed with default headers values
func NewDeleteIPAMIpnatMethodNotAllowed() *DeleteIPAMIpnatMethodNotAllowed {
	return &DeleteIPAMIpnatMethodNotAllowed{}
}

/*DeleteIPAMIpnatMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type DeleteIPAMIpnatMethodNotAllowed struct {
}

func (o *DeleteIPAMIpnatMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatMethodNotAllowed ", 405)
}

func (o *DeleteIPAMIpnatMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMIpnatGone creates a DeleteIPAMIpnatGone with default headers values
func NewDeleteIPAMIpnatGone() *DeleteIPAMIpnatGone {
	return &DeleteIPAMIpnatGone{}
}

/*DeleteIPAMIpnatGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type DeleteIPAMIpnatGone struct {
}

func (o *DeleteIPAMIpnatGone) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatGone ", 410)
}

func (o *DeleteIPAMIpnatGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMIpnatInternalServerError creates a DeleteIPAMIpnatInternalServerError with default headers values
func NewDeleteIPAMIpnatInternalServerError() *DeleteIPAMIpnatInternalServerError {
	return &DeleteIPAMIpnatInternalServerError{}
}

/*DeleteIPAMIpnatInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type DeleteIPAMIpnatInternalServerError struct {
}

func (o *DeleteIPAMIpnatInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatInternalServerError ", 500)
}

func (o *DeleteIPAMIpnatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMIpnatServiceUnavailable creates a DeleteIPAMIpnatServiceUnavailable with default headers values
func NewDeleteIPAMIpnatServiceUnavailable() *DeleteIPAMIpnatServiceUnavailable {
	return &DeleteIPAMIpnatServiceUnavailable{}
}

/*DeleteIPAMIpnatServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type DeleteIPAMIpnatServiceUnavailable struct {
}

func (o *DeleteIPAMIpnatServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/ipnat/{id}][%d] deleteIpAMIpnatServiceUnavailable ", 503)
}

func (o *DeleteIPAMIpnatServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DeleteIPAMIpnatOKBody delete IP a m ipnat o k body
swagger:model DeleteIPAMIpnatOKBody
*/
type DeleteIPAMIpnatOKBody struct {

	// deleted
	Deleted interface{} `json:"deleted,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`
}

// Validate validates this delete IP a m ipnat o k body
func (o *DeleteIPAMIpnatOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteIPAMIpnatOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteIPAMIpnatOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteIPAMIpnatOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
