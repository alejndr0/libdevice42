// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetIPAMvrfgroupReader is a Reader for the GetIPAMvrfgroup structure.
type GetIPAMvrfgroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIPAMvrfgroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIPAMvrfgroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIPAMvrfgroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIPAMvrfgroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIPAMvrfgroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIPAMvrfgroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetIPAMvrfgroupMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetIPAMvrfgroupGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIPAMvrfgroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIPAMvrfgroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIPAMvrfgroupOK creates a GetIPAMvrfgroupOK with default headers values
func NewGetIPAMvrfgroupOK() *GetIPAMvrfgroupOK {
	return &GetIPAMvrfgroupOK{}
}

/*GetIPAMvrfgroupOK handles this case with default header values.

The above command returns results like this:
*/
type GetIPAMvrfgroupOK struct {
	Payload []*GetIPAMvrfgroupOKBodyItems0
}

func (o *GetIPAMvrfgroupOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupOK  %+v", 200, o.Payload)
}

func (o *GetIPAMvrfgroupOK) GetPayload() []*GetIPAMvrfgroupOKBodyItems0 {
	return o.Payload
}

func (o *GetIPAMvrfgroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIPAMvrfgroupBadRequest creates a GetIPAMvrfgroupBadRequest with default headers values
func NewGetIPAMvrfgroupBadRequest() *GetIPAMvrfgroupBadRequest {
	return &GetIPAMvrfgroupBadRequest{}
}

/*GetIPAMvrfgroupBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetIPAMvrfgroupBadRequest struct {
}

func (o *GetIPAMvrfgroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupBadRequest ", 400)
}

func (o *GetIPAMvrfgroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvrfgroupUnauthorized creates a GetIPAMvrfgroupUnauthorized with default headers values
func NewGetIPAMvrfgroupUnauthorized() *GetIPAMvrfgroupUnauthorized {
	return &GetIPAMvrfgroupUnauthorized{}
}

/*GetIPAMvrfgroupUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetIPAMvrfgroupUnauthorized struct {
}

func (o *GetIPAMvrfgroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupUnauthorized ", 401)
}

func (o *GetIPAMvrfgroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvrfgroupForbidden creates a GetIPAMvrfgroupForbidden with default headers values
func NewGetIPAMvrfgroupForbidden() *GetIPAMvrfgroupForbidden {
	return &GetIPAMvrfgroupForbidden{}
}

/*GetIPAMvrfgroupForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetIPAMvrfgroupForbidden struct {
}

func (o *GetIPAMvrfgroupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupForbidden ", 403)
}

func (o *GetIPAMvrfgroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvrfgroupNotFound creates a GetIPAMvrfgroupNotFound with default headers values
func NewGetIPAMvrfgroupNotFound() *GetIPAMvrfgroupNotFound {
	return &GetIPAMvrfgroupNotFound{}
}

/*GetIPAMvrfgroupNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetIPAMvrfgroupNotFound struct {
}

func (o *GetIPAMvrfgroupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupNotFound ", 404)
}

func (o *GetIPAMvrfgroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvrfgroupMethodNotAllowed creates a GetIPAMvrfgroupMethodNotAllowed with default headers values
func NewGetIPAMvrfgroupMethodNotAllowed() *GetIPAMvrfgroupMethodNotAllowed {
	return &GetIPAMvrfgroupMethodNotAllowed{}
}

/*GetIPAMvrfgroupMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetIPAMvrfgroupMethodNotAllowed struct {
}

func (o *GetIPAMvrfgroupMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupMethodNotAllowed ", 405)
}

func (o *GetIPAMvrfgroupMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvrfgroupGone creates a GetIPAMvrfgroupGone with default headers values
func NewGetIPAMvrfgroupGone() *GetIPAMvrfgroupGone {
	return &GetIPAMvrfgroupGone{}
}

/*GetIPAMvrfgroupGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetIPAMvrfgroupGone struct {
}

func (o *GetIPAMvrfgroupGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupGone ", 410)
}

func (o *GetIPAMvrfgroupGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvrfgroupInternalServerError creates a GetIPAMvrfgroupInternalServerError with default headers values
func NewGetIPAMvrfgroupInternalServerError() *GetIPAMvrfgroupInternalServerError {
	return &GetIPAMvrfgroupInternalServerError{}
}

/*GetIPAMvrfgroupInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetIPAMvrfgroupInternalServerError struct {
}

func (o *GetIPAMvrfgroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupInternalServerError ", 500)
}

func (o *GetIPAMvrfgroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvrfgroupServiceUnavailable creates a GetIPAMvrfgroupServiceUnavailable with default headers values
func NewGetIPAMvrfgroupServiceUnavailable() *GetIPAMvrfgroupServiceUnavailable {
	return &GetIPAMvrfgroupServiceUnavailable{}
}

/*GetIPAMvrfgroupServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetIPAMvrfgroupServiceUnavailable struct {
}

func (o *GetIPAMvrfgroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vrfgroup/][%d] getIpAMvrfgroupServiceUnavailable ", 503)
}

func (o *GetIPAMvrfgroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetIPAMvrfgroupOKBodyItems0 get IP a mvrfgroup o k body items0
swagger:model GetIPAMvrfgroupOKBodyItems0
*/
type GetIPAMvrfgroupOKBodyItems0 struct {

	// buildings
	Buildings interface{} `json:"buildings,omitempty"`

	// description
	Description interface{} `json:"description,omitempty"`

	// groups
	Groups interface{} `json:"groups,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this get IP a mvrfgroup o k body items0
func (o *GetIPAMvrfgroupOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIPAMvrfgroupOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIPAMvrfgroupOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetIPAMvrfgroupOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
