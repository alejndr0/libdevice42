// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostIPAMDNSZonesParams creates a new PostIPAMDNSZonesParams object
// with the default values initialized.
func NewPostIPAMDNSZonesParams() *PostIPAMDNSZonesParams {
	var ()
	return &PostIPAMDNSZonesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostIPAMDNSZonesParamsWithTimeout creates a new PostIPAMDNSZonesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostIPAMDNSZonesParamsWithTimeout(timeout time.Duration) *PostIPAMDNSZonesParams {
	var ()
	return &PostIPAMDNSZonesParams{

		timeout: timeout,
	}
}

// NewPostIPAMDNSZonesParamsWithContext creates a new PostIPAMDNSZonesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostIPAMDNSZonesParamsWithContext(ctx context.Context) *PostIPAMDNSZonesParams {
	var ()
	return &PostIPAMDNSZonesParams{

		Context: ctx,
	}
}

// NewPostIPAMDNSZonesParamsWithHTTPClient creates a new PostIPAMDNSZonesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostIPAMDNSZonesParamsWithHTTPClient(client *http.Client) *PostIPAMDNSZonesParams {
	var ()
	return &PostIPAMDNSZonesParams{
		HTTPClient: client,
	}
}

/*PostIPAMDNSZonesParams contains all the parameters to send to the API endpoint
for the post IP a m dns zones operation typically these are written to a http.Request
*/
type PostIPAMDNSZonesParams struct {

	/*Name
	  Name of DNS zone

	*/
	Name string
	/*Nameserver
	  IP Address/hostname of name server

	*/
	Nameserver string
	/*Notes
	  Any additional notes

	*/
	Notes *string
	/*Tags
	  Tags for grouping zone entries

	*/
	Tags *string
	/*TagsRemove
	  remove tags from grouping zone entries

	*/
	TagsRemove *string
	/*VrfGroup
	  VRF group name

	*/
	VrfGroup *string
	/*VrfGroupID
	  ID of the VRF group

	*/
	VrfGroupID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithTimeout(timeout time.Duration) *PostIPAMDNSZonesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithContext(ctx context.Context) *PostIPAMDNSZonesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithHTTPClient(client *http.Client) *PostIPAMDNSZonesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithName(name string) *PostIPAMDNSZonesParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetName(name string) {
	o.Name = name
}

// WithNameserver adds the nameserver to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithNameserver(nameserver string) *PostIPAMDNSZonesParams {
	o.SetNameserver(nameserver)
	return o
}

// SetNameserver adds the nameserver to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetNameserver(nameserver string) {
	o.Nameserver = nameserver
}

// WithNotes adds the notes to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithNotes(notes *string) *PostIPAMDNSZonesParams {
	o.SetNotes(notes)
	return o
}

// SetNotes adds the notes to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetNotes(notes *string) {
	o.Notes = notes
}

// WithTags adds the tags to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithTags(tags *string) *PostIPAMDNSZonesParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetTags(tags *string) {
	o.Tags = tags
}

// WithTagsRemove adds the tagsRemove to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithTagsRemove(tagsRemove *string) *PostIPAMDNSZonesParams {
	o.SetTagsRemove(tagsRemove)
	return o
}

// SetTagsRemove adds the tagsRemove to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetTagsRemove(tagsRemove *string) {
	o.TagsRemove = tagsRemove
}

// WithVrfGroup adds the vrfGroup to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithVrfGroup(vrfGroup *string) *PostIPAMDNSZonesParams {
	o.SetVrfGroup(vrfGroup)
	return o
}

// SetVrfGroup adds the vrfGroup to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetVrfGroup(vrfGroup *string) {
	o.VrfGroup = vrfGroup
}

// WithVrfGroupID adds the vrfGroupID to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) WithVrfGroupID(vrfGroupID *string) *PostIPAMDNSZonesParams {
	o.SetVrfGroupID(vrfGroupID)
	return o
}

// SetVrfGroupID adds the vrfGroupId to the post IP a m dns zones params
func (o *PostIPAMDNSZonesParams) SetVrfGroupID(vrfGroupID *string) {
	o.VrfGroupID = vrfGroupID
}

// WriteToRequest writes these params to a swagger request
func (o *PostIPAMDNSZonesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param name
	frName := o.Name
	fName := frName
	if fName != "" {
		if err := r.SetFormParam("name", fName); err != nil {
			return err
		}
	}

	// form param nameserver
	frNameserver := o.Nameserver
	fNameserver := frNameserver
	if fNameserver != "" {
		if err := r.SetFormParam("nameserver", fNameserver); err != nil {
			return err
		}
	}

	if o.Notes != nil {

		// form param notes
		var frNotes string
		if o.Notes != nil {
			frNotes = *o.Notes
		}
		fNotes := frNotes
		if fNotes != "" {
			if err := r.SetFormParam("notes", fNotes); err != nil {
				return err
			}
		}

	}

	if o.Tags != nil {

		// form param tags
		var frTags string
		if o.Tags != nil {
			frTags = *o.Tags
		}
		fTags := frTags
		if fTags != "" {
			if err := r.SetFormParam("tags", fTags); err != nil {
				return err
			}
		}

	}

	if o.TagsRemove != nil {

		// form param tags_remove
		var frTagsRemove string
		if o.TagsRemove != nil {
			frTagsRemove = *o.TagsRemove
		}
		fTagsRemove := frTagsRemove
		if fTagsRemove != "" {
			if err := r.SetFormParam("tags_remove", fTagsRemove); err != nil {
				return err
			}
		}

	}

	if o.VrfGroup != nil {

		// form param vrf_group
		var frVrfGroup string
		if o.VrfGroup != nil {
			frVrfGroup = *o.VrfGroup
		}
		fVrfGroup := frVrfGroup
		if fVrfGroup != "" {
			if err := r.SetFormParam("vrf_group", fVrfGroup); err != nil {
				return err
			}
		}

	}

	if o.VrfGroupID != nil {

		// form param vrf_group_id
		var frVrfGroupID string
		if o.VrfGroupID != nil {
			frVrfGroupID = *o.VrfGroupID
		}
		fVrfGroupID := frVrfGroupID
		if fVrfGroupID != "" {
			if err := r.SetFormParam("vrf_group_id", fVrfGroupID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
