// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetIPAMIpnatReader is a Reader for the GetIPAMIpnat structure.
type GetIPAMIpnatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIPAMIpnatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIPAMIpnatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIPAMIpnatBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIPAMIpnatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIPAMIpnatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIPAMIpnatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetIPAMIpnatMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetIPAMIpnatGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIPAMIpnatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIPAMIpnatServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIPAMIpnatOK creates a GetIPAMIpnatOK with default headers values
func NewGetIPAMIpnatOK() *GetIPAMIpnatOK {
	return &GetIPAMIpnatOK{}
}

/*GetIPAMIpnatOK handles this case with default header values.

The above command returns results like this:
*/
type GetIPAMIpnatOK struct {
	Payload *GetIPAMIpnatOKBody
}

func (o *GetIPAMIpnatOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatOK  %+v", 200, o.Payload)
}

func (o *GetIPAMIpnatOK) GetPayload() *GetIPAMIpnatOKBody {
	return o.Payload
}

func (o *GetIPAMIpnatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetIPAMIpnatOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIPAMIpnatBadRequest creates a GetIPAMIpnatBadRequest with default headers values
func NewGetIPAMIpnatBadRequest() *GetIPAMIpnatBadRequest {
	return &GetIPAMIpnatBadRequest{}
}

/*GetIPAMIpnatBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetIPAMIpnatBadRequest struct {
}

func (o *GetIPAMIpnatBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatBadRequest ", 400)
}

func (o *GetIPAMIpnatBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMIpnatUnauthorized creates a GetIPAMIpnatUnauthorized with default headers values
func NewGetIPAMIpnatUnauthorized() *GetIPAMIpnatUnauthorized {
	return &GetIPAMIpnatUnauthorized{}
}

/*GetIPAMIpnatUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetIPAMIpnatUnauthorized struct {
}

func (o *GetIPAMIpnatUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatUnauthorized ", 401)
}

func (o *GetIPAMIpnatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMIpnatForbidden creates a GetIPAMIpnatForbidden with default headers values
func NewGetIPAMIpnatForbidden() *GetIPAMIpnatForbidden {
	return &GetIPAMIpnatForbidden{}
}

/*GetIPAMIpnatForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetIPAMIpnatForbidden struct {
}

func (o *GetIPAMIpnatForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatForbidden ", 403)
}

func (o *GetIPAMIpnatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMIpnatNotFound creates a GetIPAMIpnatNotFound with default headers values
func NewGetIPAMIpnatNotFound() *GetIPAMIpnatNotFound {
	return &GetIPAMIpnatNotFound{}
}

/*GetIPAMIpnatNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetIPAMIpnatNotFound struct {
}

func (o *GetIPAMIpnatNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatNotFound ", 404)
}

func (o *GetIPAMIpnatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMIpnatMethodNotAllowed creates a GetIPAMIpnatMethodNotAllowed with default headers values
func NewGetIPAMIpnatMethodNotAllowed() *GetIPAMIpnatMethodNotAllowed {
	return &GetIPAMIpnatMethodNotAllowed{}
}

/*GetIPAMIpnatMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetIPAMIpnatMethodNotAllowed struct {
}

func (o *GetIPAMIpnatMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatMethodNotAllowed ", 405)
}

func (o *GetIPAMIpnatMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMIpnatGone creates a GetIPAMIpnatGone with default headers values
func NewGetIPAMIpnatGone() *GetIPAMIpnatGone {
	return &GetIPAMIpnatGone{}
}

/*GetIPAMIpnatGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetIPAMIpnatGone struct {
}

func (o *GetIPAMIpnatGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatGone ", 410)
}

func (o *GetIPAMIpnatGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMIpnatInternalServerError creates a GetIPAMIpnatInternalServerError with default headers values
func NewGetIPAMIpnatInternalServerError() *GetIPAMIpnatInternalServerError {
	return &GetIPAMIpnatInternalServerError{}
}

/*GetIPAMIpnatInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetIPAMIpnatInternalServerError struct {
}

func (o *GetIPAMIpnatInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatInternalServerError ", 500)
}

func (o *GetIPAMIpnatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMIpnatServiceUnavailable creates a GetIPAMIpnatServiceUnavailable with default headers values
func NewGetIPAMIpnatServiceUnavailable() *GetIPAMIpnatServiceUnavailable {
	return &GetIPAMIpnatServiceUnavailable{}
}

/*GetIPAMIpnatServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetIPAMIpnatServiceUnavailable struct {
}

func (o *GetIPAMIpnatServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/ipnat/][%d] getIpAMIpnatServiceUnavailable ", 503)
}

func (o *GetIPAMIpnatServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetIPAMIpnatOKBody get IP a m ipnat o k body
swagger:model GetIPAMIpnatOKBody
*/
type GetIPAMIpnatOKBody struct {

	// ipnats
	Ipnats []*IpnatsItems0 `json:"ipnats"`
}

// Validate validates this get IP a m ipnat o k body
func (o *GetIPAMIpnatOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIpnats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIPAMIpnatOKBody) validateIpnats(formats strfmt.Registry) error {

	if swag.IsZero(o.Ipnats) { // not required
		return nil
	}

	for i := 0; i < len(o.Ipnats); i++ {
		if swag.IsZero(o.Ipnats[i]) { // not required
			continue
		}

		if o.Ipnats[i] != nil {
			if err := o.Ipnats[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIpAMIpnatOK" + "." + "ipnats" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIPAMIpnatOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIPAMIpnatOKBody) UnmarshalBinary(b []byte) error {
	var res GetIPAMIpnatOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*IpnatsItems0 ipnats items0
swagger:model IpnatsItems0
*/
type IpnatsItems0 struct {

	// id
	ID interface{} `json:"id,omitempty"`

	// ip address from
	IPAddressFrom interface{} `json:"ip_address_from,omitempty"`

	// ip address to
	IPAddressTo interface{} `json:"ip_address_to,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// two way relation
	TwoWayRelation interface{} `json:"two_way_relation,omitempty"`
}

// Validate validates this ipnats items0
func (o *IpnatsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *IpnatsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *IpnatsItems0) UnmarshalBinary(b []byte) error {
	var res IpnatsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
