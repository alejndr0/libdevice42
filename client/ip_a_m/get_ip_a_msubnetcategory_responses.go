// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetIPAMsubnetcategoryReader is a Reader for the GetIPAMsubnetcategory structure.
type GetIPAMsubnetcategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIPAMsubnetcategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIPAMsubnetcategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIPAMsubnetcategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIPAMsubnetcategoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIPAMsubnetcategoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIPAMsubnetcategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetIPAMsubnetcategoryMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetIPAMsubnetcategoryGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIPAMsubnetcategoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIPAMsubnetcategoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIPAMsubnetcategoryOK creates a GetIPAMsubnetcategoryOK with default headers values
func NewGetIPAMsubnetcategoryOK() *GetIPAMsubnetcategoryOK {
	return &GetIPAMsubnetcategoryOK{}
}

/*GetIPAMsubnetcategoryOK handles this case with default header values.

The above command returns results like this:
*/
type GetIPAMsubnetcategoryOK struct {
	Payload []*GetIPAMsubnetcategoryOKBodyItems0
}

func (o *GetIPAMsubnetcategoryOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryOK  %+v", 200, o.Payload)
}

func (o *GetIPAMsubnetcategoryOK) GetPayload() []*GetIPAMsubnetcategoryOKBodyItems0 {
	return o.Payload
}

func (o *GetIPAMsubnetcategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIPAMsubnetcategoryBadRequest creates a GetIPAMsubnetcategoryBadRequest with default headers values
func NewGetIPAMsubnetcategoryBadRequest() *GetIPAMsubnetcategoryBadRequest {
	return &GetIPAMsubnetcategoryBadRequest{}
}

/*GetIPAMsubnetcategoryBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetIPAMsubnetcategoryBadRequest struct {
}

func (o *GetIPAMsubnetcategoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryBadRequest ", 400)
}

func (o *GetIPAMsubnetcategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMsubnetcategoryUnauthorized creates a GetIPAMsubnetcategoryUnauthorized with default headers values
func NewGetIPAMsubnetcategoryUnauthorized() *GetIPAMsubnetcategoryUnauthorized {
	return &GetIPAMsubnetcategoryUnauthorized{}
}

/*GetIPAMsubnetcategoryUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetIPAMsubnetcategoryUnauthorized struct {
}

func (o *GetIPAMsubnetcategoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryUnauthorized ", 401)
}

func (o *GetIPAMsubnetcategoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMsubnetcategoryForbidden creates a GetIPAMsubnetcategoryForbidden with default headers values
func NewGetIPAMsubnetcategoryForbidden() *GetIPAMsubnetcategoryForbidden {
	return &GetIPAMsubnetcategoryForbidden{}
}

/*GetIPAMsubnetcategoryForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetIPAMsubnetcategoryForbidden struct {
}

func (o *GetIPAMsubnetcategoryForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryForbidden ", 403)
}

func (o *GetIPAMsubnetcategoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMsubnetcategoryNotFound creates a GetIPAMsubnetcategoryNotFound with default headers values
func NewGetIPAMsubnetcategoryNotFound() *GetIPAMsubnetcategoryNotFound {
	return &GetIPAMsubnetcategoryNotFound{}
}

/*GetIPAMsubnetcategoryNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetIPAMsubnetcategoryNotFound struct {
}

func (o *GetIPAMsubnetcategoryNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryNotFound ", 404)
}

func (o *GetIPAMsubnetcategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMsubnetcategoryMethodNotAllowed creates a GetIPAMsubnetcategoryMethodNotAllowed with default headers values
func NewGetIPAMsubnetcategoryMethodNotAllowed() *GetIPAMsubnetcategoryMethodNotAllowed {
	return &GetIPAMsubnetcategoryMethodNotAllowed{}
}

/*GetIPAMsubnetcategoryMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetIPAMsubnetcategoryMethodNotAllowed struct {
}

func (o *GetIPAMsubnetcategoryMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryMethodNotAllowed ", 405)
}

func (o *GetIPAMsubnetcategoryMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMsubnetcategoryGone creates a GetIPAMsubnetcategoryGone with default headers values
func NewGetIPAMsubnetcategoryGone() *GetIPAMsubnetcategoryGone {
	return &GetIPAMsubnetcategoryGone{}
}

/*GetIPAMsubnetcategoryGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetIPAMsubnetcategoryGone struct {
}

func (o *GetIPAMsubnetcategoryGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryGone ", 410)
}

func (o *GetIPAMsubnetcategoryGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMsubnetcategoryInternalServerError creates a GetIPAMsubnetcategoryInternalServerError with default headers values
func NewGetIPAMsubnetcategoryInternalServerError() *GetIPAMsubnetcategoryInternalServerError {
	return &GetIPAMsubnetcategoryInternalServerError{}
}

/*GetIPAMsubnetcategoryInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetIPAMsubnetcategoryInternalServerError struct {
}

func (o *GetIPAMsubnetcategoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryInternalServerError ", 500)
}

func (o *GetIPAMsubnetcategoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMsubnetcategoryServiceUnavailable creates a GetIPAMsubnetcategoryServiceUnavailable with default headers values
func NewGetIPAMsubnetcategoryServiceUnavailable() *GetIPAMsubnetcategoryServiceUnavailable {
	return &GetIPAMsubnetcategoryServiceUnavailable{}
}

/*GetIPAMsubnetcategoryServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetIPAMsubnetcategoryServiceUnavailable struct {
}

func (o *GetIPAMsubnetcategoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnet_category/][%d] getIpAMsubnetcategoryServiceUnavailable ", 503)
}

func (o *GetIPAMsubnetcategoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetIPAMsubnetcategoryOKBodyItems0 get IP a msubnetcategory o k body items0
swagger:model GetIPAMsubnetcategoryOKBodyItems0
*/
type GetIPAMsubnetcategoryOKBodyItems0 struct {

	// description
	Description interface{} `json:"description,omitempty"`

	// groups
	Groups interface{} `json:"groups,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this get IP a msubnetcategory o k body items0
func (o *GetIPAMsubnetcategoryOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIPAMsubnetcategoryOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIPAMsubnetcategoryOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetIPAMsubnetcategoryOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
