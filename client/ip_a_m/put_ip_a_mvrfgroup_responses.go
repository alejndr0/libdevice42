// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutIPAMvrfgroupReader is a Reader for the PutIPAMvrfgroup structure.
type PutIPAMvrfgroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIPAMvrfgroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIPAMvrfgroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIPAMvrfgroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIPAMvrfgroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIPAMvrfgroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIPAMvrfgroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutIPAMvrfgroupMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPutIPAMvrfgroupGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIPAMvrfgroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIPAMvrfgroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutIPAMvrfgroupOK creates a PutIPAMvrfgroupOK with default headers values
func NewPutIPAMvrfgroupOK() *PutIPAMvrfgroupOK {
	return &PutIPAMvrfgroupOK{}
}

/*PutIPAMvrfgroupOK handles this case with default header values.

The above command returns JSON structured like this:
*/
type PutIPAMvrfgroupOK struct {
	Payload *PutIPAMvrfgroupOKBody
}

func (o *PutIPAMvrfgroupOK) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupOK  %+v", 200, o.Payload)
}

func (o *PutIPAMvrfgroupOK) GetPayload() *PutIPAMvrfgroupOKBody {
	return o.Payload
}

func (o *PutIPAMvrfgroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutIPAMvrfgroupOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIPAMvrfgroupBadRequest creates a PutIPAMvrfgroupBadRequest with default headers values
func NewPutIPAMvrfgroupBadRequest() *PutIPAMvrfgroupBadRequest {
	return &PutIPAMvrfgroupBadRequest{}
}

/*PutIPAMvrfgroupBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PutIPAMvrfgroupBadRequest struct {
}

func (o *PutIPAMvrfgroupBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupBadRequest ", 400)
}

func (o *PutIPAMvrfgroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMvrfgroupUnauthorized creates a PutIPAMvrfgroupUnauthorized with default headers values
func NewPutIPAMvrfgroupUnauthorized() *PutIPAMvrfgroupUnauthorized {
	return &PutIPAMvrfgroupUnauthorized{}
}

/*PutIPAMvrfgroupUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PutIPAMvrfgroupUnauthorized struct {
}

func (o *PutIPAMvrfgroupUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupUnauthorized ", 401)
}

func (o *PutIPAMvrfgroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMvrfgroupForbidden creates a PutIPAMvrfgroupForbidden with default headers values
func NewPutIPAMvrfgroupForbidden() *PutIPAMvrfgroupForbidden {
	return &PutIPAMvrfgroupForbidden{}
}

/*PutIPAMvrfgroupForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PutIPAMvrfgroupForbidden struct {
}

func (o *PutIPAMvrfgroupForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupForbidden ", 403)
}

func (o *PutIPAMvrfgroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMvrfgroupNotFound creates a PutIPAMvrfgroupNotFound with default headers values
func NewPutIPAMvrfgroupNotFound() *PutIPAMvrfgroupNotFound {
	return &PutIPAMvrfgroupNotFound{}
}

/*PutIPAMvrfgroupNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PutIPAMvrfgroupNotFound struct {
}

func (o *PutIPAMvrfgroupNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupNotFound ", 404)
}

func (o *PutIPAMvrfgroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMvrfgroupMethodNotAllowed creates a PutIPAMvrfgroupMethodNotAllowed with default headers values
func NewPutIPAMvrfgroupMethodNotAllowed() *PutIPAMvrfgroupMethodNotAllowed {
	return &PutIPAMvrfgroupMethodNotAllowed{}
}

/*PutIPAMvrfgroupMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PutIPAMvrfgroupMethodNotAllowed struct {
}

func (o *PutIPAMvrfgroupMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupMethodNotAllowed ", 405)
}

func (o *PutIPAMvrfgroupMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMvrfgroupGone creates a PutIPAMvrfgroupGone with default headers values
func NewPutIPAMvrfgroupGone() *PutIPAMvrfgroupGone {
	return &PutIPAMvrfgroupGone{}
}

/*PutIPAMvrfgroupGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PutIPAMvrfgroupGone struct {
}

func (o *PutIPAMvrfgroupGone) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupGone ", 410)
}

func (o *PutIPAMvrfgroupGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMvrfgroupInternalServerError creates a PutIPAMvrfgroupInternalServerError with default headers values
func NewPutIPAMvrfgroupInternalServerError() *PutIPAMvrfgroupInternalServerError {
	return &PutIPAMvrfgroupInternalServerError{}
}

/*PutIPAMvrfgroupInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PutIPAMvrfgroupInternalServerError struct {
}

func (o *PutIPAMvrfgroupInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupInternalServerError ", 500)
}

func (o *PutIPAMvrfgroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMvrfgroupServiceUnavailable creates a PutIPAMvrfgroupServiceUnavailable with default headers values
func NewPutIPAMvrfgroupServiceUnavailable() *PutIPAMvrfgroupServiceUnavailable {
	return &PutIPAMvrfgroupServiceUnavailable{}
}

/*PutIPAMvrfgroupServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PutIPAMvrfgroupServiceUnavailable struct {
}

func (o *PutIPAMvrfgroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/vrfgroup/][%d] putIpAMvrfgroupServiceUnavailable ", 503)
}

func (o *PutIPAMvrfgroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutIPAMvrfgroupOKBody put IP a mvrfgroup o k body
swagger:model PutIPAMvrfgroupOKBody
*/
type PutIPAMvrfgroupOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this put IP a mvrfgroup o k body
func (o *PutIPAMvrfgroupOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutIPAMvrfgroupOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutIPAMvrfgroupOKBody) UnmarshalBinary(b []byte) error {
	var res PutIPAMvrfgroupOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
