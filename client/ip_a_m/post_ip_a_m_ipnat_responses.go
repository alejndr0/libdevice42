// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostIPAMIpnatReader is a Reader for the PostIPAMIpnat structure.
type PostIPAMIpnatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIPAMIpnatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostIPAMIpnatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostIPAMIpnatBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostIPAMIpnatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostIPAMIpnatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostIPAMIpnatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostIPAMIpnatMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostIPAMIpnatGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostIPAMIpnatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostIPAMIpnatServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostIPAMIpnatOK creates a PostIPAMIpnatOK with default headers values
func NewPostIPAMIpnatOK() *PostIPAMIpnatOK {
	return &PostIPAMIpnatOK{}
}

/*PostIPAMIpnatOK handles this case with default header values.

The above command returns results like this:
*/
type PostIPAMIpnatOK struct {
	Payload *PostIPAMIpnatOKBody
}

func (o *PostIPAMIpnatOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatOK  %+v", 200, o.Payload)
}

func (o *PostIPAMIpnatOK) GetPayload() *PostIPAMIpnatOKBody {
	return o.Payload
}

func (o *PostIPAMIpnatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostIPAMIpnatOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIPAMIpnatBadRequest creates a PostIPAMIpnatBadRequest with default headers values
func NewPostIPAMIpnatBadRequest() *PostIPAMIpnatBadRequest {
	return &PostIPAMIpnatBadRequest{}
}

/*PostIPAMIpnatBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostIPAMIpnatBadRequest struct {
}

func (o *PostIPAMIpnatBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatBadRequest ", 400)
}

func (o *PostIPAMIpnatBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIPAMIpnatUnauthorized creates a PostIPAMIpnatUnauthorized with default headers values
func NewPostIPAMIpnatUnauthorized() *PostIPAMIpnatUnauthorized {
	return &PostIPAMIpnatUnauthorized{}
}

/*PostIPAMIpnatUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostIPAMIpnatUnauthorized struct {
}

func (o *PostIPAMIpnatUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatUnauthorized ", 401)
}

func (o *PostIPAMIpnatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIPAMIpnatForbidden creates a PostIPAMIpnatForbidden with default headers values
func NewPostIPAMIpnatForbidden() *PostIPAMIpnatForbidden {
	return &PostIPAMIpnatForbidden{}
}

/*PostIPAMIpnatForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostIPAMIpnatForbidden struct {
}

func (o *PostIPAMIpnatForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatForbidden ", 403)
}

func (o *PostIPAMIpnatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIPAMIpnatNotFound creates a PostIPAMIpnatNotFound with default headers values
func NewPostIPAMIpnatNotFound() *PostIPAMIpnatNotFound {
	return &PostIPAMIpnatNotFound{}
}

/*PostIPAMIpnatNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostIPAMIpnatNotFound struct {
}

func (o *PostIPAMIpnatNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatNotFound ", 404)
}

func (o *PostIPAMIpnatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIPAMIpnatMethodNotAllowed creates a PostIPAMIpnatMethodNotAllowed with default headers values
func NewPostIPAMIpnatMethodNotAllowed() *PostIPAMIpnatMethodNotAllowed {
	return &PostIPAMIpnatMethodNotAllowed{}
}

/*PostIPAMIpnatMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostIPAMIpnatMethodNotAllowed struct {
}

func (o *PostIPAMIpnatMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatMethodNotAllowed ", 405)
}

func (o *PostIPAMIpnatMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIPAMIpnatGone creates a PostIPAMIpnatGone with default headers values
func NewPostIPAMIpnatGone() *PostIPAMIpnatGone {
	return &PostIPAMIpnatGone{}
}

/*PostIPAMIpnatGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostIPAMIpnatGone struct {
}

func (o *PostIPAMIpnatGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatGone ", 410)
}

func (o *PostIPAMIpnatGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIPAMIpnatInternalServerError creates a PostIPAMIpnatInternalServerError with default headers values
func NewPostIPAMIpnatInternalServerError() *PostIPAMIpnatInternalServerError {
	return &PostIPAMIpnatInternalServerError{}
}

/*PostIPAMIpnatInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostIPAMIpnatInternalServerError struct {
}

func (o *PostIPAMIpnatInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatInternalServerError ", 500)
}

func (o *PostIPAMIpnatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIPAMIpnatServiceUnavailable creates a PostIPAMIpnatServiceUnavailable with default headers values
func NewPostIPAMIpnatServiceUnavailable() *PostIPAMIpnatServiceUnavailable {
	return &PostIPAMIpnatServiceUnavailable{}
}

/*PostIPAMIpnatServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostIPAMIpnatServiceUnavailable struct {
}

func (o *PostIPAMIpnatServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/ipnat/][%d] postIpAMIpnatServiceUnavailable ", 503)
}

func (o *PostIPAMIpnatServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostIPAMIpnatOKBody post IP a m ipnat o k body
swagger:model PostIPAMIpnatOKBody
*/
type PostIPAMIpnatOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post IP a m ipnat o k body
func (o *PostIPAMIpnatOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostIPAMIpnatOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostIPAMIpnatOKBody) UnmarshalBinary(b []byte) error {
	var res PostIPAMIpnatOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
