// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPutIPAMCustomFIvrfgroupParams creates a new PutIPAMCustomFIvrfgroupParams object
// with the default values initialized.
func NewPutIPAMCustomFIvrfgroupParams() *PutIPAMCustomFIvrfgroupParams {
	var ()
	return &PutIPAMCustomFIvrfgroupParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutIPAMCustomFIvrfgroupParamsWithTimeout creates a new PutIPAMCustomFIvrfgroupParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutIPAMCustomFIvrfgroupParamsWithTimeout(timeout time.Duration) *PutIPAMCustomFIvrfgroupParams {
	var ()
	return &PutIPAMCustomFIvrfgroupParams{

		timeout: timeout,
	}
}

// NewPutIPAMCustomFIvrfgroupParamsWithContext creates a new PutIPAMCustomFIvrfgroupParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutIPAMCustomFIvrfgroupParamsWithContext(ctx context.Context) *PutIPAMCustomFIvrfgroupParams {
	var ()
	return &PutIPAMCustomFIvrfgroupParams{

		Context: ctx,
	}
}

// NewPutIPAMCustomFIvrfgroupParamsWithHTTPClient creates a new PutIPAMCustomFIvrfgroupParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutIPAMCustomFIvrfgroupParamsWithHTTPClient(client *http.Client) *PutIPAMCustomFIvrfgroupParams {
	var ()
	return &PutIPAMCustomFIvrfgroupParams{
		HTTPClient: client,
	}
}

/*PutIPAMCustomFIvrfgroupParams contains all the parameters to send to the API endpoint
for the put IP a m custom f ivrfgroup operation typically these are written to a http.Request
*/
type PutIPAMCustomFIvrfgroupParams struct {

	/*ID
	  Required if name not present

	*/
	ID *string
	/*Key
	  Can be new or existing. This is the custom field name.

	*/
	Key string
	/*Name
	  Required if ID not present

	*/
	Name *string
	/*Notes*/
	Notes *string
	/*Value*/
	Value *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) WithTimeout(timeout time.Duration) *PutIPAMCustomFIvrfgroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) WithContext(ctx context.Context) *PutIPAMCustomFIvrfgroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) WithHTTPClient(client *http.Client) *PutIPAMCustomFIvrfgroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) WithID(id *string) *PutIPAMCustomFIvrfgroupParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) SetID(id *string) {
	o.ID = id
}

// WithKey adds the key to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) WithKey(key string) *PutIPAMCustomFIvrfgroupParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) SetKey(key string) {
	o.Key = key
}

// WithName adds the name to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) WithName(name *string) *PutIPAMCustomFIvrfgroupParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) SetName(name *string) {
	o.Name = name
}

// WithNotes adds the notes to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) WithNotes(notes *string) *PutIPAMCustomFIvrfgroupParams {
	o.SetNotes(notes)
	return o
}

// SetNotes adds the notes to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) SetNotes(notes *string) {
	o.Notes = notes
}

// WithValue adds the value to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) WithValue(value *string) *PutIPAMCustomFIvrfgroupParams {
	o.SetValue(value)
	return o
}

// SetValue adds the value to the put IP a m custom f ivrfgroup params
func (o *PutIPAMCustomFIvrfgroupParams) SetValue(value *string) {
	o.Value = value
}

// WriteToRequest writes these params to a swagger request
func (o *PutIPAMCustomFIvrfgroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ID != nil {

		// form param id
		var frID string
		if o.ID != nil {
			frID = *o.ID
		}
		fID := frID
		if fID != "" {
			if err := r.SetFormParam("id", fID); err != nil {
				return err
			}
		}

	}

	// form param key
	frKey := o.Key
	fKey := frKey
	if fKey != "" {
		if err := r.SetFormParam("key", fKey); err != nil {
			return err
		}
	}

	if o.Name != nil {

		// form param name
		var frName string
		if o.Name != nil {
			frName = *o.Name
		}
		fName := frName
		if fName != "" {
			if err := r.SetFormParam("name", fName); err != nil {
				return err
			}
		}

	}

	if o.Notes != nil {

		// form param notes
		var frNotes string
		if o.Notes != nil {
			frNotes = *o.Notes
		}
		fNotes := frNotes
		if fNotes != "" {
			if err := r.SetFormParam("notes", fNotes); err != nil {
				return err
			}
		}

	}

	if o.Value != nil {

		// form param value
		var frValue string
		if o.Value != nil {
			frValue = *o.Value
		}
		fValue := frValue
		if fValue != "" {
			if err := r.SetFormParam("value", fValue); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
