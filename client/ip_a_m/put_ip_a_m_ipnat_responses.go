// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutIPAMIpnatReader is a Reader for the PutIPAMIpnat structure.
type PutIPAMIpnatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIPAMIpnatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIPAMIpnatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIPAMIpnatBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIPAMIpnatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIPAMIpnatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIPAMIpnatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutIPAMIpnatMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPutIPAMIpnatGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIPAMIpnatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIPAMIpnatServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutIPAMIpnatOK creates a PutIPAMIpnatOK with default headers values
func NewPutIPAMIpnatOK() *PutIPAMIpnatOK {
	return &PutIPAMIpnatOK{}
}

/*PutIPAMIpnatOK handles this case with default header values.

The above command returns results like this:
*/
type PutIPAMIpnatOK struct {
	Payload *PutIPAMIpnatOKBody
}

func (o *PutIPAMIpnatOK) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatOK  %+v", 200, o.Payload)
}

func (o *PutIPAMIpnatOK) GetPayload() *PutIPAMIpnatOKBody {
	return o.Payload
}

func (o *PutIPAMIpnatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutIPAMIpnatOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIPAMIpnatBadRequest creates a PutIPAMIpnatBadRequest with default headers values
func NewPutIPAMIpnatBadRequest() *PutIPAMIpnatBadRequest {
	return &PutIPAMIpnatBadRequest{}
}

/*PutIPAMIpnatBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PutIPAMIpnatBadRequest struct {
}

func (o *PutIPAMIpnatBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatBadRequest ", 400)
}

func (o *PutIPAMIpnatBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMIpnatUnauthorized creates a PutIPAMIpnatUnauthorized with default headers values
func NewPutIPAMIpnatUnauthorized() *PutIPAMIpnatUnauthorized {
	return &PutIPAMIpnatUnauthorized{}
}

/*PutIPAMIpnatUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PutIPAMIpnatUnauthorized struct {
}

func (o *PutIPAMIpnatUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatUnauthorized ", 401)
}

func (o *PutIPAMIpnatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMIpnatForbidden creates a PutIPAMIpnatForbidden with default headers values
func NewPutIPAMIpnatForbidden() *PutIPAMIpnatForbidden {
	return &PutIPAMIpnatForbidden{}
}

/*PutIPAMIpnatForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PutIPAMIpnatForbidden struct {
}

func (o *PutIPAMIpnatForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatForbidden ", 403)
}

func (o *PutIPAMIpnatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMIpnatNotFound creates a PutIPAMIpnatNotFound with default headers values
func NewPutIPAMIpnatNotFound() *PutIPAMIpnatNotFound {
	return &PutIPAMIpnatNotFound{}
}

/*PutIPAMIpnatNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PutIPAMIpnatNotFound struct {
}

func (o *PutIPAMIpnatNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatNotFound ", 404)
}

func (o *PutIPAMIpnatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMIpnatMethodNotAllowed creates a PutIPAMIpnatMethodNotAllowed with default headers values
func NewPutIPAMIpnatMethodNotAllowed() *PutIPAMIpnatMethodNotAllowed {
	return &PutIPAMIpnatMethodNotAllowed{}
}

/*PutIPAMIpnatMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PutIPAMIpnatMethodNotAllowed struct {
}

func (o *PutIPAMIpnatMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatMethodNotAllowed ", 405)
}

func (o *PutIPAMIpnatMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMIpnatGone creates a PutIPAMIpnatGone with default headers values
func NewPutIPAMIpnatGone() *PutIPAMIpnatGone {
	return &PutIPAMIpnatGone{}
}

/*PutIPAMIpnatGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PutIPAMIpnatGone struct {
}

func (o *PutIPAMIpnatGone) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatGone ", 410)
}

func (o *PutIPAMIpnatGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMIpnatInternalServerError creates a PutIPAMIpnatInternalServerError with default headers values
func NewPutIPAMIpnatInternalServerError() *PutIPAMIpnatInternalServerError {
	return &PutIPAMIpnatInternalServerError{}
}

/*PutIPAMIpnatInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PutIPAMIpnatInternalServerError struct {
}

func (o *PutIPAMIpnatInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatInternalServerError ", 500)
}

func (o *PutIPAMIpnatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMIpnatServiceUnavailable creates a PutIPAMIpnatServiceUnavailable with default headers values
func NewPutIPAMIpnatServiceUnavailable() *PutIPAMIpnatServiceUnavailable {
	return &PutIPAMIpnatServiceUnavailable{}
}

/*PutIPAMIpnatServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PutIPAMIpnatServiceUnavailable struct {
}

func (o *PutIPAMIpnatServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/ipnat/][%d] putIpAMIpnatServiceUnavailable ", 503)
}

func (o *PutIPAMIpnatServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutIPAMIpnatOKBody put IP a m ipnat o k body
swagger:model PutIPAMIpnatOKBody
*/
type PutIPAMIpnatOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this put IP a m ipnat o k body
func (o *PutIPAMIpnatOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutIPAMIpnatOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutIPAMIpnatOKBody) UnmarshalBinary(b []byte) error {
	var res PutIPAMIpnatOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
