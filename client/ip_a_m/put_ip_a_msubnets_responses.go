// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutIPAMsubnetsReader is a Reader for the PutIPAMsubnets structure.
type PutIPAMsubnetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIPAMsubnetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIPAMsubnetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIPAMsubnetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIPAMsubnetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIPAMsubnetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIPAMsubnetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutIPAMsubnetsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPutIPAMsubnetsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIPAMsubnetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIPAMsubnetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutIPAMsubnetsOK creates a PutIPAMsubnetsOK with default headers values
func NewPutIPAMsubnetsOK() *PutIPAMsubnetsOK {
	return &PutIPAMsubnetsOK{}
}

/*PutIPAMsubnetsOK handles this case with default header values.

The above command returns JSON structured like this:
*/
type PutIPAMsubnetsOK struct {
	Payload *PutIPAMsubnetsOKBody
}

func (o *PutIPAMsubnetsOK) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsOK  %+v", 200, o.Payload)
}

func (o *PutIPAMsubnetsOK) GetPayload() *PutIPAMsubnetsOKBody {
	return o.Payload
}

func (o *PutIPAMsubnetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutIPAMsubnetsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIPAMsubnetsBadRequest creates a PutIPAMsubnetsBadRequest with default headers values
func NewPutIPAMsubnetsBadRequest() *PutIPAMsubnetsBadRequest {
	return &PutIPAMsubnetsBadRequest{}
}

/*PutIPAMsubnetsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PutIPAMsubnetsBadRequest struct {
}

func (o *PutIPAMsubnetsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsBadRequest ", 400)
}

func (o *PutIPAMsubnetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetsUnauthorized creates a PutIPAMsubnetsUnauthorized with default headers values
func NewPutIPAMsubnetsUnauthorized() *PutIPAMsubnetsUnauthorized {
	return &PutIPAMsubnetsUnauthorized{}
}

/*PutIPAMsubnetsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PutIPAMsubnetsUnauthorized struct {
}

func (o *PutIPAMsubnetsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsUnauthorized ", 401)
}

func (o *PutIPAMsubnetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetsForbidden creates a PutIPAMsubnetsForbidden with default headers values
func NewPutIPAMsubnetsForbidden() *PutIPAMsubnetsForbidden {
	return &PutIPAMsubnetsForbidden{}
}

/*PutIPAMsubnetsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PutIPAMsubnetsForbidden struct {
}

func (o *PutIPAMsubnetsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsForbidden ", 403)
}

func (o *PutIPAMsubnetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetsNotFound creates a PutIPAMsubnetsNotFound with default headers values
func NewPutIPAMsubnetsNotFound() *PutIPAMsubnetsNotFound {
	return &PutIPAMsubnetsNotFound{}
}

/*PutIPAMsubnetsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PutIPAMsubnetsNotFound struct {
}

func (o *PutIPAMsubnetsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsNotFound ", 404)
}

func (o *PutIPAMsubnetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetsMethodNotAllowed creates a PutIPAMsubnetsMethodNotAllowed with default headers values
func NewPutIPAMsubnetsMethodNotAllowed() *PutIPAMsubnetsMethodNotAllowed {
	return &PutIPAMsubnetsMethodNotAllowed{}
}

/*PutIPAMsubnetsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PutIPAMsubnetsMethodNotAllowed struct {
}

func (o *PutIPAMsubnetsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsMethodNotAllowed ", 405)
}

func (o *PutIPAMsubnetsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetsGone creates a PutIPAMsubnetsGone with default headers values
func NewPutIPAMsubnetsGone() *PutIPAMsubnetsGone {
	return &PutIPAMsubnetsGone{}
}

/*PutIPAMsubnetsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PutIPAMsubnetsGone struct {
}

func (o *PutIPAMsubnetsGone) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsGone ", 410)
}

func (o *PutIPAMsubnetsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetsInternalServerError creates a PutIPAMsubnetsInternalServerError with default headers values
func NewPutIPAMsubnetsInternalServerError() *PutIPAMsubnetsInternalServerError {
	return &PutIPAMsubnetsInternalServerError{}
}

/*PutIPAMsubnetsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PutIPAMsubnetsInternalServerError struct {
}

func (o *PutIPAMsubnetsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsInternalServerError ", 500)
}

func (o *PutIPAMsubnetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetsServiceUnavailable creates a PutIPAMsubnetsServiceUnavailable with default headers values
func NewPutIPAMsubnetsServiceUnavailable() *PutIPAMsubnetsServiceUnavailable {
	return &PutIPAMsubnetsServiceUnavailable{}
}

/*PutIPAMsubnetsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PutIPAMsubnetsServiceUnavailable struct {
}

func (o *PutIPAMsubnetsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnets/][%d] putIpAMsubnetsServiceUnavailable ", 503)
}

func (o *PutIPAMsubnetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutIPAMsubnetsOKBody put IP a msubnets o k body
swagger:model PutIPAMsubnetsOKBody
*/
type PutIPAMsubnetsOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this put IP a msubnets o k body
func (o *PutIPAMsubnetsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutIPAMsubnetsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutIPAMsubnetsOKBody) UnmarshalBinary(b []byte) error {
	var res PutIPAMsubnetsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
