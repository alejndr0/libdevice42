// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetIPAMvlansParams creates a new GetIPAMvlansParams object
// with the default values initialized.
func NewGetIPAMvlansParams() *GetIPAMvlansParams {
	var ()
	return &GetIPAMvlansParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetIPAMvlansParamsWithTimeout creates a new GetIPAMvlansParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetIPAMvlansParamsWithTimeout(timeout time.Duration) *GetIPAMvlansParams {
	var ()
	return &GetIPAMvlansParams{

		timeout: timeout,
	}
}

// NewGetIPAMvlansParamsWithContext creates a new GetIPAMvlansParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetIPAMvlansParamsWithContext(ctx context.Context) *GetIPAMvlansParams {
	var ()
	return &GetIPAMvlansParams{

		Context: ctx,
	}
}

// NewGetIPAMvlansParamsWithHTTPClient creates a new GetIPAMvlansParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetIPAMvlansParamsWithHTTPClient(client *http.Client) *GetIPAMvlansParams {
	var ()
	return &GetIPAMvlansParams{
		HTTPClient: client,
	}
}

/*GetIPAMvlansParams contains all the parameters to send to the API endpoint
for the get IP a mvlans operation typically these are written to a http.Request
*/
type GetIPAMvlansParams struct {

	/*Number
	  vlan number

	*/
	Number *string
	/*Tags
	  filter by tags. comma separated for multiple tags (This is an OR filter, gets all the devices for all comma separated tags)

	*/
	Tags *string
	/*TagsAnd
	  filter by all the tags, separated by comma. (This is an AND filter and all tags have to match for filter, this was added in v6.3.1)

	*/
	TagsAnd *string
	/*VlanID
	  ID of the vlan

	*/
	VlanID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get IP a mvlans params
func (o *GetIPAMvlansParams) WithTimeout(timeout time.Duration) *GetIPAMvlansParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get IP a mvlans params
func (o *GetIPAMvlansParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get IP a mvlans params
func (o *GetIPAMvlansParams) WithContext(ctx context.Context) *GetIPAMvlansParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get IP a mvlans params
func (o *GetIPAMvlansParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get IP a mvlans params
func (o *GetIPAMvlansParams) WithHTTPClient(client *http.Client) *GetIPAMvlansParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get IP a mvlans params
func (o *GetIPAMvlansParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNumber adds the number to the get IP a mvlans params
func (o *GetIPAMvlansParams) WithNumber(number *string) *GetIPAMvlansParams {
	o.SetNumber(number)
	return o
}

// SetNumber adds the number to the get IP a mvlans params
func (o *GetIPAMvlansParams) SetNumber(number *string) {
	o.Number = number
}

// WithTags adds the tags to the get IP a mvlans params
func (o *GetIPAMvlansParams) WithTags(tags *string) *GetIPAMvlansParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get IP a mvlans params
func (o *GetIPAMvlansParams) SetTags(tags *string) {
	o.Tags = tags
}

// WithTagsAnd adds the tagsAnd to the get IP a mvlans params
func (o *GetIPAMvlansParams) WithTagsAnd(tagsAnd *string) *GetIPAMvlansParams {
	o.SetTagsAnd(tagsAnd)
	return o
}

// SetTagsAnd adds the tagsAnd to the get IP a mvlans params
func (o *GetIPAMvlansParams) SetTagsAnd(tagsAnd *string) {
	o.TagsAnd = tagsAnd
}

// WithVlanID adds the vlanID to the get IP a mvlans params
func (o *GetIPAMvlansParams) WithVlanID(vlanID *string) *GetIPAMvlansParams {
	o.SetVlanID(vlanID)
	return o
}

// SetVlanID adds the vlanId to the get IP a mvlans params
func (o *GetIPAMvlansParams) SetVlanID(vlanID *string) {
	o.VlanID = vlanID
}

// WriteToRequest writes these params to a swagger request
func (o *GetIPAMvlansParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Number != nil {

		// query param number
		var qrNumber string
		if o.Number != nil {
			qrNumber = *o.Number
		}
		qNumber := qrNumber
		if qNumber != "" {
			if err := r.SetQueryParam("number", qNumber); err != nil {
				return err
			}
		}

	}

	if o.Tags != nil {

		// query param tags
		var qrTags string
		if o.Tags != nil {
			qrTags = *o.Tags
		}
		qTags := qrTags
		if qTags != "" {
			if err := r.SetQueryParam("tags", qTags); err != nil {
				return err
			}
		}

	}

	if o.TagsAnd != nil {

		// query param tags_and
		var qrTagsAnd string
		if o.TagsAnd != nil {
			qrTagsAnd = *o.TagsAnd
		}
		qTagsAnd := qrTagsAnd
		if qTagsAnd != "" {
			if err := r.SetQueryParam("tags_and", qTagsAnd); err != nil {
				return err
			}
		}

	}

	if o.VlanID != nil {

		// query param vlan_id
		var qrVlanID string
		if o.VlanID != nil {
			qrVlanID = *o.VlanID
		}
		qVlanID := qrVlanID
		if qVlanID != "" {
			if err := r.SetQueryParam("vlan_id", qVlanID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
