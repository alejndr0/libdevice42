// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetIPAMSearchReader is a Reader for the GetIPAMSearch structure.
type GetIPAMSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIPAMSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIPAMSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIPAMSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIPAMSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIPAMSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIPAMSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetIPAMSearchMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetIPAMSearchGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIPAMSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIPAMSearchServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIPAMSearchOK creates a GetIPAMSearchOK with default headers values
func NewGetIPAMSearchOK() *GetIPAMSearchOK {
	return &GetIPAMSearchOK{}
}

/*GetIPAMSearchOK handles this case with default header values.

The above command returns results like this:
*/
type GetIPAMSearchOK struct {
	Payload *GetIPAMSearchOKBody
}

func (o *GetIPAMSearchOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchOK  %+v", 200, o.Payload)
}

func (o *GetIPAMSearchOK) GetPayload() *GetIPAMSearchOKBody {
	return o.Payload
}

func (o *GetIPAMSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetIPAMSearchOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIPAMSearchBadRequest creates a GetIPAMSearchBadRequest with default headers values
func NewGetIPAMSearchBadRequest() *GetIPAMSearchBadRequest {
	return &GetIPAMSearchBadRequest{}
}

/*GetIPAMSearchBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetIPAMSearchBadRequest struct {
}

func (o *GetIPAMSearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchBadRequest ", 400)
}

func (o *GetIPAMSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSearchUnauthorized creates a GetIPAMSearchUnauthorized with default headers values
func NewGetIPAMSearchUnauthorized() *GetIPAMSearchUnauthorized {
	return &GetIPAMSearchUnauthorized{}
}

/*GetIPAMSearchUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetIPAMSearchUnauthorized struct {
}

func (o *GetIPAMSearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchUnauthorized ", 401)
}

func (o *GetIPAMSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSearchForbidden creates a GetIPAMSearchForbidden with default headers values
func NewGetIPAMSearchForbidden() *GetIPAMSearchForbidden {
	return &GetIPAMSearchForbidden{}
}

/*GetIPAMSearchForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetIPAMSearchForbidden struct {
}

func (o *GetIPAMSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchForbidden ", 403)
}

func (o *GetIPAMSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSearchNotFound creates a GetIPAMSearchNotFound with default headers values
func NewGetIPAMSearchNotFound() *GetIPAMSearchNotFound {
	return &GetIPAMSearchNotFound{}
}

/*GetIPAMSearchNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetIPAMSearchNotFound struct {
}

func (o *GetIPAMSearchNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchNotFound ", 404)
}

func (o *GetIPAMSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSearchMethodNotAllowed creates a GetIPAMSearchMethodNotAllowed with default headers values
func NewGetIPAMSearchMethodNotAllowed() *GetIPAMSearchMethodNotAllowed {
	return &GetIPAMSearchMethodNotAllowed{}
}

/*GetIPAMSearchMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetIPAMSearchMethodNotAllowed struct {
}

func (o *GetIPAMSearchMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchMethodNotAllowed ", 405)
}

func (o *GetIPAMSearchMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSearchGone creates a GetIPAMSearchGone with default headers values
func NewGetIPAMSearchGone() *GetIPAMSearchGone {
	return &GetIPAMSearchGone{}
}

/*GetIPAMSearchGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetIPAMSearchGone struct {
}

func (o *GetIPAMSearchGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchGone ", 410)
}

func (o *GetIPAMSearchGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSearchInternalServerError creates a GetIPAMSearchInternalServerError with default headers values
func NewGetIPAMSearchInternalServerError() *GetIPAMSearchInternalServerError {
	return &GetIPAMSearchInternalServerError{}
}

/*GetIPAMSearchInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetIPAMSearchInternalServerError struct {
}

func (o *GetIPAMSearchInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchInternalServerError ", 500)
}

func (o *GetIPAMSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSearchServiceUnavailable creates a GetIPAMSearchServiceUnavailable with default headers values
func NewGetIPAMSearchServiceUnavailable() *GetIPAMSearchServiceUnavailable {
	return &GetIPAMSearchServiceUnavailable{}
}

/*GetIPAMSearchServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetIPAMSearchServiceUnavailable struct {
}

func (o *GetIPAMSearchServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/search/][%d] getIpAMSearchServiceUnavailable ", 503)
}

func (o *GetIPAMSearchServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetIPAMSearchOKBody get IP a m search o k body
swagger:model GetIPAMSearchOKBody
*/
type GetIPAMSearchOKBody struct {

	// ips
	Ips []*IpsItems0 `json:"ips"`
}

// Validate validates this get IP a m search o k body
func (o *GetIPAMSearchOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIps(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIPAMSearchOKBody) validateIps(formats strfmt.Registry) error {

	if swag.IsZero(o.Ips) { // not required
		return nil
	}

	for i := 0; i < len(o.Ips); i++ {
		if swag.IsZero(o.Ips[i]) { // not required
			continue
		}

		if o.Ips[i] != nil {
			if err := o.Ips[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIpAMSearchOK" + "." + "ips" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIPAMSearchOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIPAMSearchOKBody) UnmarshalBinary(b []byte) error {
	var res GetIPAMSearchOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
