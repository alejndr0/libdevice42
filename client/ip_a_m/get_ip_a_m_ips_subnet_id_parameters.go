// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetIPAMIpsSubnetIDParams creates a new GetIPAMIpsSubnetIDParams object
// with the default values initialized.
func NewGetIPAMIpsSubnetIDParams() *GetIPAMIpsSubnetIDParams {
	var ()
	return &GetIPAMIpsSubnetIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetIPAMIpsSubnetIDParamsWithTimeout creates a new GetIPAMIpsSubnetIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetIPAMIpsSubnetIDParamsWithTimeout(timeout time.Duration) *GetIPAMIpsSubnetIDParams {
	var ()
	return &GetIPAMIpsSubnetIDParams{

		timeout: timeout,
	}
}

// NewGetIPAMIpsSubnetIDParamsWithContext creates a new GetIPAMIpsSubnetIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetIPAMIpsSubnetIDParamsWithContext(ctx context.Context) *GetIPAMIpsSubnetIDParams {
	var ()
	return &GetIPAMIpsSubnetIDParams{

		Context: ctx,
	}
}

// NewGetIPAMIpsSubnetIDParamsWithHTTPClient creates a new GetIPAMIpsSubnetIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetIPAMIpsSubnetIDParamsWithHTTPClient(client *http.Client) *GetIPAMIpsSubnetIDParams {
	var ()
	return &GetIPAMIpsSubnetIDParams{
		HTTPClient: client,
	}
}

/*GetIPAMIpsSubnetIDParams contains all the parameters to send to the API endpoint
for the get IP a m ips subnet id operation typically these are written to a http.Request
*/
type GetIPAMIpsSubnetIDParams struct {

	/*SubnetID*/
	SubnetID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get IP a m ips subnet id params
func (o *GetIPAMIpsSubnetIDParams) WithTimeout(timeout time.Duration) *GetIPAMIpsSubnetIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get IP a m ips subnet id params
func (o *GetIPAMIpsSubnetIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get IP a m ips subnet id params
func (o *GetIPAMIpsSubnetIDParams) WithContext(ctx context.Context) *GetIPAMIpsSubnetIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get IP a m ips subnet id params
func (o *GetIPAMIpsSubnetIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get IP a m ips subnet id params
func (o *GetIPAMIpsSubnetIDParams) WithHTTPClient(client *http.Client) *GetIPAMIpsSubnetIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get IP a m ips subnet id params
func (o *GetIPAMIpsSubnetIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSubnetID adds the subnetID to the get IP a m ips subnet id params
func (o *GetIPAMIpsSubnetIDParams) WithSubnetID(subnetID int64) *GetIPAMIpsSubnetIDParams {
	o.SetSubnetID(subnetID)
	return o
}

// SetSubnetID adds the subnetId to the get IP a m ips subnet id params
func (o *GetIPAMIpsSubnetIDParams) SetSubnetID(subnetID int64) {
	o.SubnetID = subnetID
}

// WriteToRequest writes these params to a swagger request
func (o *GetIPAMIpsSubnetIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param subnet_id
	if err := r.SetPathParam("subnet_id", swag.FormatInt64(o.SubnetID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
