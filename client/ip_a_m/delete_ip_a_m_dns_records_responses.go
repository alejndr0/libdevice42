// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteIPAMDNSRecordsReader is a Reader for the DeleteIPAMDNSRecords structure.
type DeleteIPAMDNSRecordsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIPAMDNSRecordsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIPAMDNSRecordsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIPAMDNSRecordsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIPAMDNSRecordsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIPAMDNSRecordsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteIPAMDNSRecordsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteIPAMDNSRecordsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewDeleteIPAMDNSRecordsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteIPAMDNSRecordsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteIPAMDNSRecordsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteIPAMDNSRecordsOK creates a DeleteIPAMDNSRecordsOK with default headers values
func NewDeleteIPAMDNSRecordsOK() *DeleteIPAMDNSRecordsOK {
	return &DeleteIPAMDNSRecordsOK{}
}

/*DeleteIPAMDNSRecordsOK handles this case with default header values.

The above command returns results like this:
*/
type DeleteIPAMDNSRecordsOK struct {
	Payload *DeleteIPAMDNSRecordsOKBody
}

func (o *DeleteIPAMDNSRecordsOK) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsOK  %+v", 200, o.Payload)
}

func (o *DeleteIPAMDNSRecordsOK) GetPayload() *DeleteIPAMDNSRecordsOKBody {
	return o.Payload
}

func (o *DeleteIPAMDNSRecordsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteIPAMDNSRecordsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIPAMDNSRecordsBadRequest creates a DeleteIPAMDNSRecordsBadRequest with default headers values
func NewDeleteIPAMDNSRecordsBadRequest() *DeleteIPAMDNSRecordsBadRequest {
	return &DeleteIPAMDNSRecordsBadRequest{}
}

/*DeleteIPAMDNSRecordsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type DeleteIPAMDNSRecordsBadRequest struct {
}

func (o *DeleteIPAMDNSRecordsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsBadRequest ", 400)
}

func (o *DeleteIPAMDNSRecordsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMDNSRecordsUnauthorized creates a DeleteIPAMDNSRecordsUnauthorized with default headers values
func NewDeleteIPAMDNSRecordsUnauthorized() *DeleteIPAMDNSRecordsUnauthorized {
	return &DeleteIPAMDNSRecordsUnauthorized{}
}

/*DeleteIPAMDNSRecordsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type DeleteIPAMDNSRecordsUnauthorized struct {
}

func (o *DeleteIPAMDNSRecordsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsUnauthorized ", 401)
}

func (o *DeleteIPAMDNSRecordsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMDNSRecordsForbidden creates a DeleteIPAMDNSRecordsForbidden with default headers values
func NewDeleteIPAMDNSRecordsForbidden() *DeleteIPAMDNSRecordsForbidden {
	return &DeleteIPAMDNSRecordsForbidden{}
}

/*DeleteIPAMDNSRecordsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type DeleteIPAMDNSRecordsForbidden struct {
}

func (o *DeleteIPAMDNSRecordsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsForbidden ", 403)
}

func (o *DeleteIPAMDNSRecordsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMDNSRecordsNotFound creates a DeleteIPAMDNSRecordsNotFound with default headers values
func NewDeleteIPAMDNSRecordsNotFound() *DeleteIPAMDNSRecordsNotFound {
	return &DeleteIPAMDNSRecordsNotFound{}
}

/*DeleteIPAMDNSRecordsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type DeleteIPAMDNSRecordsNotFound struct {
}

func (o *DeleteIPAMDNSRecordsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsNotFound ", 404)
}

func (o *DeleteIPAMDNSRecordsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMDNSRecordsMethodNotAllowed creates a DeleteIPAMDNSRecordsMethodNotAllowed with default headers values
func NewDeleteIPAMDNSRecordsMethodNotAllowed() *DeleteIPAMDNSRecordsMethodNotAllowed {
	return &DeleteIPAMDNSRecordsMethodNotAllowed{}
}

/*DeleteIPAMDNSRecordsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type DeleteIPAMDNSRecordsMethodNotAllowed struct {
}

func (o *DeleteIPAMDNSRecordsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsMethodNotAllowed ", 405)
}

func (o *DeleteIPAMDNSRecordsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMDNSRecordsGone creates a DeleteIPAMDNSRecordsGone with default headers values
func NewDeleteIPAMDNSRecordsGone() *DeleteIPAMDNSRecordsGone {
	return &DeleteIPAMDNSRecordsGone{}
}

/*DeleteIPAMDNSRecordsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type DeleteIPAMDNSRecordsGone struct {
}

func (o *DeleteIPAMDNSRecordsGone) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsGone ", 410)
}

func (o *DeleteIPAMDNSRecordsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMDNSRecordsInternalServerError creates a DeleteIPAMDNSRecordsInternalServerError with default headers values
func NewDeleteIPAMDNSRecordsInternalServerError() *DeleteIPAMDNSRecordsInternalServerError {
	return &DeleteIPAMDNSRecordsInternalServerError{}
}

/*DeleteIPAMDNSRecordsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type DeleteIPAMDNSRecordsInternalServerError struct {
}

func (o *DeleteIPAMDNSRecordsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsInternalServerError ", 500)
}

func (o *DeleteIPAMDNSRecordsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPAMDNSRecordsServiceUnavailable creates a DeleteIPAMDNSRecordsServiceUnavailable with default headers values
func NewDeleteIPAMDNSRecordsServiceUnavailable() *DeleteIPAMDNSRecordsServiceUnavailable {
	return &DeleteIPAMDNSRecordsServiceUnavailable{}
}

/*DeleteIPAMDNSRecordsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type DeleteIPAMDNSRecordsServiceUnavailable struct {
}

func (o *DeleteIPAMDNSRecordsServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/dns/records/{id}][%d] deleteIpAMDnsRecordsServiceUnavailable ", 503)
}

func (o *DeleteIPAMDNSRecordsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DeleteIPAMDNSRecordsOKBody delete IP a m DNS records o k body
swagger:model DeleteIPAMDNSRecordsOKBody
*/
type DeleteIPAMDNSRecordsOKBody struct {

	// deleted
	Deleted interface{} `json:"deleted,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`
}

// Validate validates this delete IP a m DNS records o k body
func (o *DeleteIPAMDNSRecordsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteIPAMDNSRecordsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteIPAMDNSRecordsOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteIPAMDNSRecordsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
