// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutIPAMsubnetcategoryReader is a Reader for the PutIPAMsubnetcategory structure.
type PutIPAMsubnetcategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutIPAMsubnetcategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutIPAMsubnetcategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutIPAMsubnetcategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutIPAMsubnetcategoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutIPAMsubnetcategoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutIPAMsubnetcategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutIPAMsubnetcategoryMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPutIPAMsubnetcategoryGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutIPAMsubnetcategoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutIPAMsubnetcategoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutIPAMsubnetcategoryOK creates a PutIPAMsubnetcategoryOK with default headers values
func NewPutIPAMsubnetcategoryOK() *PutIPAMsubnetcategoryOK {
	return &PutIPAMsubnetcategoryOK{}
}

/*PutIPAMsubnetcategoryOK handles this case with default header values.

The above command returns JSON structured like this:
*/
type PutIPAMsubnetcategoryOK struct {
	Payload *PutIPAMsubnetcategoryOKBody
}

func (o *PutIPAMsubnetcategoryOK) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryOK  %+v", 200, o.Payload)
}

func (o *PutIPAMsubnetcategoryOK) GetPayload() *PutIPAMsubnetcategoryOKBody {
	return o.Payload
}

func (o *PutIPAMsubnetcategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutIPAMsubnetcategoryOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutIPAMsubnetcategoryBadRequest creates a PutIPAMsubnetcategoryBadRequest with default headers values
func NewPutIPAMsubnetcategoryBadRequest() *PutIPAMsubnetcategoryBadRequest {
	return &PutIPAMsubnetcategoryBadRequest{}
}

/*PutIPAMsubnetcategoryBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PutIPAMsubnetcategoryBadRequest struct {
}

func (o *PutIPAMsubnetcategoryBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryBadRequest ", 400)
}

func (o *PutIPAMsubnetcategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetcategoryUnauthorized creates a PutIPAMsubnetcategoryUnauthorized with default headers values
func NewPutIPAMsubnetcategoryUnauthorized() *PutIPAMsubnetcategoryUnauthorized {
	return &PutIPAMsubnetcategoryUnauthorized{}
}

/*PutIPAMsubnetcategoryUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PutIPAMsubnetcategoryUnauthorized struct {
}

func (o *PutIPAMsubnetcategoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryUnauthorized ", 401)
}

func (o *PutIPAMsubnetcategoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetcategoryForbidden creates a PutIPAMsubnetcategoryForbidden with default headers values
func NewPutIPAMsubnetcategoryForbidden() *PutIPAMsubnetcategoryForbidden {
	return &PutIPAMsubnetcategoryForbidden{}
}

/*PutIPAMsubnetcategoryForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PutIPAMsubnetcategoryForbidden struct {
}

func (o *PutIPAMsubnetcategoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryForbidden ", 403)
}

func (o *PutIPAMsubnetcategoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetcategoryNotFound creates a PutIPAMsubnetcategoryNotFound with default headers values
func NewPutIPAMsubnetcategoryNotFound() *PutIPAMsubnetcategoryNotFound {
	return &PutIPAMsubnetcategoryNotFound{}
}

/*PutIPAMsubnetcategoryNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PutIPAMsubnetcategoryNotFound struct {
}

func (o *PutIPAMsubnetcategoryNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryNotFound ", 404)
}

func (o *PutIPAMsubnetcategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetcategoryMethodNotAllowed creates a PutIPAMsubnetcategoryMethodNotAllowed with default headers values
func NewPutIPAMsubnetcategoryMethodNotAllowed() *PutIPAMsubnetcategoryMethodNotAllowed {
	return &PutIPAMsubnetcategoryMethodNotAllowed{}
}

/*PutIPAMsubnetcategoryMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PutIPAMsubnetcategoryMethodNotAllowed struct {
}

func (o *PutIPAMsubnetcategoryMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryMethodNotAllowed ", 405)
}

func (o *PutIPAMsubnetcategoryMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetcategoryGone creates a PutIPAMsubnetcategoryGone with default headers values
func NewPutIPAMsubnetcategoryGone() *PutIPAMsubnetcategoryGone {
	return &PutIPAMsubnetcategoryGone{}
}

/*PutIPAMsubnetcategoryGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PutIPAMsubnetcategoryGone struct {
}

func (o *PutIPAMsubnetcategoryGone) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryGone ", 410)
}

func (o *PutIPAMsubnetcategoryGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetcategoryInternalServerError creates a PutIPAMsubnetcategoryInternalServerError with default headers values
func NewPutIPAMsubnetcategoryInternalServerError() *PutIPAMsubnetcategoryInternalServerError {
	return &PutIPAMsubnetcategoryInternalServerError{}
}

/*PutIPAMsubnetcategoryInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PutIPAMsubnetcategoryInternalServerError struct {
}

func (o *PutIPAMsubnetcategoryInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryInternalServerError ", 500)
}

func (o *PutIPAMsubnetcategoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutIPAMsubnetcategoryServiceUnavailable creates a PutIPAMsubnetcategoryServiceUnavailable with default headers values
func NewPutIPAMsubnetcategoryServiceUnavailable() *PutIPAMsubnetcategoryServiceUnavailable {
	return &PutIPAMsubnetcategoryServiceUnavailable{}
}

/*PutIPAMsubnetcategoryServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PutIPAMsubnetcategoryServiceUnavailable struct {
}

func (o *PutIPAMsubnetcategoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/subnet_category/][%d] putIpAMsubnetcategoryServiceUnavailable ", 503)
}

func (o *PutIPAMsubnetcategoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutIPAMsubnetcategoryOKBody put IP a msubnetcategory o k body
swagger:model PutIPAMsubnetcategoryOKBody
*/
type PutIPAMsubnetcategoryOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this put IP a msubnetcategory o k body
func (o *PutIPAMsubnetcategoryOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutIPAMsubnetcategoryOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutIPAMsubnetcategoryOKBody) UnmarshalBinary(b []byte) error {
	var res PutIPAMsubnetcategoryOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
