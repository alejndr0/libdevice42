// Code generated by go-swagger; DO NOT EDIT.

package passwords

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeletePasswordReader is a Reader for the DeletePassword structure.
type DeletePasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeletePasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePasswordForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePasswordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeletePasswordMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewDeletePasswordGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeletePasswordServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePasswordOK creates a DeletePasswordOK with default headers values
func NewDeletePasswordOK() *DeletePasswordOK {
	return &DeletePasswordOK{}
}

/*DeletePasswordOK handles this case with default header values.

The above command returns results like this:
*/
type DeletePasswordOK struct {
	Payload *DeletePasswordOKBody
}

func (o *DeletePasswordOK) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordOK  %+v", 200, o.Payload)
}

func (o *DeletePasswordOK) GetPayload() *DeletePasswordOKBody {
	return o.Payload
}

func (o *DeletePasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeletePasswordOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePasswordBadRequest creates a DeletePasswordBadRequest with default headers values
func NewDeletePasswordBadRequest() *DeletePasswordBadRequest {
	return &DeletePasswordBadRequest{}
}

/*DeletePasswordBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type DeletePasswordBadRequest struct {
}

func (o *DeletePasswordBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordBadRequest ", 400)
}

func (o *DeletePasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePasswordUnauthorized creates a DeletePasswordUnauthorized with default headers values
func NewDeletePasswordUnauthorized() *DeletePasswordUnauthorized {
	return &DeletePasswordUnauthorized{}
}

/*DeletePasswordUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type DeletePasswordUnauthorized struct {
}

func (o *DeletePasswordUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordUnauthorized ", 401)
}

func (o *DeletePasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePasswordForbidden creates a DeletePasswordForbidden with default headers values
func NewDeletePasswordForbidden() *DeletePasswordForbidden {
	return &DeletePasswordForbidden{}
}

/*DeletePasswordForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type DeletePasswordForbidden struct {
}

func (o *DeletePasswordForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordForbidden ", 403)
}

func (o *DeletePasswordForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePasswordNotFound creates a DeletePasswordNotFound with default headers values
func NewDeletePasswordNotFound() *DeletePasswordNotFound {
	return &DeletePasswordNotFound{}
}

/*DeletePasswordNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type DeletePasswordNotFound struct {
}

func (o *DeletePasswordNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordNotFound ", 404)
}

func (o *DeletePasswordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePasswordMethodNotAllowed creates a DeletePasswordMethodNotAllowed with default headers values
func NewDeletePasswordMethodNotAllowed() *DeletePasswordMethodNotAllowed {
	return &DeletePasswordMethodNotAllowed{}
}

/*DeletePasswordMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type DeletePasswordMethodNotAllowed struct {
}

func (o *DeletePasswordMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordMethodNotAllowed ", 405)
}

func (o *DeletePasswordMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePasswordGone creates a DeletePasswordGone with default headers values
func NewDeletePasswordGone() *DeletePasswordGone {
	return &DeletePasswordGone{}
}

/*DeletePasswordGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type DeletePasswordGone struct {
}

func (o *DeletePasswordGone) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordGone ", 410)
}

func (o *DeletePasswordGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePasswordInternalServerError creates a DeletePasswordInternalServerError with default headers values
func NewDeletePasswordInternalServerError() *DeletePasswordInternalServerError {
	return &DeletePasswordInternalServerError{}
}

/*DeletePasswordInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type DeletePasswordInternalServerError struct {
}

func (o *DeletePasswordInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordInternalServerError ", 500)
}

func (o *DeletePasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePasswordServiceUnavailable creates a DeletePasswordServiceUnavailable with default headers values
func NewDeletePasswordServiceUnavailable() *DeletePasswordServiceUnavailable {
	return &DeletePasswordServiceUnavailable{}
}

/*DeletePasswordServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type DeletePasswordServiceUnavailable struct {
}

func (o *DeletePasswordServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/passwords/{id}/][%d] deletePasswordServiceUnavailable ", 503)
}

func (o *DeletePasswordServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DeletePasswordOKBody delete password o k body
swagger:model DeletePasswordOKBody
*/
type DeletePasswordOKBody struct {

	// deleted
	Deleted interface{} `json:"deleted,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`
}

// Validate validates this delete password o k body
func (o *DeletePasswordOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePasswordOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePasswordOKBody) UnmarshalBinary(b []byte) error {
	var res DeletePasswordOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
