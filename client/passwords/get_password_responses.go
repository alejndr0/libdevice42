// Code generated by go-swagger; DO NOT EDIT.

package passwords

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetPasswordReader is a Reader for the GetPassword structure.
type GetPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPasswordForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPasswordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetPasswordMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetPasswordGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPasswordServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPasswordOK creates a GetPasswordOK with default headers values
func NewGetPasswordOK() *GetPasswordOK {
	return &GetPasswordOK{}
}

/*GetPasswordOK handles this case with default header values.

The above command returns results like this:
*/
type GetPasswordOK struct {
	Payload *GetPasswordOKBody
}

func (o *GetPasswordOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordOK  %+v", 200, o.Payload)
}

func (o *GetPasswordOK) GetPayload() *GetPasswordOKBody {
	return o.Payload
}

func (o *GetPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPasswordOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPasswordBadRequest creates a GetPasswordBadRequest with default headers values
func NewGetPasswordBadRequest() *GetPasswordBadRequest {
	return &GetPasswordBadRequest{}
}

/*GetPasswordBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetPasswordBadRequest struct {
}

func (o *GetPasswordBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordBadRequest ", 400)
}

func (o *GetPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPasswordUnauthorized creates a GetPasswordUnauthorized with default headers values
func NewGetPasswordUnauthorized() *GetPasswordUnauthorized {
	return &GetPasswordUnauthorized{}
}

/*GetPasswordUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetPasswordUnauthorized struct {
}

func (o *GetPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordUnauthorized ", 401)
}

func (o *GetPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPasswordForbidden creates a GetPasswordForbidden with default headers values
func NewGetPasswordForbidden() *GetPasswordForbidden {
	return &GetPasswordForbidden{}
}

/*GetPasswordForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetPasswordForbidden struct {
}

func (o *GetPasswordForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordForbidden ", 403)
}

func (o *GetPasswordForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPasswordNotFound creates a GetPasswordNotFound with default headers values
func NewGetPasswordNotFound() *GetPasswordNotFound {
	return &GetPasswordNotFound{}
}

/*GetPasswordNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetPasswordNotFound struct {
}

func (o *GetPasswordNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordNotFound ", 404)
}

func (o *GetPasswordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPasswordMethodNotAllowed creates a GetPasswordMethodNotAllowed with default headers values
func NewGetPasswordMethodNotAllowed() *GetPasswordMethodNotAllowed {
	return &GetPasswordMethodNotAllowed{}
}

/*GetPasswordMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetPasswordMethodNotAllowed struct {
}

func (o *GetPasswordMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordMethodNotAllowed ", 405)
}

func (o *GetPasswordMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPasswordGone creates a GetPasswordGone with default headers values
func NewGetPasswordGone() *GetPasswordGone {
	return &GetPasswordGone{}
}

/*GetPasswordGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetPasswordGone struct {
}

func (o *GetPasswordGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordGone ", 410)
}

func (o *GetPasswordGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPasswordInternalServerError creates a GetPasswordInternalServerError with default headers values
func NewGetPasswordInternalServerError() *GetPasswordInternalServerError {
	return &GetPasswordInternalServerError{}
}

/*GetPasswordInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetPasswordInternalServerError struct {
}

func (o *GetPasswordInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordInternalServerError ", 500)
}

func (o *GetPasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPasswordServiceUnavailable creates a GetPasswordServiceUnavailable with default headers values
func NewGetPasswordServiceUnavailable() *GetPasswordServiceUnavailable {
	return &GetPasswordServiceUnavailable{}
}

/*GetPasswordServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetPasswordServiceUnavailable struct {
}

func (o *GetPasswordServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/passwords/][%d] getPasswordServiceUnavailable ", 503)
}

func (o *GetPasswordServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetPasswordOKBody get password o k body
swagger:model GetPasswordOKBody
*/
type GetPasswordOKBody struct {

	// passwords
	Passwords []*PasswordsItems0 `json:"Passwords"`
}

// Validate validates this get password o k body
func (o *GetPasswordOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePasswords(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPasswordOKBody) validatePasswords(formats strfmt.Registry) error {

	if swag.IsZero(o.Passwords) { // not required
		return nil
	}

	for i := 0; i < len(o.Passwords); i++ {
		if swag.IsZero(o.Passwords[i]) { // not required
			continue
		}

		if o.Passwords[i] != nil {
			if err := o.Passwords[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPasswordOK" + "." + "Passwords" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPasswordOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPasswordOKBody) UnmarshalBinary(b []byte) error {
	var res GetPasswordOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PasswordsItems0 passwords items0
swagger:model PasswordsItems0
*/
type PasswordsItems0 struct {

	// first added
	FirstAdded interface{} `json:"first_added,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`

	// label
	Label interface{} `json:"label,omitempty"`

	// last pw change
	LastPwChange interface{} `json:"last_pw_change,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// password
	Password interface{} `json:"password,omitempty"`

	// username
	Username interface{} `json:"username,omitempty"`
}

// Validate validates this passwords items0
func (o *PasswordsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PasswordsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PasswordsItems0) UnmarshalBinary(b []byte) error {
	var res PasswordsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
