// Code generated by go-swagger; DO NOT EDIT.

package software

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteSoftwareLicenseKeysReader is a Reader for the DeleteSoftwareLicenseKeys structure.
type DeleteSoftwareLicenseKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSoftwareLicenseKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSoftwareLicenseKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSoftwareLicenseKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteSoftwareLicenseKeysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSoftwareLicenseKeysForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSoftwareLicenseKeysNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteSoftwareLicenseKeysMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewDeleteSoftwareLicenseKeysGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSoftwareLicenseKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteSoftwareLicenseKeysServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSoftwareLicenseKeysOK creates a DeleteSoftwareLicenseKeysOK with default headers values
func NewDeleteSoftwareLicenseKeysOK() *DeleteSoftwareLicenseKeysOK {
	return &DeleteSoftwareLicenseKeysOK{}
}

/*DeleteSoftwareLicenseKeysOK handles this case with default header values.

The above command returns results like this:
*/
type DeleteSoftwareLicenseKeysOK struct {
	Payload *DeleteSoftwareLicenseKeysOKBody
}

func (o *DeleteSoftwareLicenseKeysOK) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysOK  %+v", 200, o.Payload)
}

func (o *DeleteSoftwareLicenseKeysOK) GetPayload() *DeleteSoftwareLicenseKeysOKBody {
	return o.Payload
}

func (o *DeleteSoftwareLicenseKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteSoftwareLicenseKeysOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSoftwareLicenseKeysBadRequest creates a DeleteSoftwareLicenseKeysBadRequest with default headers values
func NewDeleteSoftwareLicenseKeysBadRequest() *DeleteSoftwareLicenseKeysBadRequest {
	return &DeleteSoftwareLicenseKeysBadRequest{}
}

/*DeleteSoftwareLicenseKeysBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type DeleteSoftwareLicenseKeysBadRequest struct {
}

func (o *DeleteSoftwareLicenseKeysBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysBadRequest ", 400)
}

func (o *DeleteSoftwareLicenseKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwareLicenseKeysUnauthorized creates a DeleteSoftwareLicenseKeysUnauthorized with default headers values
func NewDeleteSoftwareLicenseKeysUnauthorized() *DeleteSoftwareLicenseKeysUnauthorized {
	return &DeleteSoftwareLicenseKeysUnauthorized{}
}

/*DeleteSoftwareLicenseKeysUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type DeleteSoftwareLicenseKeysUnauthorized struct {
}

func (o *DeleteSoftwareLicenseKeysUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysUnauthorized ", 401)
}

func (o *DeleteSoftwareLicenseKeysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwareLicenseKeysForbidden creates a DeleteSoftwareLicenseKeysForbidden with default headers values
func NewDeleteSoftwareLicenseKeysForbidden() *DeleteSoftwareLicenseKeysForbidden {
	return &DeleteSoftwareLicenseKeysForbidden{}
}

/*DeleteSoftwareLicenseKeysForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type DeleteSoftwareLicenseKeysForbidden struct {
}

func (o *DeleteSoftwareLicenseKeysForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysForbidden ", 403)
}

func (o *DeleteSoftwareLicenseKeysForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwareLicenseKeysNotFound creates a DeleteSoftwareLicenseKeysNotFound with default headers values
func NewDeleteSoftwareLicenseKeysNotFound() *DeleteSoftwareLicenseKeysNotFound {
	return &DeleteSoftwareLicenseKeysNotFound{}
}

/*DeleteSoftwareLicenseKeysNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type DeleteSoftwareLicenseKeysNotFound struct {
}

func (o *DeleteSoftwareLicenseKeysNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysNotFound ", 404)
}

func (o *DeleteSoftwareLicenseKeysNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwareLicenseKeysMethodNotAllowed creates a DeleteSoftwareLicenseKeysMethodNotAllowed with default headers values
func NewDeleteSoftwareLicenseKeysMethodNotAllowed() *DeleteSoftwareLicenseKeysMethodNotAllowed {
	return &DeleteSoftwareLicenseKeysMethodNotAllowed{}
}

/*DeleteSoftwareLicenseKeysMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type DeleteSoftwareLicenseKeysMethodNotAllowed struct {
}

func (o *DeleteSoftwareLicenseKeysMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysMethodNotAllowed ", 405)
}

func (o *DeleteSoftwareLicenseKeysMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwareLicenseKeysGone creates a DeleteSoftwareLicenseKeysGone with default headers values
func NewDeleteSoftwareLicenseKeysGone() *DeleteSoftwareLicenseKeysGone {
	return &DeleteSoftwareLicenseKeysGone{}
}

/*DeleteSoftwareLicenseKeysGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type DeleteSoftwareLicenseKeysGone struct {
}

func (o *DeleteSoftwareLicenseKeysGone) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysGone ", 410)
}

func (o *DeleteSoftwareLicenseKeysGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwareLicenseKeysInternalServerError creates a DeleteSoftwareLicenseKeysInternalServerError with default headers values
func NewDeleteSoftwareLicenseKeysInternalServerError() *DeleteSoftwareLicenseKeysInternalServerError {
	return &DeleteSoftwareLicenseKeysInternalServerError{}
}

/*DeleteSoftwareLicenseKeysInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type DeleteSoftwareLicenseKeysInternalServerError struct {
}

func (o *DeleteSoftwareLicenseKeysInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysInternalServerError ", 500)
}

func (o *DeleteSoftwareLicenseKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwareLicenseKeysServiceUnavailable creates a DeleteSoftwareLicenseKeysServiceUnavailable with default headers values
func NewDeleteSoftwareLicenseKeysServiceUnavailable() *DeleteSoftwareLicenseKeysServiceUnavailable {
	return &DeleteSoftwareLicenseKeysServiceUnavailable{}
}

/*DeleteSoftwareLicenseKeysServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type DeleteSoftwareLicenseKeysServiceUnavailable struct {
}

func (o *DeleteSoftwareLicenseKeysServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/software/license_keys/{id}/][%d] deleteSoftwareLicenseKeysServiceUnavailable ", 503)
}

func (o *DeleteSoftwareLicenseKeysServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DeleteSoftwareLicenseKeysOKBody delete software license keys o k body
swagger:model DeleteSoftwareLicenseKeysOKBody
*/
type DeleteSoftwareLicenseKeysOKBody struct {

	// deleted
	Deleted interface{} `json:"deleted,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`
}

// Validate validates this delete software license keys o k body
func (o *DeleteSoftwareLicenseKeysOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteSoftwareLicenseKeysOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteSoftwareLicenseKeysOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteSoftwareLicenseKeysOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
