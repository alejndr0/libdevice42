// Code generated by go-swagger; DO NOT EDIT.

package software

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostUpdateServicePortsReader is a Reader for the PostUpdateServicePorts structure.
type PostUpdateServicePortsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUpdateServicePortsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUpdateServicePortsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUpdateServicePortsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUpdateServicePortsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUpdateServicePortsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUpdateServicePortsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostUpdateServicePortsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostUpdateServicePortsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUpdateServicePortsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUpdateServicePortsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUpdateServicePortsOK creates a PostUpdateServicePortsOK with default headers values
func NewPostUpdateServicePortsOK() *PostUpdateServicePortsOK {
	return &PostUpdateServicePortsOK{}
}

/*PostUpdateServicePortsOK handles this case with default header values.

The above command returns results like this:
*/
type PostUpdateServicePortsOK struct {
	Payload *PostUpdateServicePortsOKBody
}

func (o *PostUpdateServicePortsOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsOK  %+v", 200, o.Payload)
}

func (o *PostUpdateServicePortsOK) GetPayload() *PostUpdateServicePortsOKBody {
	return o.Payload
}

func (o *PostUpdateServicePortsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostUpdateServicePortsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUpdateServicePortsBadRequest creates a PostUpdateServicePortsBadRequest with default headers values
func NewPostUpdateServicePortsBadRequest() *PostUpdateServicePortsBadRequest {
	return &PostUpdateServicePortsBadRequest{}
}

/*PostUpdateServicePortsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostUpdateServicePortsBadRequest struct {
}

func (o *PostUpdateServicePortsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsBadRequest ", 400)
}

func (o *PostUpdateServicePortsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateServicePortsUnauthorized creates a PostUpdateServicePortsUnauthorized with default headers values
func NewPostUpdateServicePortsUnauthorized() *PostUpdateServicePortsUnauthorized {
	return &PostUpdateServicePortsUnauthorized{}
}

/*PostUpdateServicePortsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostUpdateServicePortsUnauthorized struct {
}

func (o *PostUpdateServicePortsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsUnauthorized ", 401)
}

func (o *PostUpdateServicePortsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateServicePortsForbidden creates a PostUpdateServicePortsForbidden with default headers values
func NewPostUpdateServicePortsForbidden() *PostUpdateServicePortsForbidden {
	return &PostUpdateServicePortsForbidden{}
}

/*PostUpdateServicePortsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostUpdateServicePortsForbidden struct {
}

func (o *PostUpdateServicePortsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsForbidden ", 403)
}

func (o *PostUpdateServicePortsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateServicePortsNotFound creates a PostUpdateServicePortsNotFound with default headers values
func NewPostUpdateServicePortsNotFound() *PostUpdateServicePortsNotFound {
	return &PostUpdateServicePortsNotFound{}
}

/*PostUpdateServicePortsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostUpdateServicePortsNotFound struct {
}

func (o *PostUpdateServicePortsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsNotFound ", 404)
}

func (o *PostUpdateServicePortsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateServicePortsMethodNotAllowed creates a PostUpdateServicePortsMethodNotAllowed with default headers values
func NewPostUpdateServicePortsMethodNotAllowed() *PostUpdateServicePortsMethodNotAllowed {
	return &PostUpdateServicePortsMethodNotAllowed{}
}

/*PostUpdateServicePortsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostUpdateServicePortsMethodNotAllowed struct {
}

func (o *PostUpdateServicePortsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsMethodNotAllowed ", 405)
}

func (o *PostUpdateServicePortsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateServicePortsGone creates a PostUpdateServicePortsGone with default headers values
func NewPostUpdateServicePortsGone() *PostUpdateServicePortsGone {
	return &PostUpdateServicePortsGone{}
}

/*PostUpdateServicePortsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostUpdateServicePortsGone struct {
}

func (o *PostUpdateServicePortsGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsGone ", 410)
}

func (o *PostUpdateServicePortsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateServicePortsInternalServerError creates a PostUpdateServicePortsInternalServerError with default headers values
func NewPostUpdateServicePortsInternalServerError() *PostUpdateServicePortsInternalServerError {
	return &PostUpdateServicePortsInternalServerError{}
}

/*PostUpdateServicePortsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostUpdateServicePortsInternalServerError struct {
}

func (o *PostUpdateServicePortsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsInternalServerError ", 500)
}

func (o *PostUpdateServicePortsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateServicePortsServiceUnavailable creates a PostUpdateServicePortsServiceUnavailable with default headers values
func NewPostUpdateServicePortsServiceUnavailable() *PostUpdateServicePortsServiceUnavailable {
	return &PostUpdateServicePortsServiceUnavailable{}
}

/*PostUpdateServicePortsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostUpdateServicePortsServiceUnavailable struct {
}

func (o *PostUpdateServicePortsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/software_details/][%d] postUpdateServicePortsServiceUnavailable ", 503)
}

func (o *PostUpdateServicePortsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostUpdateServicePortsOKBody post update service ports o k body
swagger:model PostUpdateServicePortsOKBody
*/
type PostUpdateServicePortsOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post update service ports o k body
func (o *PostUpdateServicePortsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUpdateServicePortsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUpdateServicePortsOKBody) UnmarshalBinary(b []byte) error {
	var res PostUpdateServicePortsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
