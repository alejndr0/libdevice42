// Code generated by go-swagger; DO NOT EDIT.

package p_d_u

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutPdusPortsReader is a Reader for the PutPdusPorts structure.
type PutPdusPortsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutPdusPortsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutPdusPortsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutPdusPortsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutPdusPortsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutPdusPortsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutPdusPortsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutPdusPortsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPutPdusPortsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutPdusPortsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutPdusPortsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutPdusPortsOK creates a PutPdusPortsOK with default headers values
func NewPutPdusPortsOK() *PutPdusPortsOK {
	return &PutPdusPortsOK{}
}

/*PutPdusPortsOK handles this case with default header values.

The above command returns results like this:
*/
type PutPdusPortsOK struct {
	Payload *PutPdusPortsOKBody
}

func (o *PutPdusPortsOK) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsOK  %+v", 200, o.Payload)
}

func (o *PutPdusPortsOK) GetPayload() *PutPdusPortsOKBody {
	return o.Payload
}

func (o *PutPdusPortsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutPdusPortsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPdusPortsBadRequest creates a PutPdusPortsBadRequest with default headers values
func NewPutPdusPortsBadRequest() *PutPdusPortsBadRequest {
	return &PutPdusPortsBadRequest{}
}

/*PutPdusPortsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PutPdusPortsBadRequest struct {
}

func (o *PutPdusPortsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsBadRequest ", 400)
}

func (o *PutPdusPortsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusPortsUnauthorized creates a PutPdusPortsUnauthorized with default headers values
func NewPutPdusPortsUnauthorized() *PutPdusPortsUnauthorized {
	return &PutPdusPortsUnauthorized{}
}

/*PutPdusPortsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PutPdusPortsUnauthorized struct {
}

func (o *PutPdusPortsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsUnauthorized ", 401)
}

func (o *PutPdusPortsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusPortsForbidden creates a PutPdusPortsForbidden with default headers values
func NewPutPdusPortsForbidden() *PutPdusPortsForbidden {
	return &PutPdusPortsForbidden{}
}

/*PutPdusPortsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PutPdusPortsForbidden struct {
}

func (o *PutPdusPortsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsForbidden ", 403)
}

func (o *PutPdusPortsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusPortsNotFound creates a PutPdusPortsNotFound with default headers values
func NewPutPdusPortsNotFound() *PutPdusPortsNotFound {
	return &PutPdusPortsNotFound{}
}

/*PutPdusPortsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PutPdusPortsNotFound struct {
}

func (o *PutPdusPortsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsNotFound ", 404)
}

func (o *PutPdusPortsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusPortsMethodNotAllowed creates a PutPdusPortsMethodNotAllowed with default headers values
func NewPutPdusPortsMethodNotAllowed() *PutPdusPortsMethodNotAllowed {
	return &PutPdusPortsMethodNotAllowed{}
}

/*PutPdusPortsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PutPdusPortsMethodNotAllowed struct {
}

func (o *PutPdusPortsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsMethodNotAllowed ", 405)
}

func (o *PutPdusPortsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusPortsGone creates a PutPdusPortsGone with default headers values
func NewPutPdusPortsGone() *PutPdusPortsGone {
	return &PutPdusPortsGone{}
}

/*PutPdusPortsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PutPdusPortsGone struct {
}

func (o *PutPdusPortsGone) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsGone ", 410)
}

func (o *PutPdusPortsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusPortsInternalServerError creates a PutPdusPortsInternalServerError with default headers values
func NewPutPdusPortsInternalServerError() *PutPdusPortsInternalServerError {
	return &PutPdusPortsInternalServerError{}
}

/*PutPdusPortsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PutPdusPortsInternalServerError struct {
}

func (o *PutPdusPortsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsInternalServerError ", 500)
}

func (o *PutPdusPortsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusPortsServiceUnavailable creates a PutPdusPortsServiceUnavailable with default headers values
func NewPutPdusPortsServiceUnavailable() *PutPdusPortsServiceUnavailable {
	return &PutPdusPortsServiceUnavailable{}
}

/*PutPdusPortsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PutPdusPortsServiceUnavailable struct {
}

func (o *PutPdusPortsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/ports/][%d] putPdusPortsServiceUnavailable ", 503)
}

func (o *PutPdusPortsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutPdusPortsOKBody put pdus ports o k body
swagger:model PutPdusPortsOKBody
*/
type PutPdusPortsOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this put pdus ports o k body
func (o *PutPdusPortsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutPdusPortsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutPdusPortsOKBody) UnmarshalBinary(b []byte) error {
	var res PutPdusPortsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
