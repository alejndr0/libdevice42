// Code generated by go-swagger; DO NOT EDIT.

package p_d_u

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutPdusReader is a Reader for the PutPdus structure.
type PutPdusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutPdusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutPdusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutPdusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutPdusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutPdusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutPdusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutPdusMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPutPdusGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutPdusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutPdusServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutPdusOK creates a PutPdusOK with default headers values
func NewPutPdusOK() *PutPdusOK {
	return &PutPdusOK{}
}

/*PutPdusOK handles this case with default header values.

The above command returns results like this:
*/
type PutPdusOK struct {
	Payload *PutPdusOKBody
}

func (o *PutPdusOK) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusOK  %+v", 200, o.Payload)
}

func (o *PutPdusOK) GetPayload() *PutPdusOKBody {
	return o.Payload
}

func (o *PutPdusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutPdusOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPdusBadRequest creates a PutPdusBadRequest with default headers values
func NewPutPdusBadRequest() *PutPdusBadRequest {
	return &PutPdusBadRequest{}
}

/*PutPdusBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PutPdusBadRequest struct {
}

func (o *PutPdusBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusBadRequest ", 400)
}

func (o *PutPdusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusUnauthorized creates a PutPdusUnauthorized with default headers values
func NewPutPdusUnauthorized() *PutPdusUnauthorized {
	return &PutPdusUnauthorized{}
}

/*PutPdusUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PutPdusUnauthorized struct {
}

func (o *PutPdusUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusUnauthorized ", 401)
}

func (o *PutPdusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusForbidden creates a PutPdusForbidden with default headers values
func NewPutPdusForbidden() *PutPdusForbidden {
	return &PutPdusForbidden{}
}

/*PutPdusForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PutPdusForbidden struct {
}

func (o *PutPdusForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusForbidden ", 403)
}

func (o *PutPdusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusNotFound creates a PutPdusNotFound with default headers values
func NewPutPdusNotFound() *PutPdusNotFound {
	return &PutPdusNotFound{}
}

/*PutPdusNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PutPdusNotFound struct {
}

func (o *PutPdusNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusNotFound ", 404)
}

func (o *PutPdusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusMethodNotAllowed creates a PutPdusMethodNotAllowed with default headers values
func NewPutPdusMethodNotAllowed() *PutPdusMethodNotAllowed {
	return &PutPdusMethodNotAllowed{}
}

/*PutPdusMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PutPdusMethodNotAllowed struct {
}

func (o *PutPdusMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusMethodNotAllowed ", 405)
}

func (o *PutPdusMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusGone creates a PutPdusGone with default headers values
func NewPutPdusGone() *PutPdusGone {
	return &PutPdusGone{}
}

/*PutPdusGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PutPdusGone struct {
}

func (o *PutPdusGone) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusGone ", 410)
}

func (o *PutPdusGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusInternalServerError creates a PutPdusInternalServerError with default headers values
func NewPutPdusInternalServerError() *PutPdusInternalServerError {
	return &PutPdusInternalServerError{}
}

/*PutPdusInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PutPdusInternalServerError struct {
}

func (o *PutPdusInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusInternalServerError ", 500)
}

func (o *PutPdusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPdusServiceUnavailable creates a PutPdusServiceUnavailable with default headers values
func NewPutPdusServiceUnavailable() *PutPdusServiceUnavailable {
	return &PutPdusServiceUnavailable{}
}

/*PutPdusServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PutPdusServiceUnavailable struct {
}

func (o *PutPdusServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/1.0/pdus/][%d] putPdusServiceUnavailable ", 503)
}

func (o *PutPdusServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutPdusOKBody put pdus o k body
swagger:model PutPdusOKBody
*/
type PutPdusOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this put pdus o k body
func (o *PutPdusOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutPdusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutPdusOKBody) UnmarshalBinary(b []byte) error {
	var res PutPdusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
