// Code generated by go-swagger; DO NOT EDIT.

package p_d_u

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostPdusRackReader is a Reader for the PostPdusRack structure.
type PostPdusRackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPdusRackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPdusRackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPdusRackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostPdusRackUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostPdusRackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostPdusRackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostPdusRackMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostPdusRackGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPdusRackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostPdusRackServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPdusRackOK creates a PostPdusRackOK with default headers values
func NewPostPdusRackOK() *PostPdusRackOK {
	return &PostPdusRackOK{}
}

/*PostPdusRackOK handles this case with default header values.

The above command returns results like this:
*/
type PostPdusRackOK struct {
	Payload *PostPdusRackOKBody
}

func (o *PostPdusRackOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackOK  %+v", 200, o.Payload)
}

func (o *PostPdusRackOK) GetPayload() *PostPdusRackOKBody {
	return o.Payload
}

func (o *PostPdusRackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostPdusRackOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPdusRackBadRequest creates a PostPdusRackBadRequest with default headers values
func NewPostPdusRackBadRequest() *PostPdusRackBadRequest {
	return &PostPdusRackBadRequest{}
}

/*PostPdusRackBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostPdusRackBadRequest struct {
}

func (o *PostPdusRackBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackBadRequest ", 400)
}

func (o *PostPdusRackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPdusRackUnauthorized creates a PostPdusRackUnauthorized with default headers values
func NewPostPdusRackUnauthorized() *PostPdusRackUnauthorized {
	return &PostPdusRackUnauthorized{}
}

/*PostPdusRackUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostPdusRackUnauthorized struct {
}

func (o *PostPdusRackUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackUnauthorized ", 401)
}

func (o *PostPdusRackUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPdusRackForbidden creates a PostPdusRackForbidden with default headers values
func NewPostPdusRackForbidden() *PostPdusRackForbidden {
	return &PostPdusRackForbidden{}
}

/*PostPdusRackForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostPdusRackForbidden struct {
}

func (o *PostPdusRackForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackForbidden ", 403)
}

func (o *PostPdusRackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPdusRackNotFound creates a PostPdusRackNotFound with default headers values
func NewPostPdusRackNotFound() *PostPdusRackNotFound {
	return &PostPdusRackNotFound{}
}

/*PostPdusRackNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostPdusRackNotFound struct {
}

func (o *PostPdusRackNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackNotFound ", 404)
}

func (o *PostPdusRackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPdusRackMethodNotAllowed creates a PostPdusRackMethodNotAllowed with default headers values
func NewPostPdusRackMethodNotAllowed() *PostPdusRackMethodNotAllowed {
	return &PostPdusRackMethodNotAllowed{}
}

/*PostPdusRackMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostPdusRackMethodNotAllowed struct {
}

func (o *PostPdusRackMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackMethodNotAllowed ", 405)
}

func (o *PostPdusRackMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPdusRackGone creates a PostPdusRackGone with default headers values
func NewPostPdusRackGone() *PostPdusRackGone {
	return &PostPdusRackGone{}
}

/*PostPdusRackGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostPdusRackGone struct {
}

func (o *PostPdusRackGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackGone ", 410)
}

func (o *PostPdusRackGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPdusRackInternalServerError creates a PostPdusRackInternalServerError with default headers values
func NewPostPdusRackInternalServerError() *PostPdusRackInternalServerError {
	return &PostPdusRackInternalServerError{}
}

/*PostPdusRackInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostPdusRackInternalServerError struct {
}

func (o *PostPdusRackInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackInternalServerError ", 500)
}

func (o *PostPdusRackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPdusRackServiceUnavailable creates a PostPdusRackServiceUnavailable with default headers values
func NewPostPdusRackServiceUnavailable() *PostPdusRackServiceUnavailable {
	return &PostPdusRackServiceUnavailable{}
}

/*PostPdusRackServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostPdusRackServiceUnavailable struct {
}

func (o *PostPdusRackServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/pdus/rack/][%d] postPdusRackServiceUnavailable ", 503)
}

func (o *PostPdusRackServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostPdusRackOKBody post pdus rack o k body
swagger:model PostPdusRackOKBody
*/
type PostPdusRackOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post pdus rack o k body
func (o *PostPdusRackOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostPdusRackOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostPdusRackOKBody) UnmarshalBinary(b []byte) error {
	var res PostPdusRackOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
