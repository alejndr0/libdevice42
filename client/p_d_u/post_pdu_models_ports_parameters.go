// Code generated by go-swagger; DO NOT EDIT.

package p_d_u

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostPduModelsPortsParams creates a new PostPduModelsPortsParams object
// with the default values initialized.
func NewPostPduModelsPortsParams() *PostPduModelsPortsParams {
	var ()
	return &PostPduModelsPortsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostPduModelsPortsParamsWithTimeout creates a new PostPduModelsPortsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostPduModelsPortsParamsWithTimeout(timeout time.Duration) *PostPduModelsPortsParams {
	var ()
	return &PostPduModelsPortsParams{

		timeout: timeout,
	}
}

// NewPostPduModelsPortsParamsWithContext creates a new PostPduModelsPortsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostPduModelsPortsParamsWithContext(ctx context.Context) *PostPduModelsPortsParams {
	var ()
	return &PostPduModelsPortsParams{

		Context: ctx,
	}
}

// NewPostPduModelsPortsParamsWithHTTPClient creates a new PostPduModelsPortsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostPduModelsPortsParamsWithHTTPClient(client *http.Client) *PostPduModelsPortsParams {
	var ()
	return &PostPduModelsPortsParams{
		HTTPClient: client,
	}
}

/*PostPduModelsPortsParams contains all the parameters to send to the API endpoint
for the post pdu models ports operation typically these are written to a http.Request
*/
type PostPduModelsPortsParams struct {

	/*Count
	  number of ports

	*/
	Count int64
	/*PduModelID
	  ID of the PDU model you want to update

	*/
	PduModelID *string
	/*PduModelName
	  Name of the PDU model you want to add ports to.

	*/
	PduModelName *string
	/*Type
	  Type of the port. If not already existing, a new port type is created.

	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post pdu models ports params
func (o *PostPduModelsPortsParams) WithTimeout(timeout time.Duration) *PostPduModelsPortsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post pdu models ports params
func (o *PostPduModelsPortsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post pdu models ports params
func (o *PostPduModelsPortsParams) WithContext(ctx context.Context) *PostPduModelsPortsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post pdu models ports params
func (o *PostPduModelsPortsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post pdu models ports params
func (o *PostPduModelsPortsParams) WithHTTPClient(client *http.Client) *PostPduModelsPortsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post pdu models ports params
func (o *PostPduModelsPortsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCount adds the count to the post pdu models ports params
func (o *PostPduModelsPortsParams) WithCount(count int64) *PostPduModelsPortsParams {
	o.SetCount(count)
	return o
}

// SetCount adds the count to the post pdu models ports params
func (o *PostPduModelsPortsParams) SetCount(count int64) {
	o.Count = count
}

// WithPduModelID adds the pduModelID to the post pdu models ports params
func (o *PostPduModelsPortsParams) WithPduModelID(pduModelID *string) *PostPduModelsPortsParams {
	o.SetPduModelID(pduModelID)
	return o
}

// SetPduModelID adds the pduModelId to the post pdu models ports params
func (o *PostPduModelsPortsParams) SetPduModelID(pduModelID *string) {
	o.PduModelID = pduModelID
}

// WithPduModelName adds the pduModelName to the post pdu models ports params
func (o *PostPduModelsPortsParams) WithPduModelName(pduModelName *string) *PostPduModelsPortsParams {
	o.SetPduModelName(pduModelName)
	return o
}

// SetPduModelName adds the pduModelName to the post pdu models ports params
func (o *PostPduModelsPortsParams) SetPduModelName(pduModelName *string) {
	o.PduModelName = pduModelName
}

// WithType adds the typeVar to the post pdu models ports params
func (o *PostPduModelsPortsParams) WithType(typeVar string) *PostPduModelsPortsParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the post pdu models ports params
func (o *PostPduModelsPortsParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *PostPduModelsPortsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param count
	frCount := o.Count
	fCount := swag.FormatInt64(frCount)
	if fCount != "" {
		if err := r.SetFormParam("count", fCount); err != nil {
			return err
		}
	}

	if o.PduModelID != nil {

		// form param pdu_model_id
		var frPduModelID string
		if o.PduModelID != nil {
			frPduModelID = *o.PduModelID
		}
		fPduModelID := frPduModelID
		if fPduModelID != "" {
			if err := r.SetFormParam("pdu_model_id", fPduModelID); err != nil {
				return err
			}
		}

	}

	if o.PduModelName != nil {

		// form param pdu_model_name
		var frPduModelName string
		if o.PduModelName != nil {
			frPduModelName = *o.PduModelName
		}
		fPduModelName := frPduModelName
		if fPduModelName != "" {
			if err := r.SetFormParam("pdu_model_name", fPduModelName); err != nil {
				return err
			}
		}

	}

	// form param type
	frType := o.Type
	fType := frType
	if fType != "" {
		if err := r.SetFormParam("type", fType); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
