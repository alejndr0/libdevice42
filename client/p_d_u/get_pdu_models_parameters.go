// Code generated by go-swagger; DO NOT EDIT.

package p_d_u

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPduModelsParams creates a new GetPduModelsParams object
// with the default values initialized.
func NewGetPduModelsParams() *GetPduModelsParams {
	var ()
	return &GetPduModelsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPduModelsParamsWithTimeout creates a new GetPduModelsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPduModelsParamsWithTimeout(timeout time.Duration) *GetPduModelsParams {
	var ()
	return &GetPduModelsParams{

		timeout: timeout,
	}
}

// NewGetPduModelsParamsWithContext creates a new GetPduModelsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPduModelsParamsWithContext(ctx context.Context) *GetPduModelsParams {
	var ()
	return &GetPduModelsParams{

		Context: ctx,
	}
}

// NewGetPduModelsParamsWithHTTPClient creates a new GetPduModelsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPduModelsParamsWithHTTPClient(client *http.Client) *GetPduModelsParams {
	var ()
	return &GetPduModelsParams{
		HTTPClient: client,
	}
}

/*GetPduModelsParams contains all the parameters to send to the API endpoint
for the get pdu models operation typically these are written to a http.Request
*/
type GetPduModelsParams struct {

	/*Name
	  filter by model name

	*/
	Name *string
	/*PduModelID
	  filter by pdu model id

	*/
	PduModelID *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get pdu models params
func (o *GetPduModelsParams) WithTimeout(timeout time.Duration) *GetPduModelsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get pdu models params
func (o *GetPduModelsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get pdu models params
func (o *GetPduModelsParams) WithContext(ctx context.Context) *GetPduModelsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get pdu models params
func (o *GetPduModelsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get pdu models params
func (o *GetPduModelsParams) WithHTTPClient(client *http.Client) *GetPduModelsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get pdu models params
func (o *GetPduModelsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get pdu models params
func (o *GetPduModelsParams) WithName(name *string) *GetPduModelsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get pdu models params
func (o *GetPduModelsParams) SetName(name *string) {
	o.Name = name
}

// WithPduModelID adds the pduModelID to the get pdu models params
func (o *GetPduModelsParams) WithPduModelID(pduModelID *int64) *GetPduModelsParams {
	o.SetPduModelID(pduModelID)
	return o
}

// SetPduModelID adds the pduModelId to the get pdu models params
func (o *GetPduModelsParams) SetPduModelID(pduModelID *int64) {
	o.PduModelID = pduModelID
}

// WriteToRequest writes these params to a swagger request
func (o *GetPduModelsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.PduModelID != nil {

		// query param pdu_model_id
		var qrPduModelID int64
		if o.PduModelID != nil {
			qrPduModelID = *o.PduModelID
		}
		qPduModelID := swag.FormatInt64(qrPduModelID)
		if qPduModelID != "" {
			if err := r.SetQueryParam("pdu_model_id", qPduModelID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
