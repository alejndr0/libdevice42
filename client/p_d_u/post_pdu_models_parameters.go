// Code generated by go-swagger; DO NOT EDIT.

package p_d_u

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostPduModelsParams creates a new PostPduModelsParams object
// with the default values initialized.
func NewPostPduModelsParams() *PostPduModelsParams {
	var ()
	return &PostPduModelsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostPduModelsParamsWithTimeout creates a new PostPduModelsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostPduModelsParamsWithTimeout(timeout time.Duration) *PostPduModelsParams {
	var ()
	return &PostPduModelsParams{

		timeout: timeout,
	}
}

// NewPostPduModelsParamsWithContext creates a new PostPduModelsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostPduModelsParamsWithContext(ctx context.Context) *PostPduModelsParams {
	var ()
	return &PostPduModelsParams{

		Context: ctx,
	}
}

// NewPostPduModelsParamsWithHTTPClient creates a new PostPduModelsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostPduModelsParamsWithHTTPClient(client *http.Client) *PostPduModelsParams {
	var ()
	return &PostPduModelsParams{
		HTTPClient: client,
	}
}

/*PostPduModelsParams contains all the parameters to send to the API endpoint
for the post pdu models operation typically these are written to a http.Request
*/
type PostPduModelsParams struct {

	/*BackImage
	  name of the back image file. Use instead of back_image_id.

	*/
	BackImage *string
	/*BackImageID
	  back image file id. You can see these from Tools > Import > Hardware Import for now.

	*/
	BackImageID *string
	/*Depth
	  Half depth by default. full to override. Optional.

	*/
	Depth *string
	/*Imgfile
	  name of the image file (Added in v5.8.2). Use instead of imgfile_id

	*/
	Imgfile *string
	/*ImgfileID
	  image file id. You can see these from Tools > Import > Hardware Import for now.

	*/
	ImgfileID *string
	/*Manufacturer
	  name of the hardware/software manufacturer.

	*/
	Manufacturer *string
	/*Name
	  Name of the PDU model you want to create or update

	*/
	Name *string
	/*PduModelID
	  ID of the PDU model you want to update

	*/
	PduModelID *string
	/*SequentialNumberingForPorts
	  Could be “yes” or “no”. Yes if ports are numbered starting from 1.

	*/
	SequentialNumberingForPorts *string
	/*Size
	  Size of the PDU in U

	*/
	Size *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post pdu models params
func (o *PostPduModelsParams) WithTimeout(timeout time.Duration) *PostPduModelsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post pdu models params
func (o *PostPduModelsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post pdu models params
func (o *PostPduModelsParams) WithContext(ctx context.Context) *PostPduModelsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post pdu models params
func (o *PostPduModelsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post pdu models params
func (o *PostPduModelsParams) WithHTTPClient(client *http.Client) *PostPduModelsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post pdu models params
func (o *PostPduModelsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBackImage adds the backImage to the post pdu models params
func (o *PostPduModelsParams) WithBackImage(backImage *string) *PostPduModelsParams {
	o.SetBackImage(backImage)
	return o
}

// SetBackImage adds the backImage to the post pdu models params
func (o *PostPduModelsParams) SetBackImage(backImage *string) {
	o.BackImage = backImage
}

// WithBackImageID adds the backImageID to the post pdu models params
func (o *PostPduModelsParams) WithBackImageID(backImageID *string) *PostPduModelsParams {
	o.SetBackImageID(backImageID)
	return o
}

// SetBackImageID adds the backImageId to the post pdu models params
func (o *PostPduModelsParams) SetBackImageID(backImageID *string) {
	o.BackImageID = backImageID
}

// WithDepth adds the depth to the post pdu models params
func (o *PostPduModelsParams) WithDepth(depth *string) *PostPduModelsParams {
	o.SetDepth(depth)
	return o
}

// SetDepth adds the depth to the post pdu models params
func (o *PostPduModelsParams) SetDepth(depth *string) {
	o.Depth = depth
}

// WithImgfile adds the imgfile to the post pdu models params
func (o *PostPduModelsParams) WithImgfile(imgfile *string) *PostPduModelsParams {
	o.SetImgfile(imgfile)
	return o
}

// SetImgfile adds the imgfile to the post pdu models params
func (o *PostPduModelsParams) SetImgfile(imgfile *string) {
	o.Imgfile = imgfile
}

// WithImgfileID adds the imgfileID to the post pdu models params
func (o *PostPduModelsParams) WithImgfileID(imgfileID *string) *PostPduModelsParams {
	o.SetImgfileID(imgfileID)
	return o
}

// SetImgfileID adds the imgfileId to the post pdu models params
func (o *PostPduModelsParams) SetImgfileID(imgfileID *string) {
	o.ImgfileID = imgfileID
}

// WithManufacturer adds the manufacturer to the post pdu models params
func (o *PostPduModelsParams) WithManufacturer(manufacturer *string) *PostPduModelsParams {
	o.SetManufacturer(manufacturer)
	return o
}

// SetManufacturer adds the manufacturer to the post pdu models params
func (o *PostPduModelsParams) SetManufacturer(manufacturer *string) {
	o.Manufacturer = manufacturer
}

// WithName adds the name to the post pdu models params
func (o *PostPduModelsParams) WithName(name *string) *PostPduModelsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post pdu models params
func (o *PostPduModelsParams) SetName(name *string) {
	o.Name = name
}

// WithPduModelID adds the pduModelID to the post pdu models params
func (o *PostPduModelsParams) WithPduModelID(pduModelID *string) *PostPduModelsParams {
	o.SetPduModelID(pduModelID)
	return o
}

// SetPduModelID adds the pduModelId to the post pdu models params
func (o *PostPduModelsParams) SetPduModelID(pduModelID *string) {
	o.PduModelID = pduModelID
}

// WithSequentialNumberingForPorts adds the sequentialNumberingForPorts to the post pdu models params
func (o *PostPduModelsParams) WithSequentialNumberingForPorts(sequentialNumberingForPorts *string) *PostPduModelsParams {
	o.SetSequentialNumberingForPorts(sequentialNumberingForPorts)
	return o
}

// SetSequentialNumberingForPorts adds the sequentialNumberingForPorts to the post pdu models params
func (o *PostPduModelsParams) SetSequentialNumberingForPorts(sequentialNumberingForPorts *string) {
	o.SequentialNumberingForPorts = sequentialNumberingForPorts
}

// WithSize adds the size to the post pdu models params
func (o *PostPduModelsParams) WithSize(size *string) *PostPduModelsParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the post pdu models params
func (o *PostPduModelsParams) SetSize(size *string) {
	o.Size = size
}

// WriteToRequest writes these params to a swagger request
func (o *PostPduModelsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BackImage != nil {

		// form param back_image
		var frBackImage string
		if o.BackImage != nil {
			frBackImage = *o.BackImage
		}
		fBackImage := frBackImage
		if fBackImage != "" {
			if err := r.SetFormParam("back_image", fBackImage); err != nil {
				return err
			}
		}

	}

	if o.BackImageID != nil {

		// form param back_image_id
		var frBackImageID string
		if o.BackImageID != nil {
			frBackImageID = *o.BackImageID
		}
		fBackImageID := frBackImageID
		if fBackImageID != "" {
			if err := r.SetFormParam("back_image_id", fBackImageID); err != nil {
				return err
			}
		}

	}

	if o.Depth != nil {

		// form param depth
		var frDepth string
		if o.Depth != nil {
			frDepth = *o.Depth
		}
		fDepth := frDepth
		if fDepth != "" {
			if err := r.SetFormParam("depth", fDepth); err != nil {
				return err
			}
		}

	}

	if o.Imgfile != nil {

		// form param imgfile
		var frImgfile string
		if o.Imgfile != nil {
			frImgfile = *o.Imgfile
		}
		fImgfile := frImgfile
		if fImgfile != "" {
			if err := r.SetFormParam("imgfile", fImgfile); err != nil {
				return err
			}
		}

	}

	if o.ImgfileID != nil {

		// form param imgfile_id
		var frImgfileID string
		if o.ImgfileID != nil {
			frImgfileID = *o.ImgfileID
		}
		fImgfileID := frImgfileID
		if fImgfileID != "" {
			if err := r.SetFormParam("imgfile_id", fImgfileID); err != nil {
				return err
			}
		}

	}

	if o.Manufacturer != nil {

		// form param manufacturer
		var frManufacturer string
		if o.Manufacturer != nil {
			frManufacturer = *o.Manufacturer
		}
		fManufacturer := frManufacturer
		if fManufacturer != "" {
			if err := r.SetFormParam("manufacturer", fManufacturer); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// form param name
		var frName string
		if o.Name != nil {
			frName = *o.Name
		}
		fName := frName
		if fName != "" {
			if err := r.SetFormParam("name", fName); err != nil {
				return err
			}
		}

	}

	if o.PduModelID != nil {

		// form param pdu_model_id
		var frPduModelID string
		if o.PduModelID != nil {
			frPduModelID = *o.PduModelID
		}
		fPduModelID := frPduModelID
		if fPduModelID != "" {
			if err := r.SetFormParam("pdu_model_id", fPduModelID); err != nil {
				return err
			}
		}

	}

	if o.SequentialNumberingForPorts != nil {

		// form param sequential_numbering_for_ports
		var frSequentialNumberingForPorts string
		if o.SequentialNumberingForPorts != nil {
			frSequentialNumberingForPorts = *o.SequentialNumberingForPorts
		}
		fSequentialNumberingForPorts := frSequentialNumberingForPorts
		if fSequentialNumberingForPorts != "" {
			if err := r.SetFormParam("sequential_numbering_for_ports", fSequentialNumberingForPorts); err != nil {
				return err
			}
		}

	}

	if o.Size != nil {

		// form param size
		var frSize string
		if o.Size != nil {
			frSize = *o.Size
		}
		fSize := frSize
		if fSize != "" {
			if err := r.SetFormParam("size", fSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
