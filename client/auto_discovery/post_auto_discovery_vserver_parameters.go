// Code generated by go-swagger; DO NOT EDIT.

package auto_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostAutoDiscoveryVserverParams creates a new PostAutoDiscoveryVserverParams object
// with the default values initialized.
func NewPostAutoDiscoveryVserverParams() *PostAutoDiscoveryVserverParams {
	var ()
	return &PostAutoDiscoveryVserverParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAutoDiscoveryVserverParamsWithTimeout creates a new PostAutoDiscoveryVserverParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAutoDiscoveryVserverParamsWithTimeout(timeout time.Duration) *PostAutoDiscoveryVserverParams {
	var ()
	return &PostAutoDiscoveryVserverParams{

		timeout: timeout,
	}
}

// NewPostAutoDiscoveryVserverParamsWithContext creates a new PostAutoDiscoveryVserverParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAutoDiscoveryVserverParamsWithContext(ctx context.Context) *PostAutoDiscoveryVserverParams {
	var ()
	return &PostAutoDiscoveryVserverParams{

		Context: ctx,
	}
}

// NewPostAutoDiscoveryVserverParamsWithHTTPClient creates a new PostAutoDiscoveryVserverParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAutoDiscoveryVserverParamsWithHTTPClient(client *http.Client) *PostAutoDiscoveryVserverParams {
	var ()
	return &PostAutoDiscoveryVserverParams{
		HTTPClient: client,
	}
}

/*PostAutoDiscoveryVserverParams contains all the parameters to send to the API endpoint
for the post auto discovery vserver operation typically these are written to a http.Request
*/
type PostAutoDiscoveryVserverParams struct {

	/*AddMultipleVMNamesAsAlias
	  add any additional names found as device alias

	*/
	AddMultipleVMNamesAsAlias *string
	/*AlternateSudo*/
	AlternateSudo *string
	/*AlternateSudoPasswordID*/
	AlternateSudoPasswordID *string
	/*CaptureHostsFile*/
	CaptureHostsFile *string
	/*ClearExistingSchedule*/
	ClearExistingSchedule *string
	/*CustomerID*/
	CustomerID *string
	/*DebugLevel*/
	DebugLevel *string
	/*DeviceNameFormat*/
	DeviceNameFormat *string
	/*DiscoverApplications*/
	DiscoverApplications *string
	/*DiscoverCloudid*/
	DiscoverCloudid *string
	/*DiscoverParts*/
	DiscoverParts *string
	/*DiscoverServices*/
	DiscoverServices *string
	/*DiscoverSoftware*/
	DiscoverSoftware *string
	/*DiscoverVms
	  discover VMs or strictly hypervisors

	*/
	DiscoverVms *string
	/*EnableResourcesMonitoring*/
	EnableResourcesMonitoring *string
	/*EndIPAddress
	  End IP address

	*/
	EndIPAddress *string
	/*GetGuestOsInfo*/
	GetGuestOsInfo *string
	/*Groups
	  name of one or more groups separated by commas

	*/
	Groups *string
	/*HostAllowDuplicateSerials*/
	HostAllowDuplicateSerials *string
	/*Hostidlist*/
	Hostidlist *string
	/*HostnamePrecedence*/
	HostnamePrecedence *string
	/*IgnoreGuestUUID*/
	IgnoreGuestUUID *string
	/*IgnoreHostSerial*/
	IgnoreHostSerial *string
	/*IgnoreHostUUID*/
	IgnoreHostUUID *string
	/*IgnoreIPV6*/
	IgnoreIPV6 *string
	/*IgnorePoweredOff
	  Ignore powered off vms

	*/
	IgnorePoweredOff *string
	/*IgnoreVirtSubtype*/
	IgnoreVirtSubtype *string
	/*InitialSoftwareType*/
	InitialSoftwareType *string
	/*LdapFilterType*/
	LdapFilterType *string
	/*LdapServer*/
	LdapServer *string
	/*LdapUnpwdID*/
	LdapUnpwdID *string
	/*Name
	  name of the job

	*/
	Name string
	/*ObjectCategory
	  category of discovered vservers and vms

	*/
	ObjectCategory *string
	/*OverwriteObjectCategories*/
	OverwriteObjectCategories *string
	/*Password
	  password to use in discovery

	*/
	Password *string
	/*Platform*/
	Platform *string
	/*PollingInterval
	  polling interval in minutes (integer)

	*/
	PollingInterval *string
	/*Port
	  specify port

	*/
	Port *string
	/*PrependVmhostname*/
	PrependVmhostname *string
	/*RemoteCollectorID*/
	RemoteCollectorID *string
	/*ScheduleDays
	  Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil set the job for Mon, Tue and Wed. For multiple schedules, separate with a slash (/).

	*/
	ScheduleDays *string
	/*ScheduleTime
	  Time in HH:MM format if you want to schedule the job. Note: Must be formatted as text NOT date. For multiple schedules, separate with a slash (/).

	*/
	ScheduleTime *string
	/*Server
	  IP or FQDN of target server

	*/
	Server *string
	/*ServiceLevel
	  Must already exist

	*/
	ServiceLevel *string
	/*ServiceLevelDeviceID*/
	ServiceLevelDeviceID *string
	/*StoreConfigFiles*/
	StoreConfigFiles *string
	/*StripDomainSuffix
	  Strip domain suffix if discovered on VMs or hypervisor

	*/
	StripDomainSuffix *string
	/*SudoRetry*/
	SudoRetry *string
	/*ToggleServiceLevelOnVMPowerState*/
	ToggleServiceLevelOnVMPowerState *string
	/*TrackVMNameChange*/
	TrackVMNameChange *string
	/*URLPrefix
	  http or https

	*/
	URLPrefix *string
	/*URLSuffix
	  append suffix to discovery url

	*/
	URLSuffix *string
	/*UseDomainServer*/
	UseDomainServer *string
	/*UseFqdn*/
	UseFqdn *string
	/*UseServiceAccount*/
	UseServiceAccount *string
	/*Username
	  username to use in discovery

	*/
	Username *string
	/*VMAddDisk*/
	VMAddDisk *string
	/*VMNameToUse
	  “found from vm tools” or “as named on vserver”

	*/
	VMNameToUse *string
	/*VMNotFound
	  Choose how to handle VM not found in discovery

	*/
	VMNotFound *string
	/*VrfGroupID
	  ID of the VRF group

	*/
	VrfGroupID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithTimeout(timeout time.Duration) *PostAutoDiscoveryVserverParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithContext(ctx context.Context) *PostAutoDiscoveryVserverParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithHTTPClient(client *http.Client) *PostAutoDiscoveryVserverParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddMultipleVMNamesAsAlias adds the addMultipleVMNamesAsAlias to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithAddMultipleVMNamesAsAlias(addMultipleVMNamesAsAlias *string) *PostAutoDiscoveryVserverParams {
	o.SetAddMultipleVMNamesAsAlias(addMultipleVMNamesAsAlias)
	return o
}

// SetAddMultipleVMNamesAsAlias adds the addMultipleVmNamesAsAlias to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetAddMultipleVMNamesAsAlias(addMultipleVMNamesAsAlias *string) {
	o.AddMultipleVMNamesAsAlias = addMultipleVMNamesAsAlias
}

// WithAlternateSudo adds the alternateSudo to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithAlternateSudo(alternateSudo *string) *PostAutoDiscoveryVserverParams {
	o.SetAlternateSudo(alternateSudo)
	return o
}

// SetAlternateSudo adds the alternateSudo to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetAlternateSudo(alternateSudo *string) {
	o.AlternateSudo = alternateSudo
}

// WithAlternateSudoPasswordID adds the alternateSudoPasswordID to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithAlternateSudoPasswordID(alternateSudoPasswordID *string) *PostAutoDiscoveryVserverParams {
	o.SetAlternateSudoPasswordID(alternateSudoPasswordID)
	return o
}

// SetAlternateSudoPasswordID adds the alternateSudoPasswordId to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetAlternateSudoPasswordID(alternateSudoPasswordID *string) {
	o.AlternateSudoPasswordID = alternateSudoPasswordID
}

// WithCaptureHostsFile adds the captureHostsFile to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithCaptureHostsFile(captureHostsFile *string) *PostAutoDiscoveryVserverParams {
	o.SetCaptureHostsFile(captureHostsFile)
	return o
}

// SetCaptureHostsFile adds the captureHostsFile to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetCaptureHostsFile(captureHostsFile *string) {
	o.CaptureHostsFile = captureHostsFile
}

// WithClearExistingSchedule adds the clearExistingSchedule to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithClearExistingSchedule(clearExistingSchedule *string) *PostAutoDiscoveryVserverParams {
	o.SetClearExistingSchedule(clearExistingSchedule)
	return o
}

// SetClearExistingSchedule adds the clearExistingSchedule to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetClearExistingSchedule(clearExistingSchedule *string) {
	o.ClearExistingSchedule = clearExistingSchedule
}

// WithCustomerID adds the customerID to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithCustomerID(customerID *string) *PostAutoDiscoveryVserverParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetCustomerID(customerID *string) {
	o.CustomerID = customerID
}

// WithDebugLevel adds the debugLevel to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithDebugLevel(debugLevel *string) *PostAutoDiscoveryVserverParams {
	o.SetDebugLevel(debugLevel)
	return o
}

// SetDebugLevel adds the debugLevel to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetDebugLevel(debugLevel *string) {
	o.DebugLevel = debugLevel
}

// WithDeviceNameFormat adds the deviceNameFormat to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithDeviceNameFormat(deviceNameFormat *string) *PostAutoDiscoveryVserverParams {
	o.SetDeviceNameFormat(deviceNameFormat)
	return o
}

// SetDeviceNameFormat adds the deviceNameFormat to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetDeviceNameFormat(deviceNameFormat *string) {
	o.DeviceNameFormat = deviceNameFormat
}

// WithDiscoverApplications adds the discoverApplications to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithDiscoverApplications(discoverApplications *string) *PostAutoDiscoveryVserverParams {
	o.SetDiscoverApplications(discoverApplications)
	return o
}

// SetDiscoverApplications adds the discoverApplications to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetDiscoverApplications(discoverApplications *string) {
	o.DiscoverApplications = discoverApplications
}

// WithDiscoverCloudid adds the discoverCloudid to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithDiscoverCloudid(discoverCloudid *string) *PostAutoDiscoveryVserverParams {
	o.SetDiscoverCloudid(discoverCloudid)
	return o
}

// SetDiscoverCloudid adds the discoverCloudid to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetDiscoverCloudid(discoverCloudid *string) {
	o.DiscoverCloudid = discoverCloudid
}

// WithDiscoverParts adds the discoverParts to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithDiscoverParts(discoverParts *string) *PostAutoDiscoveryVserverParams {
	o.SetDiscoverParts(discoverParts)
	return o
}

// SetDiscoverParts adds the discoverParts to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetDiscoverParts(discoverParts *string) {
	o.DiscoverParts = discoverParts
}

// WithDiscoverServices adds the discoverServices to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithDiscoverServices(discoverServices *string) *PostAutoDiscoveryVserverParams {
	o.SetDiscoverServices(discoverServices)
	return o
}

// SetDiscoverServices adds the discoverServices to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetDiscoverServices(discoverServices *string) {
	o.DiscoverServices = discoverServices
}

// WithDiscoverSoftware adds the discoverSoftware to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithDiscoverSoftware(discoverSoftware *string) *PostAutoDiscoveryVserverParams {
	o.SetDiscoverSoftware(discoverSoftware)
	return o
}

// SetDiscoverSoftware adds the discoverSoftware to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetDiscoverSoftware(discoverSoftware *string) {
	o.DiscoverSoftware = discoverSoftware
}

// WithDiscoverVms adds the discoverVms to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithDiscoverVms(discoverVms *string) *PostAutoDiscoveryVserverParams {
	o.SetDiscoverVms(discoverVms)
	return o
}

// SetDiscoverVms adds the discoverVms to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetDiscoverVms(discoverVms *string) {
	o.DiscoverVms = discoverVms
}

// WithEnableResourcesMonitoring adds the enableResourcesMonitoring to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithEnableResourcesMonitoring(enableResourcesMonitoring *string) *PostAutoDiscoveryVserverParams {
	o.SetEnableResourcesMonitoring(enableResourcesMonitoring)
	return o
}

// SetEnableResourcesMonitoring adds the enableResourcesMonitoring to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetEnableResourcesMonitoring(enableResourcesMonitoring *string) {
	o.EnableResourcesMonitoring = enableResourcesMonitoring
}

// WithEndIPAddress adds the endIPAddress to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithEndIPAddress(endIPAddress *string) *PostAutoDiscoveryVserverParams {
	o.SetEndIPAddress(endIPAddress)
	return o
}

// SetEndIPAddress adds the endIpAddress to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetEndIPAddress(endIPAddress *string) {
	o.EndIPAddress = endIPAddress
}

// WithGetGuestOsInfo adds the getGuestOsInfo to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithGetGuestOsInfo(getGuestOsInfo *string) *PostAutoDiscoveryVserverParams {
	o.SetGetGuestOsInfo(getGuestOsInfo)
	return o
}

// SetGetGuestOsInfo adds the getGuestOsInfo to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetGetGuestOsInfo(getGuestOsInfo *string) {
	o.GetGuestOsInfo = getGuestOsInfo
}

// WithGroups adds the groups to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithGroups(groups *string) *PostAutoDiscoveryVserverParams {
	o.SetGroups(groups)
	return o
}

// SetGroups adds the groups to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetGroups(groups *string) {
	o.Groups = groups
}

// WithHostAllowDuplicateSerials adds the hostAllowDuplicateSerials to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithHostAllowDuplicateSerials(hostAllowDuplicateSerials *string) *PostAutoDiscoveryVserverParams {
	o.SetHostAllowDuplicateSerials(hostAllowDuplicateSerials)
	return o
}

// SetHostAllowDuplicateSerials adds the hostAllowDuplicateSerials to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetHostAllowDuplicateSerials(hostAllowDuplicateSerials *string) {
	o.HostAllowDuplicateSerials = hostAllowDuplicateSerials
}

// WithHostidlist adds the hostidlist to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithHostidlist(hostidlist *string) *PostAutoDiscoveryVserverParams {
	o.SetHostidlist(hostidlist)
	return o
}

// SetHostidlist adds the hostidlist to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetHostidlist(hostidlist *string) {
	o.Hostidlist = hostidlist
}

// WithHostnamePrecedence adds the hostnamePrecedence to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithHostnamePrecedence(hostnamePrecedence *string) *PostAutoDiscoveryVserverParams {
	o.SetHostnamePrecedence(hostnamePrecedence)
	return o
}

// SetHostnamePrecedence adds the hostnamePrecedence to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetHostnamePrecedence(hostnamePrecedence *string) {
	o.HostnamePrecedence = hostnamePrecedence
}

// WithIgnoreGuestUUID adds the ignoreGuestUUID to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithIgnoreGuestUUID(ignoreGuestUUID *string) *PostAutoDiscoveryVserverParams {
	o.SetIgnoreGuestUUID(ignoreGuestUUID)
	return o
}

// SetIgnoreGuestUUID adds the ignoreGuestUuid to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetIgnoreGuestUUID(ignoreGuestUUID *string) {
	o.IgnoreGuestUUID = ignoreGuestUUID
}

// WithIgnoreHostSerial adds the ignoreHostSerial to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithIgnoreHostSerial(ignoreHostSerial *string) *PostAutoDiscoveryVserverParams {
	o.SetIgnoreHostSerial(ignoreHostSerial)
	return o
}

// SetIgnoreHostSerial adds the ignoreHostSerial to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetIgnoreHostSerial(ignoreHostSerial *string) {
	o.IgnoreHostSerial = ignoreHostSerial
}

// WithIgnoreHostUUID adds the ignoreHostUUID to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithIgnoreHostUUID(ignoreHostUUID *string) *PostAutoDiscoveryVserverParams {
	o.SetIgnoreHostUUID(ignoreHostUUID)
	return o
}

// SetIgnoreHostUUID adds the ignoreHostUuid to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetIgnoreHostUUID(ignoreHostUUID *string) {
	o.IgnoreHostUUID = ignoreHostUUID
}

// WithIgnoreIPV6 adds the ignoreIPV6 to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithIgnoreIPV6(ignoreIPV6 *string) *PostAutoDiscoveryVserverParams {
	o.SetIgnoreIPV6(ignoreIPV6)
	return o
}

// SetIgnoreIPV6 adds the ignoreIpv6 to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetIgnoreIPV6(ignoreIPV6 *string) {
	o.IgnoreIPV6 = ignoreIPV6
}

// WithIgnorePoweredOff adds the ignorePoweredOff to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithIgnorePoweredOff(ignorePoweredOff *string) *PostAutoDiscoveryVserverParams {
	o.SetIgnorePoweredOff(ignorePoweredOff)
	return o
}

// SetIgnorePoweredOff adds the ignorePoweredOff to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetIgnorePoweredOff(ignorePoweredOff *string) {
	o.IgnorePoweredOff = ignorePoweredOff
}

// WithIgnoreVirtSubtype adds the ignoreVirtSubtype to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithIgnoreVirtSubtype(ignoreVirtSubtype *string) *PostAutoDiscoveryVserverParams {
	o.SetIgnoreVirtSubtype(ignoreVirtSubtype)
	return o
}

// SetIgnoreVirtSubtype adds the ignoreVirtSubtype to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetIgnoreVirtSubtype(ignoreVirtSubtype *string) {
	o.IgnoreVirtSubtype = ignoreVirtSubtype
}

// WithInitialSoftwareType adds the initialSoftwareType to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithInitialSoftwareType(initialSoftwareType *string) *PostAutoDiscoveryVserverParams {
	o.SetInitialSoftwareType(initialSoftwareType)
	return o
}

// SetInitialSoftwareType adds the initialSoftwareType to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetInitialSoftwareType(initialSoftwareType *string) {
	o.InitialSoftwareType = initialSoftwareType
}

// WithLdapFilterType adds the ldapFilterType to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithLdapFilterType(ldapFilterType *string) *PostAutoDiscoveryVserverParams {
	o.SetLdapFilterType(ldapFilterType)
	return o
}

// SetLdapFilterType adds the ldapFilterType to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetLdapFilterType(ldapFilterType *string) {
	o.LdapFilterType = ldapFilterType
}

// WithLdapServer adds the ldapServer to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithLdapServer(ldapServer *string) *PostAutoDiscoveryVserverParams {
	o.SetLdapServer(ldapServer)
	return o
}

// SetLdapServer adds the ldapServer to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetLdapServer(ldapServer *string) {
	o.LdapServer = ldapServer
}

// WithLdapUnpwdID adds the ldapUnpwdID to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithLdapUnpwdID(ldapUnpwdID *string) *PostAutoDiscoveryVserverParams {
	o.SetLdapUnpwdID(ldapUnpwdID)
	return o
}

// SetLdapUnpwdID adds the ldapUnpwdId to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetLdapUnpwdID(ldapUnpwdID *string) {
	o.LdapUnpwdID = ldapUnpwdID
}

// WithName adds the name to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithName(name string) *PostAutoDiscoveryVserverParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetName(name string) {
	o.Name = name
}

// WithObjectCategory adds the objectCategory to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithObjectCategory(objectCategory *string) *PostAutoDiscoveryVserverParams {
	o.SetObjectCategory(objectCategory)
	return o
}

// SetObjectCategory adds the objectCategory to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetObjectCategory(objectCategory *string) {
	o.ObjectCategory = objectCategory
}

// WithOverwriteObjectCategories adds the overwriteObjectCategories to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithOverwriteObjectCategories(overwriteObjectCategories *string) *PostAutoDiscoveryVserverParams {
	o.SetOverwriteObjectCategories(overwriteObjectCategories)
	return o
}

// SetOverwriteObjectCategories adds the overwriteObjectCategories to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetOverwriteObjectCategories(overwriteObjectCategories *string) {
	o.OverwriteObjectCategories = overwriteObjectCategories
}

// WithPassword adds the password to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithPassword(password *string) *PostAutoDiscoveryVserverParams {
	o.SetPassword(password)
	return o
}

// SetPassword adds the password to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetPassword(password *string) {
	o.Password = password
}

// WithPlatform adds the platform to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithPlatform(platform *string) *PostAutoDiscoveryVserverParams {
	o.SetPlatform(platform)
	return o
}

// SetPlatform adds the platform to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetPlatform(platform *string) {
	o.Platform = platform
}

// WithPollingInterval adds the pollingInterval to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithPollingInterval(pollingInterval *string) *PostAutoDiscoveryVserverParams {
	o.SetPollingInterval(pollingInterval)
	return o
}

// SetPollingInterval adds the pollingInterval to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetPollingInterval(pollingInterval *string) {
	o.PollingInterval = pollingInterval
}

// WithPort adds the port to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithPort(port *string) *PostAutoDiscoveryVserverParams {
	o.SetPort(port)
	return o
}

// SetPort adds the port to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetPort(port *string) {
	o.Port = port
}

// WithPrependVmhostname adds the prependVmhostname to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithPrependVmhostname(prependVmhostname *string) *PostAutoDiscoveryVserverParams {
	o.SetPrependVmhostname(prependVmhostname)
	return o
}

// SetPrependVmhostname adds the prependVmhostname to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetPrependVmhostname(prependVmhostname *string) {
	o.PrependVmhostname = prependVmhostname
}

// WithRemoteCollectorID adds the remoteCollectorID to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithRemoteCollectorID(remoteCollectorID *string) *PostAutoDiscoveryVserverParams {
	o.SetRemoteCollectorID(remoteCollectorID)
	return o
}

// SetRemoteCollectorID adds the remoteCollectorId to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetRemoteCollectorID(remoteCollectorID *string) {
	o.RemoteCollectorID = remoteCollectorID
}

// WithScheduleDays adds the scheduleDays to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithScheduleDays(scheduleDays *string) *PostAutoDiscoveryVserverParams {
	o.SetScheduleDays(scheduleDays)
	return o
}

// SetScheduleDays adds the scheduleDays to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetScheduleDays(scheduleDays *string) {
	o.ScheduleDays = scheduleDays
}

// WithScheduleTime adds the scheduleTime to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithScheduleTime(scheduleTime *string) *PostAutoDiscoveryVserverParams {
	o.SetScheduleTime(scheduleTime)
	return o
}

// SetScheduleTime adds the scheduleTime to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetScheduleTime(scheduleTime *string) {
	o.ScheduleTime = scheduleTime
}

// WithServer adds the server to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithServer(server *string) *PostAutoDiscoveryVserverParams {
	o.SetServer(server)
	return o
}

// SetServer adds the server to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetServer(server *string) {
	o.Server = server
}

// WithServiceLevel adds the serviceLevel to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithServiceLevel(serviceLevel *string) *PostAutoDiscoveryVserverParams {
	o.SetServiceLevel(serviceLevel)
	return o
}

// SetServiceLevel adds the serviceLevel to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetServiceLevel(serviceLevel *string) {
	o.ServiceLevel = serviceLevel
}

// WithServiceLevelDeviceID adds the serviceLevelDeviceID to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithServiceLevelDeviceID(serviceLevelDeviceID *string) *PostAutoDiscoveryVserverParams {
	o.SetServiceLevelDeviceID(serviceLevelDeviceID)
	return o
}

// SetServiceLevelDeviceID adds the serviceLevelDeviceId to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetServiceLevelDeviceID(serviceLevelDeviceID *string) {
	o.ServiceLevelDeviceID = serviceLevelDeviceID
}

// WithStoreConfigFiles adds the storeConfigFiles to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithStoreConfigFiles(storeConfigFiles *string) *PostAutoDiscoveryVserverParams {
	o.SetStoreConfigFiles(storeConfigFiles)
	return o
}

// SetStoreConfigFiles adds the storeConfigFiles to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetStoreConfigFiles(storeConfigFiles *string) {
	o.StoreConfigFiles = storeConfigFiles
}

// WithStripDomainSuffix adds the stripDomainSuffix to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithStripDomainSuffix(stripDomainSuffix *string) *PostAutoDiscoveryVserverParams {
	o.SetStripDomainSuffix(stripDomainSuffix)
	return o
}

// SetStripDomainSuffix adds the stripDomainSuffix to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetStripDomainSuffix(stripDomainSuffix *string) {
	o.StripDomainSuffix = stripDomainSuffix
}

// WithSudoRetry adds the sudoRetry to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithSudoRetry(sudoRetry *string) *PostAutoDiscoveryVserverParams {
	o.SetSudoRetry(sudoRetry)
	return o
}

// SetSudoRetry adds the sudoRetry to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetSudoRetry(sudoRetry *string) {
	o.SudoRetry = sudoRetry
}

// WithToggleServiceLevelOnVMPowerState adds the toggleServiceLevelOnVMPowerState to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithToggleServiceLevelOnVMPowerState(toggleServiceLevelOnVMPowerState *string) *PostAutoDiscoveryVserverParams {
	o.SetToggleServiceLevelOnVMPowerState(toggleServiceLevelOnVMPowerState)
	return o
}

// SetToggleServiceLevelOnVMPowerState adds the toggleServiceLevelOnVmPowerState to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetToggleServiceLevelOnVMPowerState(toggleServiceLevelOnVMPowerState *string) {
	o.ToggleServiceLevelOnVMPowerState = toggleServiceLevelOnVMPowerState
}

// WithTrackVMNameChange adds the trackVMNameChange to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithTrackVMNameChange(trackVMNameChange *string) *PostAutoDiscoveryVserverParams {
	o.SetTrackVMNameChange(trackVMNameChange)
	return o
}

// SetTrackVMNameChange adds the trackVmNameChange to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetTrackVMNameChange(trackVMNameChange *string) {
	o.TrackVMNameChange = trackVMNameChange
}

// WithURLPrefix adds the uRLPrefix to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithURLPrefix(uRLPrefix *string) *PostAutoDiscoveryVserverParams {
	o.SetURLPrefix(uRLPrefix)
	return o
}

// SetURLPrefix adds the urlPrefix to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetURLPrefix(uRLPrefix *string) {
	o.URLPrefix = uRLPrefix
}

// WithURLSuffix adds the uRLSuffix to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithURLSuffix(uRLSuffix *string) *PostAutoDiscoveryVserverParams {
	o.SetURLSuffix(uRLSuffix)
	return o
}

// SetURLSuffix adds the urlSuffix to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetURLSuffix(uRLSuffix *string) {
	o.URLSuffix = uRLSuffix
}

// WithUseDomainServer adds the useDomainServer to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithUseDomainServer(useDomainServer *string) *PostAutoDiscoveryVserverParams {
	o.SetUseDomainServer(useDomainServer)
	return o
}

// SetUseDomainServer adds the useDomainServer to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetUseDomainServer(useDomainServer *string) {
	o.UseDomainServer = useDomainServer
}

// WithUseFqdn adds the useFqdn to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithUseFqdn(useFqdn *string) *PostAutoDiscoveryVserverParams {
	o.SetUseFqdn(useFqdn)
	return o
}

// SetUseFqdn adds the useFqdn to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetUseFqdn(useFqdn *string) {
	o.UseFqdn = useFqdn
}

// WithUseServiceAccount adds the useServiceAccount to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithUseServiceAccount(useServiceAccount *string) *PostAutoDiscoveryVserverParams {
	o.SetUseServiceAccount(useServiceAccount)
	return o
}

// SetUseServiceAccount adds the useServiceAccount to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetUseServiceAccount(useServiceAccount *string) {
	o.UseServiceAccount = useServiceAccount
}

// WithUsername adds the username to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithUsername(username *string) *PostAutoDiscoveryVserverParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetUsername(username *string) {
	o.Username = username
}

// WithVMAddDisk adds the vMAddDisk to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithVMAddDisk(vMAddDisk *string) *PostAutoDiscoveryVserverParams {
	o.SetVMAddDisk(vMAddDisk)
	return o
}

// SetVMAddDisk adds the vmAddDisk to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetVMAddDisk(vMAddDisk *string) {
	o.VMAddDisk = vMAddDisk
}

// WithVMNameToUse adds the vMNameToUse to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithVMNameToUse(vMNameToUse *string) *PostAutoDiscoveryVserverParams {
	o.SetVMNameToUse(vMNameToUse)
	return o
}

// SetVMNameToUse adds the vmNameToUse to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetVMNameToUse(vMNameToUse *string) {
	o.VMNameToUse = vMNameToUse
}

// WithVMNotFound adds the vMNotFound to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithVMNotFound(vMNotFound *string) *PostAutoDiscoveryVserverParams {
	o.SetVMNotFound(vMNotFound)
	return o
}

// SetVMNotFound adds the vmNotFound to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetVMNotFound(vMNotFound *string) {
	o.VMNotFound = vMNotFound
}

// WithVrfGroupID adds the vrfGroupID to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) WithVrfGroupID(vrfGroupID *string) *PostAutoDiscoveryVserverParams {
	o.SetVrfGroupID(vrfGroupID)
	return o
}

// SetVrfGroupID adds the vrfGroupId to the post auto discovery vserver params
func (o *PostAutoDiscoveryVserverParams) SetVrfGroupID(vrfGroupID *string) {
	o.VrfGroupID = vrfGroupID
}

// WriteToRequest writes these params to a swagger request
func (o *PostAutoDiscoveryVserverParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AddMultipleVMNamesAsAlias != nil {

		// form param add_multiple_vm_names_as_alias
		var frAddMultipleVMNamesAsAlias string
		if o.AddMultipleVMNamesAsAlias != nil {
			frAddMultipleVMNamesAsAlias = *o.AddMultipleVMNamesAsAlias
		}
		fAddMultipleVMNamesAsAlias := frAddMultipleVMNamesAsAlias
		if fAddMultipleVMNamesAsAlias != "" {
			if err := r.SetFormParam("add_multiple_vm_names_as_alias", fAddMultipleVMNamesAsAlias); err != nil {
				return err
			}
		}

	}

	if o.AlternateSudo != nil {

		// form param alternate_sudo
		var frAlternateSudo string
		if o.AlternateSudo != nil {
			frAlternateSudo = *o.AlternateSudo
		}
		fAlternateSudo := frAlternateSudo
		if fAlternateSudo != "" {
			if err := r.SetFormParam("alternate_sudo", fAlternateSudo); err != nil {
				return err
			}
		}

	}

	if o.AlternateSudoPasswordID != nil {

		// form param alternate_sudo_password_id
		var frAlternateSudoPasswordID string
		if o.AlternateSudoPasswordID != nil {
			frAlternateSudoPasswordID = *o.AlternateSudoPasswordID
		}
		fAlternateSudoPasswordID := frAlternateSudoPasswordID
		if fAlternateSudoPasswordID != "" {
			if err := r.SetFormParam("alternate_sudo_password_id", fAlternateSudoPasswordID); err != nil {
				return err
			}
		}

	}

	if o.CaptureHostsFile != nil {

		// form param capture_hosts_file
		var frCaptureHostsFile string
		if o.CaptureHostsFile != nil {
			frCaptureHostsFile = *o.CaptureHostsFile
		}
		fCaptureHostsFile := frCaptureHostsFile
		if fCaptureHostsFile != "" {
			if err := r.SetFormParam("capture_hosts_file", fCaptureHostsFile); err != nil {
				return err
			}
		}

	}

	if o.ClearExistingSchedule != nil {

		// form param clear_existing_schedule
		var frClearExistingSchedule string
		if o.ClearExistingSchedule != nil {
			frClearExistingSchedule = *o.ClearExistingSchedule
		}
		fClearExistingSchedule := frClearExistingSchedule
		if fClearExistingSchedule != "" {
			if err := r.SetFormParam("clear_existing_schedule", fClearExistingSchedule); err != nil {
				return err
			}
		}

	}

	if o.CustomerID != nil {

		// form param customer_id
		var frCustomerID string
		if o.CustomerID != nil {
			frCustomerID = *o.CustomerID
		}
		fCustomerID := frCustomerID
		if fCustomerID != "" {
			if err := r.SetFormParam("customer_id", fCustomerID); err != nil {
				return err
			}
		}

	}

	if o.DebugLevel != nil {

		// form param debug_level
		var frDebugLevel string
		if o.DebugLevel != nil {
			frDebugLevel = *o.DebugLevel
		}
		fDebugLevel := frDebugLevel
		if fDebugLevel != "" {
			if err := r.SetFormParam("debug_level", fDebugLevel); err != nil {
				return err
			}
		}

	}

	if o.DeviceNameFormat != nil {

		// form param device_name_format
		var frDeviceNameFormat string
		if o.DeviceNameFormat != nil {
			frDeviceNameFormat = *o.DeviceNameFormat
		}
		fDeviceNameFormat := frDeviceNameFormat
		if fDeviceNameFormat != "" {
			if err := r.SetFormParam("device_name_format", fDeviceNameFormat); err != nil {
				return err
			}
		}

	}

	if o.DiscoverApplications != nil {

		// form param discover_applications
		var frDiscoverApplications string
		if o.DiscoverApplications != nil {
			frDiscoverApplications = *o.DiscoverApplications
		}
		fDiscoverApplications := frDiscoverApplications
		if fDiscoverApplications != "" {
			if err := r.SetFormParam("discover_applications", fDiscoverApplications); err != nil {
				return err
			}
		}

	}

	if o.DiscoverCloudid != nil {

		// form param discover_cloudid
		var frDiscoverCloudid string
		if o.DiscoverCloudid != nil {
			frDiscoverCloudid = *o.DiscoverCloudid
		}
		fDiscoverCloudid := frDiscoverCloudid
		if fDiscoverCloudid != "" {
			if err := r.SetFormParam("discover_cloudid", fDiscoverCloudid); err != nil {
				return err
			}
		}

	}

	if o.DiscoverParts != nil {

		// form param discover_parts
		var frDiscoverParts string
		if o.DiscoverParts != nil {
			frDiscoverParts = *o.DiscoverParts
		}
		fDiscoverParts := frDiscoverParts
		if fDiscoverParts != "" {
			if err := r.SetFormParam("discover_parts", fDiscoverParts); err != nil {
				return err
			}
		}

	}

	if o.DiscoverServices != nil {

		// form param discover_services
		var frDiscoverServices string
		if o.DiscoverServices != nil {
			frDiscoverServices = *o.DiscoverServices
		}
		fDiscoverServices := frDiscoverServices
		if fDiscoverServices != "" {
			if err := r.SetFormParam("discover_services", fDiscoverServices); err != nil {
				return err
			}
		}

	}

	if o.DiscoverSoftware != nil {

		// form param discover_software
		var frDiscoverSoftware string
		if o.DiscoverSoftware != nil {
			frDiscoverSoftware = *o.DiscoverSoftware
		}
		fDiscoverSoftware := frDiscoverSoftware
		if fDiscoverSoftware != "" {
			if err := r.SetFormParam("discover_software", fDiscoverSoftware); err != nil {
				return err
			}
		}

	}

	if o.DiscoverVms != nil {

		// form param discover_vms
		var frDiscoverVms string
		if o.DiscoverVms != nil {
			frDiscoverVms = *o.DiscoverVms
		}
		fDiscoverVms := frDiscoverVms
		if fDiscoverVms != "" {
			if err := r.SetFormParam("discover_vms", fDiscoverVms); err != nil {
				return err
			}
		}

	}

	if o.EnableResourcesMonitoring != nil {

		// form param enable_resources_monitoring
		var frEnableResourcesMonitoring string
		if o.EnableResourcesMonitoring != nil {
			frEnableResourcesMonitoring = *o.EnableResourcesMonitoring
		}
		fEnableResourcesMonitoring := frEnableResourcesMonitoring
		if fEnableResourcesMonitoring != "" {
			if err := r.SetFormParam("enable_resources_monitoring", fEnableResourcesMonitoring); err != nil {
				return err
			}
		}

	}

	if o.EndIPAddress != nil {

		// form param end_ip_address
		var frEndIPAddress string
		if o.EndIPAddress != nil {
			frEndIPAddress = *o.EndIPAddress
		}
		fEndIPAddress := frEndIPAddress
		if fEndIPAddress != "" {
			if err := r.SetFormParam("end_ip_address", fEndIPAddress); err != nil {
				return err
			}
		}

	}

	if o.GetGuestOsInfo != nil {

		// form param get_guest_os_info
		var frGetGuestOsInfo string
		if o.GetGuestOsInfo != nil {
			frGetGuestOsInfo = *o.GetGuestOsInfo
		}
		fGetGuestOsInfo := frGetGuestOsInfo
		if fGetGuestOsInfo != "" {
			if err := r.SetFormParam("get_guest_os_info", fGetGuestOsInfo); err != nil {
				return err
			}
		}

	}

	if o.Groups != nil {

		// form param groups
		var frGroups string
		if o.Groups != nil {
			frGroups = *o.Groups
		}
		fGroups := frGroups
		if fGroups != "" {
			if err := r.SetFormParam("groups", fGroups); err != nil {
				return err
			}
		}

	}

	if o.HostAllowDuplicateSerials != nil {

		// form param host_allow_duplicate_serials
		var frHostAllowDuplicateSerials string
		if o.HostAllowDuplicateSerials != nil {
			frHostAllowDuplicateSerials = *o.HostAllowDuplicateSerials
		}
		fHostAllowDuplicateSerials := frHostAllowDuplicateSerials
		if fHostAllowDuplicateSerials != "" {
			if err := r.SetFormParam("host_allow_duplicate_serials", fHostAllowDuplicateSerials); err != nil {
				return err
			}
		}

	}

	if o.Hostidlist != nil {

		// form param hostidlist
		var frHostidlist string
		if o.Hostidlist != nil {
			frHostidlist = *o.Hostidlist
		}
		fHostidlist := frHostidlist
		if fHostidlist != "" {
			if err := r.SetFormParam("hostidlist", fHostidlist); err != nil {
				return err
			}
		}

	}

	if o.HostnamePrecedence != nil {

		// form param hostname_precedence
		var frHostnamePrecedence string
		if o.HostnamePrecedence != nil {
			frHostnamePrecedence = *o.HostnamePrecedence
		}
		fHostnamePrecedence := frHostnamePrecedence
		if fHostnamePrecedence != "" {
			if err := r.SetFormParam("hostname_precedence", fHostnamePrecedence); err != nil {
				return err
			}
		}

	}

	if o.IgnoreGuestUUID != nil {

		// form param ignore_guest_uuid
		var frIgnoreGuestUUID string
		if o.IgnoreGuestUUID != nil {
			frIgnoreGuestUUID = *o.IgnoreGuestUUID
		}
		fIgnoreGuestUUID := frIgnoreGuestUUID
		if fIgnoreGuestUUID != "" {
			if err := r.SetFormParam("ignore_guest_uuid", fIgnoreGuestUUID); err != nil {
				return err
			}
		}

	}

	if o.IgnoreHostSerial != nil {

		// form param ignore_host_serial
		var frIgnoreHostSerial string
		if o.IgnoreHostSerial != nil {
			frIgnoreHostSerial = *o.IgnoreHostSerial
		}
		fIgnoreHostSerial := frIgnoreHostSerial
		if fIgnoreHostSerial != "" {
			if err := r.SetFormParam("ignore_host_serial", fIgnoreHostSerial); err != nil {
				return err
			}
		}

	}

	if o.IgnoreHostUUID != nil {

		// form param ignore_host_uuid
		var frIgnoreHostUUID string
		if o.IgnoreHostUUID != nil {
			frIgnoreHostUUID = *o.IgnoreHostUUID
		}
		fIgnoreHostUUID := frIgnoreHostUUID
		if fIgnoreHostUUID != "" {
			if err := r.SetFormParam("ignore_host_uuid", fIgnoreHostUUID); err != nil {
				return err
			}
		}

	}

	if o.IgnoreIPV6 != nil {

		// form param ignore_ipv6
		var frIgnoreIPV6 string
		if o.IgnoreIPV6 != nil {
			frIgnoreIPV6 = *o.IgnoreIPV6
		}
		fIgnoreIPV6 := frIgnoreIPV6
		if fIgnoreIPV6 != "" {
			if err := r.SetFormParam("ignore_ipv6", fIgnoreIPV6); err != nil {
				return err
			}
		}

	}

	if o.IgnorePoweredOff != nil {

		// form param ignore_powered_off
		var frIgnorePoweredOff string
		if o.IgnorePoweredOff != nil {
			frIgnorePoweredOff = *o.IgnorePoweredOff
		}
		fIgnorePoweredOff := frIgnorePoweredOff
		if fIgnorePoweredOff != "" {
			if err := r.SetFormParam("ignore_powered_off", fIgnorePoweredOff); err != nil {
				return err
			}
		}

	}

	if o.IgnoreVirtSubtype != nil {

		// form param ignore_virt_subtype
		var frIgnoreVirtSubtype string
		if o.IgnoreVirtSubtype != nil {
			frIgnoreVirtSubtype = *o.IgnoreVirtSubtype
		}
		fIgnoreVirtSubtype := frIgnoreVirtSubtype
		if fIgnoreVirtSubtype != "" {
			if err := r.SetFormParam("ignore_virt_subtype", fIgnoreVirtSubtype); err != nil {
				return err
			}
		}

	}

	if o.InitialSoftwareType != nil {

		// form param initial_software_type
		var frInitialSoftwareType string
		if o.InitialSoftwareType != nil {
			frInitialSoftwareType = *o.InitialSoftwareType
		}
		fInitialSoftwareType := frInitialSoftwareType
		if fInitialSoftwareType != "" {
			if err := r.SetFormParam("initial_software_type", fInitialSoftwareType); err != nil {
				return err
			}
		}

	}

	if o.LdapFilterType != nil {

		// form param ldap_filter_type
		var frLdapFilterType string
		if o.LdapFilterType != nil {
			frLdapFilterType = *o.LdapFilterType
		}
		fLdapFilterType := frLdapFilterType
		if fLdapFilterType != "" {
			if err := r.SetFormParam("ldap_filter_type", fLdapFilterType); err != nil {
				return err
			}
		}

	}

	if o.LdapServer != nil {

		// form param ldap_server
		var frLdapServer string
		if o.LdapServer != nil {
			frLdapServer = *o.LdapServer
		}
		fLdapServer := frLdapServer
		if fLdapServer != "" {
			if err := r.SetFormParam("ldap_server", fLdapServer); err != nil {
				return err
			}
		}

	}

	if o.LdapUnpwdID != nil {

		// form param ldap_unpwd_id
		var frLdapUnpwdID string
		if o.LdapUnpwdID != nil {
			frLdapUnpwdID = *o.LdapUnpwdID
		}
		fLdapUnpwdID := frLdapUnpwdID
		if fLdapUnpwdID != "" {
			if err := r.SetFormParam("ldap_unpwd_id", fLdapUnpwdID); err != nil {
				return err
			}
		}

	}

	// form param name
	frName := o.Name
	fName := frName
	if fName != "" {
		if err := r.SetFormParam("name", fName); err != nil {
			return err
		}
	}

	if o.ObjectCategory != nil {

		// form param object_category
		var frObjectCategory string
		if o.ObjectCategory != nil {
			frObjectCategory = *o.ObjectCategory
		}
		fObjectCategory := frObjectCategory
		if fObjectCategory != "" {
			if err := r.SetFormParam("object_category", fObjectCategory); err != nil {
				return err
			}
		}

	}

	if o.OverwriteObjectCategories != nil {

		// form param overwrite_object_categories
		var frOverwriteObjectCategories string
		if o.OverwriteObjectCategories != nil {
			frOverwriteObjectCategories = *o.OverwriteObjectCategories
		}
		fOverwriteObjectCategories := frOverwriteObjectCategories
		if fOverwriteObjectCategories != "" {
			if err := r.SetFormParam("overwrite_object_categories", fOverwriteObjectCategories); err != nil {
				return err
			}
		}

	}

	if o.Password != nil {

		// form param password
		var frPassword string
		if o.Password != nil {
			frPassword = *o.Password
		}
		fPassword := frPassword
		if fPassword != "" {
			if err := r.SetFormParam("password", fPassword); err != nil {
				return err
			}
		}

	}

	if o.Platform != nil {

		// form param platform
		var frPlatform string
		if o.Platform != nil {
			frPlatform = *o.Platform
		}
		fPlatform := frPlatform
		if fPlatform != "" {
			if err := r.SetFormParam("platform", fPlatform); err != nil {
				return err
			}
		}

	}

	if o.PollingInterval != nil {

		// form param polling_interval
		var frPollingInterval string
		if o.PollingInterval != nil {
			frPollingInterval = *o.PollingInterval
		}
		fPollingInterval := frPollingInterval
		if fPollingInterval != "" {
			if err := r.SetFormParam("polling_interval", fPollingInterval); err != nil {
				return err
			}
		}

	}

	if o.Port != nil {

		// form param port
		var frPort string
		if o.Port != nil {
			frPort = *o.Port
		}
		fPort := frPort
		if fPort != "" {
			if err := r.SetFormParam("port", fPort); err != nil {
				return err
			}
		}

	}

	if o.PrependVmhostname != nil {

		// form param prepend_vmhostname
		var frPrependVmhostname string
		if o.PrependVmhostname != nil {
			frPrependVmhostname = *o.PrependVmhostname
		}
		fPrependVmhostname := frPrependVmhostname
		if fPrependVmhostname != "" {
			if err := r.SetFormParam("prepend_vmhostname", fPrependVmhostname); err != nil {
				return err
			}
		}

	}

	if o.RemoteCollectorID != nil {

		// form param remote_collector_id
		var frRemoteCollectorID string
		if o.RemoteCollectorID != nil {
			frRemoteCollectorID = *o.RemoteCollectorID
		}
		fRemoteCollectorID := frRemoteCollectorID
		if fRemoteCollectorID != "" {
			if err := r.SetFormParam("remote_collector_id", fRemoteCollectorID); err != nil {
				return err
			}
		}

	}

	if o.ScheduleDays != nil {

		// form param schedule_days
		var frScheduleDays string
		if o.ScheduleDays != nil {
			frScheduleDays = *o.ScheduleDays
		}
		fScheduleDays := frScheduleDays
		if fScheduleDays != "" {
			if err := r.SetFormParam("schedule_days", fScheduleDays); err != nil {
				return err
			}
		}

	}

	if o.ScheduleTime != nil {

		// form param schedule_time
		var frScheduleTime string
		if o.ScheduleTime != nil {
			frScheduleTime = *o.ScheduleTime
		}
		fScheduleTime := frScheduleTime
		if fScheduleTime != "" {
			if err := r.SetFormParam("schedule_time", fScheduleTime); err != nil {
				return err
			}
		}

	}

	if o.Server != nil {

		// form param server
		var frServer string
		if o.Server != nil {
			frServer = *o.Server
		}
		fServer := frServer
		if fServer != "" {
			if err := r.SetFormParam("server", fServer); err != nil {
				return err
			}
		}

	}

	if o.ServiceLevel != nil {

		// form param service_level
		var frServiceLevel string
		if o.ServiceLevel != nil {
			frServiceLevel = *o.ServiceLevel
		}
		fServiceLevel := frServiceLevel
		if fServiceLevel != "" {
			if err := r.SetFormParam("service_level", fServiceLevel); err != nil {
				return err
			}
		}

	}

	if o.ServiceLevelDeviceID != nil {

		// form param service_level_device_id
		var frServiceLevelDeviceID string
		if o.ServiceLevelDeviceID != nil {
			frServiceLevelDeviceID = *o.ServiceLevelDeviceID
		}
		fServiceLevelDeviceID := frServiceLevelDeviceID
		if fServiceLevelDeviceID != "" {
			if err := r.SetFormParam("service_level_device_id", fServiceLevelDeviceID); err != nil {
				return err
			}
		}

	}

	if o.StoreConfigFiles != nil {

		// form param store_config_files
		var frStoreConfigFiles string
		if o.StoreConfigFiles != nil {
			frStoreConfigFiles = *o.StoreConfigFiles
		}
		fStoreConfigFiles := frStoreConfigFiles
		if fStoreConfigFiles != "" {
			if err := r.SetFormParam("store_config_files", fStoreConfigFiles); err != nil {
				return err
			}
		}

	}

	if o.StripDomainSuffix != nil {

		// form param strip_domain_suffix
		var frStripDomainSuffix string
		if o.StripDomainSuffix != nil {
			frStripDomainSuffix = *o.StripDomainSuffix
		}
		fStripDomainSuffix := frStripDomainSuffix
		if fStripDomainSuffix != "" {
			if err := r.SetFormParam("strip_domain_suffix", fStripDomainSuffix); err != nil {
				return err
			}
		}

	}

	if o.SudoRetry != nil {

		// form param sudo_retry
		var frSudoRetry string
		if o.SudoRetry != nil {
			frSudoRetry = *o.SudoRetry
		}
		fSudoRetry := frSudoRetry
		if fSudoRetry != "" {
			if err := r.SetFormParam("sudo_retry", fSudoRetry); err != nil {
				return err
			}
		}

	}

	if o.ToggleServiceLevelOnVMPowerState != nil {

		// form param toggle_service_level_on_vm_power_state
		var frToggleServiceLevelOnVMPowerState string
		if o.ToggleServiceLevelOnVMPowerState != nil {
			frToggleServiceLevelOnVMPowerState = *o.ToggleServiceLevelOnVMPowerState
		}
		fToggleServiceLevelOnVMPowerState := frToggleServiceLevelOnVMPowerState
		if fToggleServiceLevelOnVMPowerState != "" {
			if err := r.SetFormParam("toggle_service_level_on_vm_power_state", fToggleServiceLevelOnVMPowerState); err != nil {
				return err
			}
		}

	}

	if o.TrackVMNameChange != nil {

		// form param track_vm_name_change
		var frTrackVMNameChange string
		if o.TrackVMNameChange != nil {
			frTrackVMNameChange = *o.TrackVMNameChange
		}
		fTrackVMNameChange := frTrackVMNameChange
		if fTrackVMNameChange != "" {
			if err := r.SetFormParam("track_vm_name_change", fTrackVMNameChange); err != nil {
				return err
			}
		}

	}

	if o.URLPrefix != nil {

		// form param url_prefix
		var frURLPrefix string
		if o.URLPrefix != nil {
			frURLPrefix = *o.URLPrefix
		}
		fURLPrefix := frURLPrefix
		if fURLPrefix != "" {
			if err := r.SetFormParam("url_prefix", fURLPrefix); err != nil {
				return err
			}
		}

	}

	if o.URLSuffix != nil {

		// form param url_suffix
		var frURLSuffix string
		if o.URLSuffix != nil {
			frURLSuffix = *o.URLSuffix
		}
		fURLSuffix := frURLSuffix
		if fURLSuffix != "" {
			if err := r.SetFormParam("url_suffix", fURLSuffix); err != nil {
				return err
			}
		}

	}

	if o.UseDomainServer != nil {

		// form param use_domain_server
		var frUseDomainServer string
		if o.UseDomainServer != nil {
			frUseDomainServer = *o.UseDomainServer
		}
		fUseDomainServer := frUseDomainServer
		if fUseDomainServer != "" {
			if err := r.SetFormParam("use_domain_server", fUseDomainServer); err != nil {
				return err
			}
		}

	}

	if o.UseFqdn != nil {

		// form param use_fqdn
		var frUseFqdn string
		if o.UseFqdn != nil {
			frUseFqdn = *o.UseFqdn
		}
		fUseFqdn := frUseFqdn
		if fUseFqdn != "" {
			if err := r.SetFormParam("use_fqdn", fUseFqdn); err != nil {
				return err
			}
		}

	}

	if o.UseServiceAccount != nil {

		// form param use_service_account
		var frUseServiceAccount string
		if o.UseServiceAccount != nil {
			frUseServiceAccount = *o.UseServiceAccount
		}
		fUseServiceAccount := frUseServiceAccount
		if fUseServiceAccount != "" {
			if err := r.SetFormParam("use_service_account", fUseServiceAccount); err != nil {
				return err
			}
		}

	}

	if o.Username != nil {

		// form param username
		var frUsername string
		if o.Username != nil {
			frUsername = *o.Username
		}
		fUsername := frUsername
		if fUsername != "" {
			if err := r.SetFormParam("username", fUsername); err != nil {
				return err
			}
		}

	}

	if o.VMAddDisk != nil {

		// form param vm_add_disk
		var frVMAddDisk string
		if o.VMAddDisk != nil {
			frVMAddDisk = *o.VMAddDisk
		}
		fVMAddDisk := frVMAddDisk
		if fVMAddDisk != "" {
			if err := r.SetFormParam("vm_add_disk", fVMAddDisk); err != nil {
				return err
			}
		}

	}

	if o.VMNameToUse != nil {

		// form param vm_name_to_use
		var frVMNameToUse string
		if o.VMNameToUse != nil {
			frVMNameToUse = *o.VMNameToUse
		}
		fVMNameToUse := frVMNameToUse
		if fVMNameToUse != "" {
			if err := r.SetFormParam("vm_name_to_use", fVMNameToUse); err != nil {
				return err
			}
		}

	}

	if o.VMNotFound != nil {

		// form param vm_not_found
		var frVMNotFound string
		if o.VMNotFound != nil {
			frVMNotFound = *o.VMNotFound
		}
		fVMNotFound := frVMNotFound
		if fVMNotFound != "" {
			if err := r.SetFormParam("vm_not_found", fVMNotFound); err != nil {
				return err
			}
		}

	}

	if o.VrfGroupID != nil {

		// form param vrf_group_id
		var frVrfGroupID string
		if o.VrfGroupID != nil {
			frVrfGroupID = *o.VrfGroupID
		}
		fVrfGroupID := frVrfGroupID
		if fVrfGroupID != "" {
			if err := r.SetFormParam("vrf_group_id", fVrfGroupID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
