// Code generated by go-swagger; DO NOT EDIT.

package auto_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAutoDiscoveryDNSReader is a Reader for the GetAutoDiscoveryDNS structure.
type GetAutoDiscoveryDNSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAutoDiscoveryDNSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAutoDiscoveryDNSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAutoDiscoveryDNSBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAutoDiscoveryDNSUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAutoDiscoveryDNSForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAutoDiscoveryDNSNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAutoDiscoveryDNSMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetAutoDiscoveryDNSGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAutoDiscoveryDNSInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAutoDiscoveryDNSServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAutoDiscoveryDNSOK creates a GetAutoDiscoveryDNSOK with default headers values
func NewGetAutoDiscoveryDNSOK() *GetAutoDiscoveryDNSOK {
	return &GetAutoDiscoveryDNSOK{}
}

/*GetAutoDiscoveryDNSOK handles this case with default header values.

The above command returns results like this:
*/
type GetAutoDiscoveryDNSOK struct {
	Payload *GetAutoDiscoveryDNSOKBody
}

func (o *GetAutoDiscoveryDNSOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsOK  %+v", 200, o.Payload)
}

func (o *GetAutoDiscoveryDNSOK) GetPayload() *GetAutoDiscoveryDNSOKBody {
	return o.Payload
}

func (o *GetAutoDiscoveryDNSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAutoDiscoveryDNSOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAutoDiscoveryDNSBadRequest creates a GetAutoDiscoveryDNSBadRequest with default headers values
func NewGetAutoDiscoveryDNSBadRequest() *GetAutoDiscoveryDNSBadRequest {
	return &GetAutoDiscoveryDNSBadRequest{}
}

/*GetAutoDiscoveryDNSBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetAutoDiscoveryDNSBadRequest struct {
}

func (o *GetAutoDiscoveryDNSBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsBadRequest ", 400)
}

func (o *GetAutoDiscoveryDNSBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutoDiscoveryDNSUnauthorized creates a GetAutoDiscoveryDNSUnauthorized with default headers values
func NewGetAutoDiscoveryDNSUnauthorized() *GetAutoDiscoveryDNSUnauthorized {
	return &GetAutoDiscoveryDNSUnauthorized{}
}

/*GetAutoDiscoveryDNSUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetAutoDiscoveryDNSUnauthorized struct {
}

func (o *GetAutoDiscoveryDNSUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsUnauthorized ", 401)
}

func (o *GetAutoDiscoveryDNSUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutoDiscoveryDNSForbidden creates a GetAutoDiscoveryDNSForbidden with default headers values
func NewGetAutoDiscoveryDNSForbidden() *GetAutoDiscoveryDNSForbidden {
	return &GetAutoDiscoveryDNSForbidden{}
}

/*GetAutoDiscoveryDNSForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetAutoDiscoveryDNSForbidden struct {
}

func (o *GetAutoDiscoveryDNSForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsForbidden ", 403)
}

func (o *GetAutoDiscoveryDNSForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutoDiscoveryDNSNotFound creates a GetAutoDiscoveryDNSNotFound with default headers values
func NewGetAutoDiscoveryDNSNotFound() *GetAutoDiscoveryDNSNotFound {
	return &GetAutoDiscoveryDNSNotFound{}
}

/*GetAutoDiscoveryDNSNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetAutoDiscoveryDNSNotFound struct {
}

func (o *GetAutoDiscoveryDNSNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsNotFound ", 404)
}

func (o *GetAutoDiscoveryDNSNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutoDiscoveryDNSMethodNotAllowed creates a GetAutoDiscoveryDNSMethodNotAllowed with default headers values
func NewGetAutoDiscoveryDNSMethodNotAllowed() *GetAutoDiscoveryDNSMethodNotAllowed {
	return &GetAutoDiscoveryDNSMethodNotAllowed{}
}

/*GetAutoDiscoveryDNSMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetAutoDiscoveryDNSMethodNotAllowed struct {
}

func (o *GetAutoDiscoveryDNSMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsMethodNotAllowed ", 405)
}

func (o *GetAutoDiscoveryDNSMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutoDiscoveryDNSGone creates a GetAutoDiscoveryDNSGone with default headers values
func NewGetAutoDiscoveryDNSGone() *GetAutoDiscoveryDNSGone {
	return &GetAutoDiscoveryDNSGone{}
}

/*GetAutoDiscoveryDNSGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetAutoDiscoveryDNSGone struct {
}

func (o *GetAutoDiscoveryDNSGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsGone ", 410)
}

func (o *GetAutoDiscoveryDNSGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutoDiscoveryDNSInternalServerError creates a GetAutoDiscoveryDNSInternalServerError with default headers values
func NewGetAutoDiscoveryDNSInternalServerError() *GetAutoDiscoveryDNSInternalServerError {
	return &GetAutoDiscoveryDNSInternalServerError{}
}

/*GetAutoDiscoveryDNSInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetAutoDiscoveryDNSInternalServerError struct {
}

func (o *GetAutoDiscoveryDNSInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsInternalServerError ", 500)
}

func (o *GetAutoDiscoveryDNSInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutoDiscoveryDNSServiceUnavailable creates a GetAutoDiscoveryDNSServiceUnavailable with default headers values
func NewGetAutoDiscoveryDNSServiceUnavailable() *GetAutoDiscoveryDNSServiceUnavailable {
	return &GetAutoDiscoveryDNSServiceUnavailable{}
}

/*GetAutoDiscoveryDNSServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetAutoDiscoveryDNSServiceUnavailable struct {
}

func (o *GetAutoDiscoveryDNSServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auto_discovery/dns/][%d] getAutoDiscoveryDnsServiceUnavailable ", 503)
}

func (o *GetAutoDiscoveryDNSServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetAutoDiscoveryDNSOKBody get auto discovery DNS o k body
swagger:model GetAutoDiscoveryDNSOKBody
*/
type GetAutoDiscoveryDNSOKBody struct {

	// jobs
	Jobs []*JobsItems0 `json:"jobs"`
}

// Validate validates this get auto discovery DNS o k body
func (o *GetAutoDiscoveryDNSOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateJobs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAutoDiscoveryDNSOKBody) validateJobs(formats strfmt.Registry) error {

	if swag.IsZero(o.Jobs) { // not required
		return nil
	}

	for i := 0; i < len(o.Jobs); i++ {
		if swag.IsZero(o.Jobs[i]) { // not required
			continue
		}

		if o.Jobs[i] != nil {
			if err := o.Jobs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAutoDiscoveryDnsOK" + "." + "jobs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAutoDiscoveryDNSOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAutoDiscoveryDNSOKBody) UnmarshalBinary(b []byte) error {
	var res GetAutoDiscoveryDNSOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
