// Code generated by go-swagger; DO NOT EDIT.

package auto_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostAutoDiscoveryDNSParams creates a new PostAutoDiscoveryDNSParams object
// with the default values initialized.
func NewPostAutoDiscoveryDNSParams() *PostAutoDiscoveryDNSParams {
	var ()
	return &PostAutoDiscoveryDNSParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAutoDiscoveryDNSParamsWithTimeout creates a new PostAutoDiscoveryDNSParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAutoDiscoveryDNSParamsWithTimeout(timeout time.Duration) *PostAutoDiscoveryDNSParams {
	var ()
	return &PostAutoDiscoveryDNSParams{

		timeout: timeout,
	}
}

// NewPostAutoDiscoveryDNSParamsWithContext creates a new PostAutoDiscoveryDNSParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAutoDiscoveryDNSParamsWithContext(ctx context.Context) *PostAutoDiscoveryDNSParams {
	var ()
	return &PostAutoDiscoveryDNSParams{

		Context: ctx,
	}
}

// NewPostAutoDiscoveryDNSParamsWithHTTPClient creates a new PostAutoDiscoveryDNSParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAutoDiscoveryDNSParamsWithHTTPClient(client *http.Client) *PostAutoDiscoveryDNSParams {
	var ()
	return &PostAutoDiscoveryDNSParams{
		HTTPClient: client,
	}
}

/*PostAutoDiscoveryDNSParams contains all the parameters to send to the API endpoint
for the post auto discovery Dns operation typically these are written to a http.Request
*/
type PostAutoDiscoveryDNSParams struct {

	/*Nameserver
	  IP/FQDN of the nameserver

	*/
	Nameserver string
	/*ScheduleDays
	  Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil set the job for Mon, Tue and Wed. For multiple schedules, separate with a slash (/).

	*/
	ScheduleDays *string
	/*ScheduleTime
	  Time in HH:MM format if you want to schedule the job. Note: Must be formatted as text NOT date. For multiple schedules, separate with a slash (/).

	*/
	ScheduleTime *string
	/*Zonename
	  name of the zone

	*/
	Zonename string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) WithTimeout(timeout time.Duration) *PostAutoDiscoveryDNSParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) WithContext(ctx context.Context) *PostAutoDiscoveryDNSParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) WithHTTPClient(client *http.Client) *PostAutoDiscoveryDNSParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNameserver adds the nameserver to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) WithNameserver(nameserver string) *PostAutoDiscoveryDNSParams {
	o.SetNameserver(nameserver)
	return o
}

// SetNameserver adds the nameserver to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) SetNameserver(nameserver string) {
	o.Nameserver = nameserver
}

// WithScheduleDays adds the scheduleDays to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) WithScheduleDays(scheduleDays *string) *PostAutoDiscoveryDNSParams {
	o.SetScheduleDays(scheduleDays)
	return o
}

// SetScheduleDays adds the scheduleDays to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) SetScheduleDays(scheduleDays *string) {
	o.ScheduleDays = scheduleDays
}

// WithScheduleTime adds the scheduleTime to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) WithScheduleTime(scheduleTime *string) *PostAutoDiscoveryDNSParams {
	o.SetScheduleTime(scheduleTime)
	return o
}

// SetScheduleTime adds the scheduleTime to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) SetScheduleTime(scheduleTime *string) {
	o.ScheduleTime = scheduleTime
}

// WithZonename adds the zonename to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) WithZonename(zonename string) *PostAutoDiscoveryDNSParams {
	o.SetZonename(zonename)
	return o
}

// SetZonename adds the zonename to the post auto discovery Dns params
func (o *PostAutoDiscoveryDNSParams) SetZonename(zonename string) {
	o.Zonename = zonename
}

// WriteToRequest writes these params to a swagger request
func (o *PostAutoDiscoveryDNSParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param nameserver
	frNameserver := o.Nameserver
	fNameserver := frNameserver
	if fNameserver != "" {
		if err := r.SetFormParam("nameserver", fNameserver); err != nil {
			return err
		}
	}

	if o.ScheduleDays != nil {

		// form param schedule_days
		var frScheduleDays string
		if o.ScheduleDays != nil {
			frScheduleDays = *o.ScheduleDays
		}
		fScheduleDays := frScheduleDays
		if fScheduleDays != "" {
			if err := r.SetFormParam("schedule_days", fScheduleDays); err != nil {
				return err
			}
		}

	}

	if o.ScheduleTime != nil {

		// form param schedule_time
		var frScheduleTime string
		if o.ScheduleTime != nil {
			frScheduleTime = *o.ScheduleTime
		}
		fScheduleTime := frScheduleTime
		if fScheduleTime != "" {
			if err := r.SetFormParam("schedule_time", fScheduleTime); err != nil {
				return err
			}
		}

	}

	// form param zonename
	frZonename := o.Zonename
	fZonename := frZonename
	if fZonename != "" {
		if err := r.SetFormParam("zonename", fZonename); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
