// Code generated by go-swagger; DO NOT EDIT.

package auto_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostAutoDiscoveryCertificateParams creates a new PostAutoDiscoveryCertificateParams object
// with the default values initialized.
func NewPostAutoDiscoveryCertificateParams() *PostAutoDiscoveryCertificateParams {
	var (
		debugLevelDefault  = string("no")
		followChainDefault = string("no")
	)
	return &PostAutoDiscoveryCertificateParams{
		DebugLevel:  &debugLevelDefault,
		FollowChain: &followChainDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAutoDiscoveryCertificateParamsWithTimeout creates a new PostAutoDiscoveryCertificateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAutoDiscoveryCertificateParamsWithTimeout(timeout time.Duration) *PostAutoDiscoveryCertificateParams {
	var (
		debugLevelDefault  = string("no")
		followChainDefault = string("no")
	)
	return &PostAutoDiscoveryCertificateParams{
		DebugLevel:  &debugLevelDefault,
		FollowChain: &followChainDefault,

		timeout: timeout,
	}
}

// NewPostAutoDiscoveryCertificateParamsWithContext creates a new PostAutoDiscoveryCertificateParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAutoDiscoveryCertificateParamsWithContext(ctx context.Context) *PostAutoDiscoveryCertificateParams {
	var (
		debugLevelDefault  = string("no")
		followChainDefault = string("no")
	)
	return &PostAutoDiscoveryCertificateParams{
		DebugLevel:  &debugLevelDefault,
		FollowChain: &followChainDefault,

		Context: ctx,
	}
}

// NewPostAutoDiscoveryCertificateParamsWithHTTPClient creates a new PostAutoDiscoveryCertificateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAutoDiscoveryCertificateParamsWithHTTPClient(client *http.Client) *PostAutoDiscoveryCertificateParams {
	var (
		debugLevelDefault  = string("no")
		followChainDefault = string("no")
	)
	return &PostAutoDiscoveryCertificateParams{
		DebugLevel:  &debugLevelDefault,
		FollowChain: &followChainDefault,
		HTTPClient:  client,
	}
}

/*PostAutoDiscoveryCertificateParams contains all the parameters to send to the API endpoint
for the post auto discovery certificate operation typically these are written to a http.Request
*/
type PostAutoDiscoveryCertificateParams struct {

	/*DebugLevel*/
	DebugLevel *string
	/*EndIPAddress
	  End IP address

	*/
	EndIPAddress string
	/*ExcludeServers
	  comma separated liste of addresses to exclude

	*/
	ExcludeServers *string
	/*FollowChain*/
	FollowChain *string
	/*Name
	  name of the job

	*/
	Name string
	/*Ports
	  default is 443, comma separated

	*/
	Ports *string
	/*ScheduleDays
	  Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil set the job for Mon, Tue and Wed. For multiple schedules, separate with a slash (/).

	*/
	ScheduleDays *string
	/*ScheduleTime
	  Time in HH:MM format if you want to schedule the job. Note: Must be formatted as text NOT date. For multiple schedules, separate with a slash (/).

	*/
	ScheduleTime *string
	/*Server
	  IP or FQDN of target server

	*/
	Server *string
	/*StartIPAddress
	  beginning of IP address range

	*/
	StartIPAddress string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithTimeout(timeout time.Duration) *PostAutoDiscoveryCertificateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithContext(ctx context.Context) *PostAutoDiscoveryCertificateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithHTTPClient(client *http.Client) *PostAutoDiscoveryCertificateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDebugLevel adds the debugLevel to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithDebugLevel(debugLevel *string) *PostAutoDiscoveryCertificateParams {
	o.SetDebugLevel(debugLevel)
	return o
}

// SetDebugLevel adds the debugLevel to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetDebugLevel(debugLevel *string) {
	o.DebugLevel = debugLevel
}

// WithEndIPAddress adds the endIPAddress to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithEndIPAddress(endIPAddress string) *PostAutoDiscoveryCertificateParams {
	o.SetEndIPAddress(endIPAddress)
	return o
}

// SetEndIPAddress adds the endIpAddress to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetEndIPAddress(endIPAddress string) {
	o.EndIPAddress = endIPAddress
}

// WithExcludeServers adds the excludeServers to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithExcludeServers(excludeServers *string) *PostAutoDiscoveryCertificateParams {
	o.SetExcludeServers(excludeServers)
	return o
}

// SetExcludeServers adds the excludeServers to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetExcludeServers(excludeServers *string) {
	o.ExcludeServers = excludeServers
}

// WithFollowChain adds the followChain to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithFollowChain(followChain *string) *PostAutoDiscoveryCertificateParams {
	o.SetFollowChain(followChain)
	return o
}

// SetFollowChain adds the followChain to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetFollowChain(followChain *string) {
	o.FollowChain = followChain
}

// WithName adds the name to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithName(name string) *PostAutoDiscoveryCertificateParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetName(name string) {
	o.Name = name
}

// WithPorts adds the ports to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithPorts(ports *string) *PostAutoDiscoveryCertificateParams {
	o.SetPorts(ports)
	return o
}

// SetPorts adds the ports to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetPorts(ports *string) {
	o.Ports = ports
}

// WithScheduleDays adds the scheduleDays to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithScheduleDays(scheduleDays *string) *PostAutoDiscoveryCertificateParams {
	o.SetScheduleDays(scheduleDays)
	return o
}

// SetScheduleDays adds the scheduleDays to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetScheduleDays(scheduleDays *string) {
	o.ScheduleDays = scheduleDays
}

// WithScheduleTime adds the scheduleTime to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithScheduleTime(scheduleTime *string) *PostAutoDiscoveryCertificateParams {
	o.SetScheduleTime(scheduleTime)
	return o
}

// SetScheduleTime adds the scheduleTime to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetScheduleTime(scheduleTime *string) {
	o.ScheduleTime = scheduleTime
}

// WithServer adds the server to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithServer(server *string) *PostAutoDiscoveryCertificateParams {
	o.SetServer(server)
	return o
}

// SetServer adds the server to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetServer(server *string) {
	o.Server = server
}

// WithStartIPAddress adds the startIPAddress to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) WithStartIPAddress(startIPAddress string) *PostAutoDiscoveryCertificateParams {
	o.SetStartIPAddress(startIPAddress)
	return o
}

// SetStartIPAddress adds the startIpAddress to the post auto discovery certificate params
func (o *PostAutoDiscoveryCertificateParams) SetStartIPAddress(startIPAddress string) {
	o.StartIPAddress = startIPAddress
}

// WriteToRequest writes these params to a swagger request
func (o *PostAutoDiscoveryCertificateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DebugLevel != nil {

		// form param debug_level
		var frDebugLevel string
		if o.DebugLevel != nil {
			frDebugLevel = *o.DebugLevel
		}
		fDebugLevel := frDebugLevel
		if fDebugLevel != "" {
			if err := r.SetFormParam("debug_level", fDebugLevel); err != nil {
				return err
			}
		}

	}

	// form param end_ip_address
	frEndIPAddress := o.EndIPAddress
	fEndIPAddress := frEndIPAddress
	if fEndIPAddress != "" {
		if err := r.SetFormParam("end_ip_address", fEndIPAddress); err != nil {
			return err
		}
	}

	if o.ExcludeServers != nil {

		// form param exclude_servers
		var frExcludeServers string
		if o.ExcludeServers != nil {
			frExcludeServers = *o.ExcludeServers
		}
		fExcludeServers := frExcludeServers
		if fExcludeServers != "" {
			if err := r.SetFormParam("exclude_servers", fExcludeServers); err != nil {
				return err
			}
		}

	}

	if o.FollowChain != nil {

		// form param follow_chain
		var frFollowChain string
		if o.FollowChain != nil {
			frFollowChain = *o.FollowChain
		}
		fFollowChain := frFollowChain
		if fFollowChain != "" {
			if err := r.SetFormParam("follow_chain", fFollowChain); err != nil {
				return err
			}
		}

	}

	// form param name
	frName := o.Name
	fName := frName
	if fName != "" {
		if err := r.SetFormParam("name", fName); err != nil {
			return err
		}
	}

	if o.Ports != nil {

		// form param ports
		var frPorts string
		if o.Ports != nil {
			frPorts = *o.Ports
		}
		fPorts := frPorts
		if fPorts != "" {
			if err := r.SetFormParam("ports", fPorts); err != nil {
				return err
			}
		}

	}

	if o.ScheduleDays != nil {

		// form param schedule_days
		var frScheduleDays string
		if o.ScheduleDays != nil {
			frScheduleDays = *o.ScheduleDays
		}
		fScheduleDays := frScheduleDays
		if fScheduleDays != "" {
			if err := r.SetFormParam("schedule_days", fScheduleDays); err != nil {
				return err
			}
		}

	}

	if o.ScheduleTime != nil {

		// form param schedule_time
		var frScheduleTime string
		if o.ScheduleTime != nil {
			frScheduleTime = *o.ScheduleTime
		}
		fScheduleTime := frScheduleTime
		if fScheduleTime != "" {
			if err := r.SetFormParam("schedule_time", fScheduleTime); err != nil {
				return err
			}
		}

	}

	if o.Server != nil {

		// form param server
		var frServer string
		if o.Server != nil {
			frServer = *o.Server
		}
		fServer := frServer
		if fServer != "" {
			if err := r.SetFormParam("server", fServer); err != nil {
				return err
			}
		}

	}

	// form param start_ip_address
	frStartIPAddress := o.StartIPAddress
	fStartIPAddress := frStartIPAddress
	if fStartIPAddress != "" {
		if err := r.SetFormParam("start_ip_address", fStartIPAddress); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
