// Code generated by go-swagger; DO NOT EDIT.

package rooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new rooms API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for rooms API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAssetsRoom(params *DeleteAssetsRoomParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteAssetsRoomOK, error)

	DeleteDeviceRoom(params *DeleteDeviceRoomParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteDeviceRoomOK, error)

	DeleteRoomsID(params *DeleteRoomsIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteRoomsIDOK, error)

	GetRooms(params *GetRoomsParams, authInfo runtime.ClientAuthInfoWriter) (*GetRoomsOK, error)

	GetRoomsID(params *GetRoomsIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetRoomsIDOK, error)

	PostAssetsRoom(params *PostAssetsRoomParams, authInfo runtime.ClientAuthInfoWriter) (*PostAssetsRoomOK, error)

	PostDeviceRoom(params *PostDeviceRoomParams, authInfo runtime.ClientAuthInfoWriter) (*PostDeviceRoomOK, error)

	PostRooms(params *PostRoomsParams, authInfo runtime.ClientAuthInfoWriter) (*PostRoomsOK, error)

	PutCustomFieldsRoom(params *PutCustomFieldsRoomParams, authInfo runtime.ClientAuthInfoWriter) (*PutCustomFieldsRoomOK, error)

	PutRoomsID(params *PutRoomsIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutRoomsIDOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAssetsRoom deletes an asset from its room

  This API is used to delete the asset with the asset id supplied as the required argument from its room.
*/
func (a *Client) DeleteAssetsRoom(params *DeleteAssetsRoomParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteAssetsRoomOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAssetsRoomParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAssetsRoom",
		Method:             "DELETE",
		PathPattern:        "/api/1.0/assets/room/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteAssetsRoomReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAssetsRoomOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAssetsRoom: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteDeviceRoom deletes device from its room

  This API is used to delete the device from its room with the device id supplied as the required argument.
*/
func (a *Client) DeleteDeviceRoom(params *DeleteDeviceRoomParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteDeviceRoomOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteDeviceRoomParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteDeviceRoom",
		Method:             "DELETE",
		PathPattern:        "/api/1.0/device/room/{ID}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteDeviceRoomReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteDeviceRoomOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteDeviceRoom: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteRoomsID deletes room

  This API is used to delete the room with the room id supplied as the required argument.
*/
func (a *Client) DeleteRoomsID(params *DeleteRoomsIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteRoomsIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteRoomsIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteRoomsID",
		Method:             "DELETE",
		PathPattern:        "/api/1.0/rooms/{ID}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteRoomsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteRoomsIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteRoomsID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRooms retrieves information about all rooms

  Get All Rooms
*/
func (a *Client) GetRooms(params *GetRoomsParams, authInfo runtime.ClientAuthInfoWriter) (*GetRoomsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRoomsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRooms",
		Method:             "GET",
		PathPattern:        "/api/1.0/rooms/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetRoomsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRoomsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRooms: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRoomsID gets a specific room

  Retrieve detailed information about a specific rooms includes racks, devices and objects directly related to that room.
*/
func (a *Client) GetRoomsID(params *GetRoomsIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetRoomsIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRoomsIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRoomsID",
		Method:             "GET",
		PathPattern:        "/api/1.0/rooms/{ID}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetRoomsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRoomsIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRoomsID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAssetsRoom adds an asset to a room

  Add asset to room
*/
func (a *Client) PostAssetsRoom(params *PostAssetsRoomParams, authInfo runtime.ClientAuthInfoWriter) (*PostAssetsRoomOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAssetsRoomParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "postAssetsRoom",
		Method:             "POST",
		PathPattern:        "/api/1.0/assets/room/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostAssetsRoomReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostAssetsRoomOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postAssetsRoom: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostDeviceRoom adds a device to a room

  Add device to room
*/
func (a *Client) PostDeviceRoom(params *PostDeviceRoomParams, authInfo runtime.ClientAuthInfoWriter) (*PostDeviceRoomOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostDeviceRoomParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "postDeviceRoom",
		Method:             "POST",
		PathPattern:        "/api/1.0/device/room/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostDeviceRoomReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostDeviceRoomOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postDeviceRoom: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostRooms creates or update a room

  Create or update a Room. Required parameters: <ul><li>name</li> <li>building_id <b>OR</b> building</li>
*/
func (a *Client) PostRooms(params *PostRoomsParams, authInfo runtime.ClientAuthInfoWriter) (*PostRoomsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostRoomsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "postRooms",
		Method:             "POST",
		PathPattern:        "/api/1.0/rooms/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostRoomsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostRoomsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postRooms: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutCustomFieldsRoom creates update custom fields for rooms

  Create or update custom fields for rooms. "ID" or "name" of room is needed even when value is not being changed.
*/
func (a *Client) PutCustomFieldsRoom(params *PutCustomFieldsRoomParams, authInfo runtime.ClientAuthInfoWriter) (*PutCustomFieldsRoomOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutCustomFieldsRoomParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "putCustom_fieldsRoom",
		Method:             "PUT",
		PathPattern:        "/api/1.0/custom_fields/room/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PutCustomFieldsRoomReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutCustomFieldsRoomOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for putCustom_fieldsRoom: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutRoomsID updates information about an existing room

  Update a Room
*/
func (a *Client) PutRoomsID(params *PutRoomsIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutRoomsIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutRoomsIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "putRoomsID",
		Method:             "PUT",
		PathPattern:        "/api/1.0/rooms/{ID}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PutRoomsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutRoomsIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for putRoomsID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
