// Code generated by go-swagger; DO NOT EDIT.

package rooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRoomsParams creates a new GetRoomsParams object
// with the default values initialized.
func NewGetRoomsParams() *GetRoomsParams {
	var ()
	return &GetRoomsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRoomsParamsWithTimeout creates a new GetRoomsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRoomsParamsWithTimeout(timeout time.Duration) *GetRoomsParams {
	var ()
	return &GetRoomsParams{

		timeout: timeout,
	}
}

// NewGetRoomsParamsWithContext creates a new GetRoomsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRoomsParamsWithContext(ctx context.Context) *GetRoomsParams {
	var ()
	return &GetRoomsParams{

		Context: ctx,
	}
}

// NewGetRoomsParamsWithHTTPClient creates a new GetRoomsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRoomsParamsWithHTTPClient(client *http.Client) *GetRoomsParams {
	var ()
	return &GetRoomsParams{
		HTTPClient: client,
	}
}

/*GetRoomsParams contains all the parameters to send to the API endpoint
for the get rooms operation typically these are written to a http.Request
*/
type GetRoomsParams struct {

	/*Building
	  filter by building name

	*/
	Building *string
	/*BuildingID
	  filter by building ID (Added in v5.9.0)

	*/
	BuildingID *string
	/*Name
	  filter by name (Added in v6.0.0)

	*/
	Name *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get rooms params
func (o *GetRoomsParams) WithTimeout(timeout time.Duration) *GetRoomsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get rooms params
func (o *GetRoomsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get rooms params
func (o *GetRoomsParams) WithContext(ctx context.Context) *GetRoomsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get rooms params
func (o *GetRoomsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get rooms params
func (o *GetRoomsParams) WithHTTPClient(client *http.Client) *GetRoomsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get rooms params
func (o *GetRoomsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBuilding adds the building to the get rooms params
func (o *GetRoomsParams) WithBuilding(building *string) *GetRoomsParams {
	o.SetBuilding(building)
	return o
}

// SetBuilding adds the building to the get rooms params
func (o *GetRoomsParams) SetBuilding(building *string) {
	o.Building = building
}

// WithBuildingID adds the buildingID to the get rooms params
func (o *GetRoomsParams) WithBuildingID(buildingID *string) *GetRoomsParams {
	o.SetBuildingID(buildingID)
	return o
}

// SetBuildingID adds the buildingId to the get rooms params
func (o *GetRoomsParams) SetBuildingID(buildingID *string) {
	o.BuildingID = buildingID
}

// WithName adds the name to the get rooms params
func (o *GetRoomsParams) WithName(name *string) *GetRoomsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get rooms params
func (o *GetRoomsParams) SetName(name *string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *GetRoomsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Building != nil {

		// query param building
		var qrBuilding string
		if o.Building != nil {
			qrBuilding = *o.Building
		}
		qBuilding := qrBuilding
		if qBuilding != "" {
			if err := r.SetQueryParam("building", qBuilding); err != nil {
				return err
			}
		}

	}

	if o.BuildingID != nil {

		// query param building_id
		var qrBuildingID string
		if o.BuildingID != nil {
			qrBuildingID = *o.BuildingID
		}
		qBuildingID := qrBuildingID
		if qBuildingID != "" {
			if err := r.SetQueryParam("building_id", qBuildingID); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
