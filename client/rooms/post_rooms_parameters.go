// Code generated by go-swagger; DO NOT EDIT.

package rooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostRoomsParams creates a new PostRoomsParams object
// with the default values initialized.
func NewPostRoomsParams() *PostRoomsParams {
	var ()
	return &PostRoomsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostRoomsParamsWithTimeout creates a new PostRoomsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostRoomsParamsWithTimeout(timeout time.Duration) *PostRoomsParams {
	var ()
	return &PostRoomsParams{

		timeout: timeout,
	}
}

// NewPostRoomsParamsWithContext creates a new PostRoomsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostRoomsParamsWithContext(ctx context.Context) *PostRoomsParams {
	var ()
	return &PostRoomsParams{

		Context: ctx,
	}
}

// NewPostRoomsParamsWithHTTPClient creates a new PostRoomsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostRoomsParamsWithHTTPClient(client *http.Client) *PostRoomsParams {
	var ()
	return &PostRoomsParams{
		HTTPClient: client,
	}
}

/*PostRoomsParams contains all the parameters to send to the API endpoint
for the post rooms operation typically these are written to a http.Request
*/
type PostRoomsParams struct {

	/*Building
	  Existing building name

	*/
	Building *string
	/*BuildingID
	  Existing building ID

	*/
	BuildingID *string
	/*GridCols
	  number of columns in the room grid

	*/
	GridCols *string
	/*GridRows
	  number of rows in the room grid

	*/
	GridRows *string
	/*Groups
	  If multitenancy is on, admin groups that have access to this object are specified here, e.g. Prod_East:no,Corp:yes specifies that the admin groups for this object are Prod_East with view only permission and Corp with change permission. If this parameter is present with no value, all groups are deleted.

	*/
	Groups *string
	/*Height
	  room height

	*/
	Height *string
	/*HorizontalGridNumbering
	  numeric by default

	*/
	HorizontalGridNumbering *string
	/*HorizontalGridStart*/
	HorizontalGridStart *string
	/*Name
	  Name of room

	*/
	Name string
	/*Notes
	  Any additional notes

	*/
	Notes *string
	/*RaisedFloor*/
	RaisedFloor *string
	/*RaisedFloorHeight
	  height of raised floor

	*/
	RaisedFloorHeight *string
	/*ReverseXaxis
	  'yes' reverses the numbering order on the x-axis

	*/
	ReverseXaxis *string
	/*ReverseYaxis
	  'yes' reverses the numbering order on the y-axis

	*/
	ReverseYaxis *string
	/*Uom
	  unit of measurement (meters or inches)

	*/
	Uom *string
	/*VerticalGridNumbering
	  numeric by default

	*/
	VerticalGridNumbering *string
	/*VerticalGridStart*/
	VerticalGridStart *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post rooms params
func (o *PostRoomsParams) WithTimeout(timeout time.Duration) *PostRoomsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post rooms params
func (o *PostRoomsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post rooms params
func (o *PostRoomsParams) WithContext(ctx context.Context) *PostRoomsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post rooms params
func (o *PostRoomsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post rooms params
func (o *PostRoomsParams) WithHTTPClient(client *http.Client) *PostRoomsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post rooms params
func (o *PostRoomsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBuilding adds the building to the post rooms params
func (o *PostRoomsParams) WithBuilding(building *string) *PostRoomsParams {
	o.SetBuilding(building)
	return o
}

// SetBuilding adds the building to the post rooms params
func (o *PostRoomsParams) SetBuilding(building *string) {
	o.Building = building
}

// WithBuildingID adds the buildingID to the post rooms params
func (o *PostRoomsParams) WithBuildingID(buildingID *string) *PostRoomsParams {
	o.SetBuildingID(buildingID)
	return o
}

// SetBuildingID adds the buildingId to the post rooms params
func (o *PostRoomsParams) SetBuildingID(buildingID *string) {
	o.BuildingID = buildingID
}

// WithGridCols adds the gridCols to the post rooms params
func (o *PostRoomsParams) WithGridCols(gridCols *string) *PostRoomsParams {
	o.SetGridCols(gridCols)
	return o
}

// SetGridCols adds the gridCols to the post rooms params
func (o *PostRoomsParams) SetGridCols(gridCols *string) {
	o.GridCols = gridCols
}

// WithGridRows adds the gridRows to the post rooms params
func (o *PostRoomsParams) WithGridRows(gridRows *string) *PostRoomsParams {
	o.SetGridRows(gridRows)
	return o
}

// SetGridRows adds the gridRows to the post rooms params
func (o *PostRoomsParams) SetGridRows(gridRows *string) {
	o.GridRows = gridRows
}

// WithGroups adds the groups to the post rooms params
func (o *PostRoomsParams) WithGroups(groups *string) *PostRoomsParams {
	o.SetGroups(groups)
	return o
}

// SetGroups adds the groups to the post rooms params
func (o *PostRoomsParams) SetGroups(groups *string) {
	o.Groups = groups
}

// WithHeight adds the height to the post rooms params
func (o *PostRoomsParams) WithHeight(height *string) *PostRoomsParams {
	o.SetHeight(height)
	return o
}

// SetHeight adds the height to the post rooms params
func (o *PostRoomsParams) SetHeight(height *string) {
	o.Height = height
}

// WithHorizontalGridNumbering adds the horizontalGridNumbering to the post rooms params
func (o *PostRoomsParams) WithHorizontalGridNumbering(horizontalGridNumbering *string) *PostRoomsParams {
	o.SetHorizontalGridNumbering(horizontalGridNumbering)
	return o
}

// SetHorizontalGridNumbering adds the horizontalGridNumbering to the post rooms params
func (o *PostRoomsParams) SetHorizontalGridNumbering(horizontalGridNumbering *string) {
	o.HorizontalGridNumbering = horizontalGridNumbering
}

// WithHorizontalGridStart adds the horizontalGridStart to the post rooms params
func (o *PostRoomsParams) WithHorizontalGridStart(horizontalGridStart *string) *PostRoomsParams {
	o.SetHorizontalGridStart(horizontalGridStart)
	return o
}

// SetHorizontalGridStart adds the horizontalGridStart to the post rooms params
func (o *PostRoomsParams) SetHorizontalGridStart(horizontalGridStart *string) {
	o.HorizontalGridStart = horizontalGridStart
}

// WithName adds the name to the post rooms params
func (o *PostRoomsParams) WithName(name string) *PostRoomsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post rooms params
func (o *PostRoomsParams) SetName(name string) {
	o.Name = name
}

// WithNotes adds the notes to the post rooms params
func (o *PostRoomsParams) WithNotes(notes *string) *PostRoomsParams {
	o.SetNotes(notes)
	return o
}

// SetNotes adds the notes to the post rooms params
func (o *PostRoomsParams) SetNotes(notes *string) {
	o.Notes = notes
}

// WithRaisedFloor adds the raisedFloor to the post rooms params
func (o *PostRoomsParams) WithRaisedFloor(raisedFloor *string) *PostRoomsParams {
	o.SetRaisedFloor(raisedFloor)
	return o
}

// SetRaisedFloor adds the raisedFloor to the post rooms params
func (o *PostRoomsParams) SetRaisedFloor(raisedFloor *string) {
	o.RaisedFloor = raisedFloor
}

// WithRaisedFloorHeight adds the raisedFloorHeight to the post rooms params
func (o *PostRoomsParams) WithRaisedFloorHeight(raisedFloorHeight *string) *PostRoomsParams {
	o.SetRaisedFloorHeight(raisedFloorHeight)
	return o
}

// SetRaisedFloorHeight adds the raisedFloorHeight to the post rooms params
func (o *PostRoomsParams) SetRaisedFloorHeight(raisedFloorHeight *string) {
	o.RaisedFloorHeight = raisedFloorHeight
}

// WithReverseXaxis adds the reverseXaxis to the post rooms params
func (o *PostRoomsParams) WithReverseXaxis(reverseXaxis *string) *PostRoomsParams {
	o.SetReverseXaxis(reverseXaxis)
	return o
}

// SetReverseXaxis adds the reverseXaxis to the post rooms params
func (o *PostRoomsParams) SetReverseXaxis(reverseXaxis *string) {
	o.ReverseXaxis = reverseXaxis
}

// WithReverseYaxis adds the reverseYaxis to the post rooms params
func (o *PostRoomsParams) WithReverseYaxis(reverseYaxis *string) *PostRoomsParams {
	o.SetReverseYaxis(reverseYaxis)
	return o
}

// SetReverseYaxis adds the reverseYaxis to the post rooms params
func (o *PostRoomsParams) SetReverseYaxis(reverseYaxis *string) {
	o.ReverseYaxis = reverseYaxis
}

// WithUom adds the uom to the post rooms params
func (o *PostRoomsParams) WithUom(uom *string) *PostRoomsParams {
	o.SetUom(uom)
	return o
}

// SetUom adds the uom to the post rooms params
func (o *PostRoomsParams) SetUom(uom *string) {
	o.Uom = uom
}

// WithVerticalGridNumbering adds the verticalGridNumbering to the post rooms params
func (o *PostRoomsParams) WithVerticalGridNumbering(verticalGridNumbering *string) *PostRoomsParams {
	o.SetVerticalGridNumbering(verticalGridNumbering)
	return o
}

// SetVerticalGridNumbering adds the verticalGridNumbering to the post rooms params
func (o *PostRoomsParams) SetVerticalGridNumbering(verticalGridNumbering *string) {
	o.VerticalGridNumbering = verticalGridNumbering
}

// WithVerticalGridStart adds the verticalGridStart to the post rooms params
func (o *PostRoomsParams) WithVerticalGridStart(verticalGridStart *string) *PostRoomsParams {
	o.SetVerticalGridStart(verticalGridStart)
	return o
}

// SetVerticalGridStart adds the verticalGridStart to the post rooms params
func (o *PostRoomsParams) SetVerticalGridStart(verticalGridStart *string) {
	o.VerticalGridStart = verticalGridStart
}

// WriteToRequest writes these params to a swagger request
func (o *PostRoomsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Building != nil {

		// form param building
		var frBuilding string
		if o.Building != nil {
			frBuilding = *o.Building
		}
		fBuilding := frBuilding
		if fBuilding != "" {
			if err := r.SetFormParam("building", fBuilding); err != nil {
				return err
			}
		}

	}

	if o.BuildingID != nil {

		// form param building_id
		var frBuildingID string
		if o.BuildingID != nil {
			frBuildingID = *o.BuildingID
		}
		fBuildingID := frBuildingID
		if fBuildingID != "" {
			if err := r.SetFormParam("building_id", fBuildingID); err != nil {
				return err
			}
		}

	}

	if o.GridCols != nil {

		// form param grid_cols
		var frGridCols string
		if o.GridCols != nil {
			frGridCols = *o.GridCols
		}
		fGridCols := frGridCols
		if fGridCols != "" {
			if err := r.SetFormParam("grid_cols", fGridCols); err != nil {
				return err
			}
		}

	}

	if o.GridRows != nil {

		// form param grid_rows
		var frGridRows string
		if o.GridRows != nil {
			frGridRows = *o.GridRows
		}
		fGridRows := frGridRows
		if fGridRows != "" {
			if err := r.SetFormParam("grid_rows", fGridRows); err != nil {
				return err
			}
		}

	}

	if o.Groups != nil {

		// form param groups
		var frGroups string
		if o.Groups != nil {
			frGroups = *o.Groups
		}
		fGroups := frGroups
		if fGroups != "" {
			if err := r.SetFormParam("groups", fGroups); err != nil {
				return err
			}
		}

	}

	if o.Height != nil {

		// form param height
		var frHeight string
		if o.Height != nil {
			frHeight = *o.Height
		}
		fHeight := frHeight
		if fHeight != "" {
			if err := r.SetFormParam("height", fHeight); err != nil {
				return err
			}
		}

	}

	if o.HorizontalGridNumbering != nil {

		// form param horizontal_grid_numbering
		var frHorizontalGridNumbering string
		if o.HorizontalGridNumbering != nil {
			frHorizontalGridNumbering = *o.HorizontalGridNumbering
		}
		fHorizontalGridNumbering := frHorizontalGridNumbering
		if fHorizontalGridNumbering != "" {
			if err := r.SetFormParam("horizontal_grid_numbering", fHorizontalGridNumbering); err != nil {
				return err
			}
		}

	}

	if o.HorizontalGridStart != nil {

		// form param horizontal_grid_start
		var frHorizontalGridStart string
		if o.HorizontalGridStart != nil {
			frHorizontalGridStart = *o.HorizontalGridStart
		}
		fHorizontalGridStart := frHorizontalGridStart
		if fHorizontalGridStart != "" {
			if err := r.SetFormParam("horizontal_grid_start", fHorizontalGridStart); err != nil {
				return err
			}
		}

	}

	// form param name
	frName := o.Name
	fName := frName
	if fName != "" {
		if err := r.SetFormParam("name", fName); err != nil {
			return err
		}
	}

	if o.Notes != nil {

		// form param notes
		var frNotes string
		if o.Notes != nil {
			frNotes = *o.Notes
		}
		fNotes := frNotes
		if fNotes != "" {
			if err := r.SetFormParam("notes", fNotes); err != nil {
				return err
			}
		}

	}

	if o.RaisedFloor != nil {

		// form param raised_floor
		var frRaisedFloor string
		if o.RaisedFloor != nil {
			frRaisedFloor = *o.RaisedFloor
		}
		fRaisedFloor := frRaisedFloor
		if fRaisedFloor != "" {
			if err := r.SetFormParam("raised_floor", fRaisedFloor); err != nil {
				return err
			}
		}

	}

	if o.RaisedFloorHeight != nil {

		// form param raised_floor_height
		var frRaisedFloorHeight string
		if o.RaisedFloorHeight != nil {
			frRaisedFloorHeight = *o.RaisedFloorHeight
		}
		fRaisedFloorHeight := frRaisedFloorHeight
		if fRaisedFloorHeight != "" {
			if err := r.SetFormParam("raised_floor_height", fRaisedFloorHeight); err != nil {
				return err
			}
		}

	}

	if o.ReverseXaxis != nil {

		// form param reverse_xaxis
		var frReverseXaxis string
		if o.ReverseXaxis != nil {
			frReverseXaxis = *o.ReverseXaxis
		}
		fReverseXaxis := frReverseXaxis
		if fReverseXaxis != "" {
			if err := r.SetFormParam("reverse_xaxis", fReverseXaxis); err != nil {
				return err
			}
		}

	}

	if o.ReverseYaxis != nil {

		// form param reverse_yaxis
		var frReverseYaxis string
		if o.ReverseYaxis != nil {
			frReverseYaxis = *o.ReverseYaxis
		}
		fReverseYaxis := frReverseYaxis
		if fReverseYaxis != "" {
			if err := r.SetFormParam("reverse_yaxis", fReverseYaxis); err != nil {
				return err
			}
		}

	}

	if o.Uom != nil {

		// form param uom
		var frUom string
		if o.Uom != nil {
			frUom = *o.Uom
		}
		fUom := frUom
		if fUom != "" {
			if err := r.SetFormParam("uom", fUom); err != nil {
				return err
			}
		}

	}

	if o.VerticalGridNumbering != nil {

		// form param vertical_grid_numbering
		var frVerticalGridNumbering string
		if o.VerticalGridNumbering != nil {
			frVerticalGridNumbering = *o.VerticalGridNumbering
		}
		fVerticalGridNumbering := frVerticalGridNumbering
		if fVerticalGridNumbering != "" {
			if err := r.SetFormParam("vertical_grid_numbering", fVerticalGridNumbering); err != nil {
				return err
			}
		}

	}

	if o.VerticalGridStart != nil {

		// form param vertical_grid_start
		var frVerticalGridStart string
		if o.VerticalGridStart != nil {
			frVerticalGridStart = *o.VerticalGridStart
		}
		fVerticalGridStart := frVerticalGridStart
		if fVerticalGridStart != "" {
			if err := r.SetFormParam("vertical_grid_start", fVerticalGridStart); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
