// Code generated by go-swagger; DO NOT EDIT.

package get_all_tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetTagsReader is a Reader for the GetTags structure.
type GetTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTagsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetTagsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetTagsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetTagsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTagsOK creates a GetTagsOK with default headers values
func NewGetTagsOK() *GetTagsOK {
	return &GetTagsOK{}
}

/*GetTagsOK handles this case with default header values.

The above command returns results like this:
*/
type GetTagsOK struct {
	Payload *GetTagsOKBody
}

func (o *GetTagsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsOK  %+v", 200, o.Payload)
}

func (o *GetTagsOK) GetPayload() *GetTagsOKBody {
	return o.Payload
}

func (o *GetTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTagsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsBadRequest creates a GetTagsBadRequest with default headers values
func NewGetTagsBadRequest() *GetTagsBadRequest {
	return &GetTagsBadRequest{}
}

/*GetTagsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetTagsBadRequest struct {
}

func (o *GetTagsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsBadRequest ", 400)
}

func (o *GetTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsUnauthorized creates a GetTagsUnauthorized with default headers values
func NewGetTagsUnauthorized() *GetTagsUnauthorized {
	return &GetTagsUnauthorized{}
}

/*GetTagsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetTagsUnauthorized struct {
}

func (o *GetTagsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsUnauthorized ", 401)
}

func (o *GetTagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsForbidden creates a GetTagsForbidden with default headers values
func NewGetTagsForbidden() *GetTagsForbidden {
	return &GetTagsForbidden{}
}

/*GetTagsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetTagsForbidden struct {
}

func (o *GetTagsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsForbidden ", 403)
}

func (o *GetTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsNotFound creates a GetTagsNotFound with default headers values
func NewGetTagsNotFound() *GetTagsNotFound {
	return &GetTagsNotFound{}
}

/*GetTagsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetTagsNotFound struct {
}

func (o *GetTagsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsNotFound ", 404)
}

func (o *GetTagsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsMethodNotAllowed creates a GetTagsMethodNotAllowed with default headers values
func NewGetTagsMethodNotAllowed() *GetTagsMethodNotAllowed {
	return &GetTagsMethodNotAllowed{}
}

/*GetTagsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetTagsMethodNotAllowed struct {
}

func (o *GetTagsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsMethodNotAllowed ", 405)
}

func (o *GetTagsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsGone creates a GetTagsGone with default headers values
func NewGetTagsGone() *GetTagsGone {
	return &GetTagsGone{}
}

/*GetTagsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetTagsGone struct {
}

func (o *GetTagsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsGone ", 410)
}

func (o *GetTagsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsInternalServerError creates a GetTagsInternalServerError with default headers values
func NewGetTagsInternalServerError() *GetTagsInternalServerError {
	return &GetTagsInternalServerError{}
}

/*GetTagsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetTagsInternalServerError struct {
}

func (o *GetTagsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsInternalServerError ", 500)
}

func (o *GetTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsServiceUnavailable creates a GetTagsServiceUnavailable with default headers values
func NewGetTagsServiceUnavailable() *GetTagsServiceUnavailable {
	return &GetTagsServiceUnavailable{}
}

/*GetTagsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetTagsServiceUnavailable struct {
}

func (o *GetTagsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/tags/][%d] getTagsServiceUnavailable ", 503)
}

func (o *GetTagsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetTagsOKBody get tags o k body
swagger:model GetTagsOKBody
*/
type GetTagsOKBody struct {

	// limit
	Limit interface{} `json:"limit,omitempty"`

	// offset
	Offset interface{} `json:"offset,omitempty"`

	// tags
	Tags []*TagsItems0 `json:"tags"`

	// total count
	TotalCount interface{} `json:"total_count,omitempty"`
}

// Validate validates this get tags o k body
func (o *GetTagsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTags(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTagsOKBody) validateTags(formats strfmt.Registry) error {

	if swag.IsZero(o.Tags) { // not required
		return nil
	}

	for i := 0; i < len(o.Tags); i++ {
		if swag.IsZero(o.Tags[i]) { // not required
			continue
		}

		if o.Tags[i] != nil {
			if err := o.Tags[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getTagsOK" + "." + "tags" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTagsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTagsOKBody) UnmarshalBinary(b []byte) error {
	var res GetTagsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*TagsItems0 tags items0
swagger:model TagsItems0
*/
type TagsItems0 struct {

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this tags items0
func (o *TagsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *TagsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *TagsItems0) UnmarshalBinary(b []byte) error {
	var res TagsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
