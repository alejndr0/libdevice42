// Code generated by go-swagger; DO NOT EDIT.

package power_circuits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostUpdatePowerCircuitsParams creates a new PostUpdatePowerCircuitsParams object
// with the default values initialized.
func NewPostUpdatePowerCircuitsParams() *PostUpdatePowerCircuitsParams {
	var ()
	return &PostUpdatePowerCircuitsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostUpdatePowerCircuitsParamsWithTimeout creates a new PostUpdatePowerCircuitsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostUpdatePowerCircuitsParamsWithTimeout(timeout time.Duration) *PostUpdatePowerCircuitsParams {
	var ()
	return &PostUpdatePowerCircuitsParams{

		timeout: timeout,
	}
}

// NewPostUpdatePowerCircuitsParamsWithContext creates a new PostUpdatePowerCircuitsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostUpdatePowerCircuitsParamsWithContext(ctx context.Context) *PostUpdatePowerCircuitsParams {
	var ()
	return &PostUpdatePowerCircuitsParams{

		Context: ctx,
	}
}

// NewPostUpdatePowerCircuitsParamsWithHTTPClient creates a new PostUpdatePowerCircuitsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostUpdatePowerCircuitsParamsWithHTTPClient(client *http.Client) *PostUpdatePowerCircuitsParams {
	var ()
	return &PostUpdatePowerCircuitsParams{
		HTTPClient: client,
	}
}

/*PostUpdatePowerCircuitsParams contains all the parameters to send to the API endpoint
for the post update power circuits operation typically these are written to a http.Request
*/
type PostUpdatePowerCircuitsParams struct {

	/*Amps
	  The rated amps on this circuit

	*/
	Amps *string
	/*AssetConnectionIds
	  A comma-separated list of asset IDs connected to this circuit

	*/
	AssetConnectionIds *string
	/*BreakerpanelID
	  Breaker panel ID

	*/
	BreakerpanelID string
	/*Connection
	  Description of the connection for the circuit

	*/
	Connection *string
	/*DeviceConnectionIds
	  A comma-separated list of device IDs connected to this circuit

	*/
	DeviceConnectionIds *string
	/*DeviceConnectionNames
	  A comma-separated list of device names connected to this circuit

	*/
	DeviceConnectionNames *string
	/*Label
	  Label of the circuit on the breaker panel

	*/
	Label *string
	/*Number
	  Number of the circuit on the breaker panel

	*/
	Number string
	/*PowerunitConnectionIds
	  A comma-separated list of PU IDs connected to this circuit

	*/
	PowerunitConnectionIds *string
	/*Voltage
	  The rated voltage on this circuit

	*/
	Voltage *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithTimeout(timeout time.Duration) *PostUpdatePowerCircuitsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithContext(ctx context.Context) *PostUpdatePowerCircuitsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithHTTPClient(client *http.Client) *PostUpdatePowerCircuitsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAmps adds the amps to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithAmps(amps *string) *PostUpdatePowerCircuitsParams {
	o.SetAmps(amps)
	return o
}

// SetAmps adds the amps to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetAmps(amps *string) {
	o.Amps = amps
}

// WithAssetConnectionIds adds the assetConnectionIds to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithAssetConnectionIds(assetConnectionIds *string) *PostUpdatePowerCircuitsParams {
	o.SetAssetConnectionIds(assetConnectionIds)
	return o
}

// SetAssetConnectionIds adds the assetConnectionIds to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetAssetConnectionIds(assetConnectionIds *string) {
	o.AssetConnectionIds = assetConnectionIds
}

// WithBreakerpanelID adds the breakerpanelID to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithBreakerpanelID(breakerpanelID string) *PostUpdatePowerCircuitsParams {
	o.SetBreakerpanelID(breakerpanelID)
	return o
}

// SetBreakerpanelID adds the breakerpanelId to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetBreakerpanelID(breakerpanelID string) {
	o.BreakerpanelID = breakerpanelID
}

// WithConnection adds the connection to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithConnection(connection *string) *PostUpdatePowerCircuitsParams {
	o.SetConnection(connection)
	return o
}

// SetConnection adds the connection to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetConnection(connection *string) {
	o.Connection = connection
}

// WithDeviceConnectionIds adds the deviceConnectionIds to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithDeviceConnectionIds(deviceConnectionIds *string) *PostUpdatePowerCircuitsParams {
	o.SetDeviceConnectionIds(deviceConnectionIds)
	return o
}

// SetDeviceConnectionIds adds the deviceConnectionIds to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetDeviceConnectionIds(deviceConnectionIds *string) {
	o.DeviceConnectionIds = deviceConnectionIds
}

// WithDeviceConnectionNames adds the deviceConnectionNames to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithDeviceConnectionNames(deviceConnectionNames *string) *PostUpdatePowerCircuitsParams {
	o.SetDeviceConnectionNames(deviceConnectionNames)
	return o
}

// SetDeviceConnectionNames adds the deviceConnectionNames to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetDeviceConnectionNames(deviceConnectionNames *string) {
	o.DeviceConnectionNames = deviceConnectionNames
}

// WithLabel adds the label to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithLabel(label *string) *PostUpdatePowerCircuitsParams {
	o.SetLabel(label)
	return o
}

// SetLabel adds the label to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetLabel(label *string) {
	o.Label = label
}

// WithNumber adds the number to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithNumber(number string) *PostUpdatePowerCircuitsParams {
	o.SetNumber(number)
	return o
}

// SetNumber adds the number to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetNumber(number string) {
	o.Number = number
}

// WithPowerunitConnectionIds adds the powerunitConnectionIds to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithPowerunitConnectionIds(powerunitConnectionIds *string) *PostUpdatePowerCircuitsParams {
	o.SetPowerunitConnectionIds(powerunitConnectionIds)
	return o
}

// SetPowerunitConnectionIds adds the powerunitConnectionIds to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetPowerunitConnectionIds(powerunitConnectionIds *string) {
	o.PowerunitConnectionIds = powerunitConnectionIds
}

// WithVoltage adds the voltage to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) WithVoltage(voltage *string) *PostUpdatePowerCircuitsParams {
	o.SetVoltage(voltage)
	return o
}

// SetVoltage adds the voltage to the post update power circuits params
func (o *PostUpdatePowerCircuitsParams) SetVoltage(voltage *string) {
	o.Voltage = voltage
}

// WriteToRequest writes these params to a swagger request
func (o *PostUpdatePowerCircuitsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Amps != nil {

		// form param amps
		var frAmps string
		if o.Amps != nil {
			frAmps = *o.Amps
		}
		fAmps := frAmps
		if fAmps != "" {
			if err := r.SetFormParam("amps", fAmps); err != nil {
				return err
			}
		}

	}

	if o.AssetConnectionIds != nil {

		// form param asset_connection_ids
		var frAssetConnectionIds string
		if o.AssetConnectionIds != nil {
			frAssetConnectionIds = *o.AssetConnectionIds
		}
		fAssetConnectionIds := frAssetConnectionIds
		if fAssetConnectionIds != "" {
			if err := r.SetFormParam("asset_connection_ids", fAssetConnectionIds); err != nil {
				return err
			}
		}

	}

	// form param breakerpanel_id
	frBreakerpanelID := o.BreakerpanelID
	fBreakerpanelID := frBreakerpanelID
	if fBreakerpanelID != "" {
		if err := r.SetFormParam("breakerpanel_id", fBreakerpanelID); err != nil {
			return err
		}
	}

	if o.Connection != nil {

		// form param connection
		var frConnection string
		if o.Connection != nil {
			frConnection = *o.Connection
		}
		fConnection := frConnection
		if fConnection != "" {
			if err := r.SetFormParam("connection", fConnection); err != nil {
				return err
			}
		}

	}

	if o.DeviceConnectionIds != nil {

		// form param device_connection_ids
		var frDeviceConnectionIds string
		if o.DeviceConnectionIds != nil {
			frDeviceConnectionIds = *o.DeviceConnectionIds
		}
		fDeviceConnectionIds := frDeviceConnectionIds
		if fDeviceConnectionIds != "" {
			if err := r.SetFormParam("device_connection_ids", fDeviceConnectionIds); err != nil {
				return err
			}
		}

	}

	if o.DeviceConnectionNames != nil {

		// form param device_connection_names
		var frDeviceConnectionNames string
		if o.DeviceConnectionNames != nil {
			frDeviceConnectionNames = *o.DeviceConnectionNames
		}
		fDeviceConnectionNames := frDeviceConnectionNames
		if fDeviceConnectionNames != "" {
			if err := r.SetFormParam("device_connection_names", fDeviceConnectionNames); err != nil {
				return err
			}
		}

	}

	if o.Label != nil {

		// form param label
		var frLabel string
		if o.Label != nil {
			frLabel = *o.Label
		}
		fLabel := frLabel
		if fLabel != "" {
			if err := r.SetFormParam("label", fLabel); err != nil {
				return err
			}
		}

	}

	// form param number
	frNumber := o.Number
	fNumber := frNumber
	if fNumber != "" {
		if err := r.SetFormParam("number", fNumber); err != nil {
			return err
		}
	}

	if o.PowerunitConnectionIds != nil {

		// form param powerunit_connection_ids
		var frPowerunitConnectionIds string
		if o.PowerunitConnectionIds != nil {
			frPowerunitConnectionIds = *o.PowerunitConnectionIds
		}
		fPowerunitConnectionIds := frPowerunitConnectionIds
		if fPowerunitConnectionIds != "" {
			if err := r.SetFormParam("powerunit_connection_ids", fPowerunitConnectionIds); err != nil {
				return err
			}
		}

	}

	if o.Voltage != nil {

		// form param voltage
		var frVoltage string
		if o.Voltage != nil {
			frVoltage = *o.Voltage
		}
		fVoltage := frVoltage
		if fVoltage != "" {
			if err := r.SetFormParam("voltage", fVoltage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
