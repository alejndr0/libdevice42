// Code generated by go-swagger; DO NOT EDIT.

package power_circuits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAllPowerCircuitsParams creates a new GetAllPowerCircuitsParams object
// with the default values initialized.
func NewGetAllPowerCircuitsParams() *GetAllPowerCircuitsParams {
	var ()
	return &GetAllPowerCircuitsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllPowerCircuitsParamsWithTimeout creates a new GetAllPowerCircuitsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAllPowerCircuitsParamsWithTimeout(timeout time.Duration) *GetAllPowerCircuitsParams {
	var ()
	return &GetAllPowerCircuitsParams{

		timeout: timeout,
	}
}

// NewGetAllPowerCircuitsParamsWithContext creates a new GetAllPowerCircuitsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAllPowerCircuitsParamsWithContext(ctx context.Context) *GetAllPowerCircuitsParams {
	var ()
	return &GetAllPowerCircuitsParams{

		Context: ctx,
	}
}

// NewGetAllPowerCircuitsParamsWithHTTPClient creates a new GetAllPowerCircuitsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAllPowerCircuitsParamsWithHTTPClient(client *http.Client) *GetAllPowerCircuitsParams {
	var ()
	return &GetAllPowerCircuitsParams{
		HTTPClient: client,
	}
}

/*GetAllPowerCircuitsParams contains all the parameters to send to the API endpoint
for the get all power circuits operation typically these are written to a http.Request
*/
type GetAllPowerCircuitsParams struct {

	/*BcpmID
	  Branch Circuit Power Meter ID

	*/
	BcpmID *string
	/*BreakerpanelID
	  Breaker panel ID

	*/
	BreakerpanelID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get all power circuits params
func (o *GetAllPowerCircuitsParams) WithTimeout(timeout time.Duration) *GetAllPowerCircuitsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all power circuits params
func (o *GetAllPowerCircuitsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all power circuits params
func (o *GetAllPowerCircuitsParams) WithContext(ctx context.Context) *GetAllPowerCircuitsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all power circuits params
func (o *GetAllPowerCircuitsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all power circuits params
func (o *GetAllPowerCircuitsParams) WithHTTPClient(client *http.Client) *GetAllPowerCircuitsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all power circuits params
func (o *GetAllPowerCircuitsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBcpmID adds the bcpmID to the get all power circuits params
func (o *GetAllPowerCircuitsParams) WithBcpmID(bcpmID *string) *GetAllPowerCircuitsParams {
	o.SetBcpmID(bcpmID)
	return o
}

// SetBcpmID adds the bcpmId to the get all power circuits params
func (o *GetAllPowerCircuitsParams) SetBcpmID(bcpmID *string) {
	o.BcpmID = bcpmID
}

// WithBreakerpanelID adds the breakerpanelID to the get all power circuits params
func (o *GetAllPowerCircuitsParams) WithBreakerpanelID(breakerpanelID *string) *GetAllPowerCircuitsParams {
	o.SetBreakerpanelID(breakerpanelID)
	return o
}

// SetBreakerpanelID adds the breakerpanelId to the get all power circuits params
func (o *GetAllPowerCircuitsParams) SetBreakerpanelID(breakerpanelID *string) {
	o.BreakerpanelID = breakerpanelID
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllPowerCircuitsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BcpmID != nil {

		// query param bcpm_id
		var qrBcpmID string
		if o.BcpmID != nil {
			qrBcpmID = *o.BcpmID
		}
		qBcpmID := qrBcpmID
		if qBcpmID != "" {
			if err := r.SetQueryParam("bcpm_id", qBcpmID); err != nil {
				return err
			}
		}

	}

	if o.BreakerpanelID != nil {

		// query param breakerpanel_id
		var qrBreakerpanelID string
		if o.BreakerpanelID != nil {
			qrBreakerpanelID = *o.BreakerpanelID
		}
		qBreakerpanelID := qrBreakerpanelID
		if qBreakerpanelID != "" {
			if err := r.SetQueryParam("breakerpanel_id", qBreakerpanelID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
