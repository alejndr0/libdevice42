// Code generated by go-swagger; DO NOT EDIT.

package racks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostRacksReader is a Reader for the PostRacks structure.
type PostRacksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRacksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRacksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRacksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRacksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRacksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRacksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostRacksMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostRacksGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRacksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRacksServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostRacksOK creates a PostRacksOK with default headers values
func NewPostRacksOK() *PostRacksOK {
	return &PostRacksOK{}
}

/*PostRacksOK handles this case with default header values.

The above command returns results like this:
*/
type PostRacksOK struct {
	Payload *PostRacksOKBody
}

func (o *PostRacksOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksOK  %+v", 200, o.Payload)
}

func (o *PostRacksOK) GetPayload() *PostRacksOKBody {
	return o.Payload
}

func (o *PostRacksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostRacksOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRacksBadRequest creates a PostRacksBadRequest with default headers values
func NewPostRacksBadRequest() *PostRacksBadRequest {
	return &PostRacksBadRequest{}
}

/*PostRacksBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostRacksBadRequest struct {
}

func (o *PostRacksBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksBadRequest ", 400)
}

func (o *PostRacksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRacksUnauthorized creates a PostRacksUnauthorized with default headers values
func NewPostRacksUnauthorized() *PostRacksUnauthorized {
	return &PostRacksUnauthorized{}
}

/*PostRacksUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostRacksUnauthorized struct {
}

func (o *PostRacksUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksUnauthorized ", 401)
}

func (o *PostRacksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRacksForbidden creates a PostRacksForbidden with default headers values
func NewPostRacksForbidden() *PostRacksForbidden {
	return &PostRacksForbidden{}
}

/*PostRacksForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostRacksForbidden struct {
}

func (o *PostRacksForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksForbidden ", 403)
}

func (o *PostRacksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRacksNotFound creates a PostRacksNotFound with default headers values
func NewPostRacksNotFound() *PostRacksNotFound {
	return &PostRacksNotFound{}
}

/*PostRacksNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostRacksNotFound struct {
}

func (o *PostRacksNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksNotFound ", 404)
}

func (o *PostRacksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRacksMethodNotAllowed creates a PostRacksMethodNotAllowed with default headers values
func NewPostRacksMethodNotAllowed() *PostRacksMethodNotAllowed {
	return &PostRacksMethodNotAllowed{}
}

/*PostRacksMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostRacksMethodNotAllowed struct {
}

func (o *PostRacksMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksMethodNotAllowed ", 405)
}

func (o *PostRacksMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRacksGone creates a PostRacksGone with default headers values
func NewPostRacksGone() *PostRacksGone {
	return &PostRacksGone{}
}

/*PostRacksGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostRacksGone struct {
}

func (o *PostRacksGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksGone ", 410)
}

func (o *PostRacksGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRacksInternalServerError creates a PostRacksInternalServerError with default headers values
func NewPostRacksInternalServerError() *PostRacksInternalServerError {
	return &PostRacksInternalServerError{}
}

/*PostRacksInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostRacksInternalServerError struct {
}

func (o *PostRacksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksInternalServerError ", 500)
}

func (o *PostRacksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRacksServiceUnavailable creates a PostRacksServiceUnavailable with default headers values
func NewPostRacksServiceUnavailable() *PostRacksServiceUnavailable {
	return &PostRacksServiceUnavailable{}
}

/*PostRacksServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostRacksServiceUnavailable struct {
}

func (o *PostRacksServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/racks/][%d] postRacksServiceUnavailable ", 503)
}

func (o *PostRacksServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostRacksOKBody post racks o k body
swagger:model PostRacksOKBody
*/
type PostRacksOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post racks o k body
func (o *PostRacksOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostRacksOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostRacksOKBody) UnmarshalBinary(b []byte) error {
	var res PostRacksOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
