// Code generated by go-swagger; DO NOT EDIT.

package racks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteRacksIDParams creates a new DeleteRacksIDParams object
// with the default values initialized.
func NewDeleteRacksIDParams() *DeleteRacksIDParams {
	var ()
	return &DeleteRacksIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteRacksIDParamsWithTimeout creates a new DeleteRacksIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteRacksIDParamsWithTimeout(timeout time.Duration) *DeleteRacksIDParams {
	var ()
	return &DeleteRacksIDParams{

		timeout: timeout,
	}
}

// NewDeleteRacksIDParamsWithContext creates a new DeleteRacksIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteRacksIDParamsWithContext(ctx context.Context) *DeleteRacksIDParams {
	var ()
	return &DeleteRacksIDParams{

		Context: ctx,
	}
}

// NewDeleteRacksIDParamsWithHTTPClient creates a new DeleteRacksIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteRacksIDParamsWithHTTPClient(client *http.Client) *DeleteRacksIDParams {
	var ()
	return &DeleteRacksIDParams{
		HTTPClient: client,
	}
}

/*DeleteRacksIDParams contains all the parameters to send to the API endpoint
for the delete racks ID operation typically these are written to a http.Request
*/
type DeleteRacksIDParams struct {

	/*ID
	  rack id

	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete racks ID params
func (o *DeleteRacksIDParams) WithTimeout(timeout time.Duration) *DeleteRacksIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete racks ID params
func (o *DeleteRacksIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete racks ID params
func (o *DeleteRacksIDParams) WithContext(ctx context.Context) *DeleteRacksIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete racks ID params
func (o *DeleteRacksIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete racks ID params
func (o *DeleteRacksIDParams) WithHTTPClient(client *http.Client) *DeleteRacksIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete racks ID params
func (o *DeleteRacksIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the delete racks ID params
func (o *DeleteRacksIDParams) WithID(id int64) *DeleteRacksIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete racks ID params
func (o *DeleteRacksIDParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteRacksIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param ID
	if err := r.SetPathParam("ID", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
