// Code generated by go-swagger; DO NOT EDIT.

package service_levels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetServiceLevelReader is a Reader for the GetServiceLevel structure.
type GetServiceLevelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceLevelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceLevelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServiceLevelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetServiceLevelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServiceLevelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServiceLevelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetServiceLevelMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetServiceLevelGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServiceLevelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetServiceLevelServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServiceLevelOK creates a GetServiceLevelOK with default headers values
func NewGetServiceLevelOK() *GetServiceLevelOK {
	return &GetServiceLevelOK{}
}

/*GetServiceLevelOK handles this case with default header values.

The above command returns results like this:
*/
type GetServiceLevelOK struct {
	Payload []*GetServiceLevelOKBodyItems0
}

func (o *GetServiceLevelOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelOK  %+v", 200, o.Payload)
}

func (o *GetServiceLevelOK) GetPayload() []*GetServiceLevelOKBodyItems0 {
	return o.Payload
}

func (o *GetServiceLevelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceLevelBadRequest creates a GetServiceLevelBadRequest with default headers values
func NewGetServiceLevelBadRequest() *GetServiceLevelBadRequest {
	return &GetServiceLevelBadRequest{}
}

/*GetServiceLevelBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetServiceLevelBadRequest struct {
}

func (o *GetServiceLevelBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelBadRequest ", 400)
}

func (o *GetServiceLevelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceLevelUnauthorized creates a GetServiceLevelUnauthorized with default headers values
func NewGetServiceLevelUnauthorized() *GetServiceLevelUnauthorized {
	return &GetServiceLevelUnauthorized{}
}

/*GetServiceLevelUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetServiceLevelUnauthorized struct {
}

func (o *GetServiceLevelUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelUnauthorized ", 401)
}

func (o *GetServiceLevelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceLevelForbidden creates a GetServiceLevelForbidden with default headers values
func NewGetServiceLevelForbidden() *GetServiceLevelForbidden {
	return &GetServiceLevelForbidden{}
}

/*GetServiceLevelForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetServiceLevelForbidden struct {
}

func (o *GetServiceLevelForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelForbidden ", 403)
}

func (o *GetServiceLevelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceLevelNotFound creates a GetServiceLevelNotFound with default headers values
func NewGetServiceLevelNotFound() *GetServiceLevelNotFound {
	return &GetServiceLevelNotFound{}
}

/*GetServiceLevelNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetServiceLevelNotFound struct {
}

func (o *GetServiceLevelNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelNotFound ", 404)
}

func (o *GetServiceLevelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceLevelMethodNotAllowed creates a GetServiceLevelMethodNotAllowed with default headers values
func NewGetServiceLevelMethodNotAllowed() *GetServiceLevelMethodNotAllowed {
	return &GetServiceLevelMethodNotAllowed{}
}

/*GetServiceLevelMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetServiceLevelMethodNotAllowed struct {
}

func (o *GetServiceLevelMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelMethodNotAllowed ", 405)
}

func (o *GetServiceLevelMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceLevelGone creates a GetServiceLevelGone with default headers values
func NewGetServiceLevelGone() *GetServiceLevelGone {
	return &GetServiceLevelGone{}
}

/*GetServiceLevelGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetServiceLevelGone struct {
}

func (o *GetServiceLevelGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelGone ", 410)
}

func (o *GetServiceLevelGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceLevelInternalServerError creates a GetServiceLevelInternalServerError with default headers values
func NewGetServiceLevelInternalServerError() *GetServiceLevelInternalServerError {
	return &GetServiceLevelInternalServerError{}
}

/*GetServiceLevelInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetServiceLevelInternalServerError struct {
}

func (o *GetServiceLevelInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelInternalServerError ", 500)
}

func (o *GetServiceLevelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceLevelServiceUnavailable creates a GetServiceLevelServiceUnavailable with default headers values
func NewGetServiceLevelServiceUnavailable() *GetServiceLevelServiceUnavailable {
	return &GetServiceLevelServiceUnavailable{}
}

/*GetServiceLevelServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetServiceLevelServiceUnavailable struct {
}

func (o *GetServiceLevelServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_level/][%d] getServiceLevelServiceUnavailable ", 503)
}

func (o *GetServiceLevelServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetServiceLevelOKBodyItems0 get service level o k body items0
swagger:model GetServiceLevelOKBodyItems0
*/
type GetServiceLevelOKBodyItems0 struct {

	// id
	ID interface{} `json:"id,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this get service level o k body items0
func (o *GetServiceLevelOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetServiceLevelOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetServiceLevelOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetServiceLevelOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
