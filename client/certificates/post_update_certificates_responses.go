// Code generated by go-swagger; DO NOT EDIT.

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostUpdateCertificatesReader is a Reader for the PostUpdateCertificates structure.
type PostUpdateCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUpdateCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUpdateCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUpdateCertificatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUpdateCertificatesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUpdateCertificatesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUpdateCertificatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostUpdateCertificatesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostUpdateCertificatesGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUpdateCertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUpdateCertificatesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUpdateCertificatesOK creates a PostUpdateCertificatesOK with default headers values
func NewPostUpdateCertificatesOK() *PostUpdateCertificatesOK {
	return &PostUpdateCertificatesOK{}
}

/*PostUpdateCertificatesOK handles this case with default header values.

The above command returns results like this:
*/
type PostUpdateCertificatesOK struct {
	Payload *PostUpdateCertificatesOKBody
}

func (o *PostUpdateCertificatesOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesOK  %+v", 200, o.Payload)
}

func (o *PostUpdateCertificatesOK) GetPayload() *PostUpdateCertificatesOKBody {
	return o.Payload
}

func (o *PostUpdateCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostUpdateCertificatesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUpdateCertificatesBadRequest creates a PostUpdateCertificatesBadRequest with default headers values
func NewPostUpdateCertificatesBadRequest() *PostUpdateCertificatesBadRequest {
	return &PostUpdateCertificatesBadRequest{}
}

/*PostUpdateCertificatesBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostUpdateCertificatesBadRequest struct {
}

func (o *PostUpdateCertificatesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesBadRequest ", 400)
}

func (o *PostUpdateCertificatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCertificatesUnauthorized creates a PostUpdateCertificatesUnauthorized with default headers values
func NewPostUpdateCertificatesUnauthorized() *PostUpdateCertificatesUnauthorized {
	return &PostUpdateCertificatesUnauthorized{}
}

/*PostUpdateCertificatesUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostUpdateCertificatesUnauthorized struct {
}

func (o *PostUpdateCertificatesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesUnauthorized ", 401)
}

func (o *PostUpdateCertificatesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCertificatesForbidden creates a PostUpdateCertificatesForbidden with default headers values
func NewPostUpdateCertificatesForbidden() *PostUpdateCertificatesForbidden {
	return &PostUpdateCertificatesForbidden{}
}

/*PostUpdateCertificatesForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostUpdateCertificatesForbidden struct {
}

func (o *PostUpdateCertificatesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesForbidden ", 403)
}

func (o *PostUpdateCertificatesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCertificatesNotFound creates a PostUpdateCertificatesNotFound with default headers values
func NewPostUpdateCertificatesNotFound() *PostUpdateCertificatesNotFound {
	return &PostUpdateCertificatesNotFound{}
}

/*PostUpdateCertificatesNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostUpdateCertificatesNotFound struct {
}

func (o *PostUpdateCertificatesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesNotFound ", 404)
}

func (o *PostUpdateCertificatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCertificatesMethodNotAllowed creates a PostUpdateCertificatesMethodNotAllowed with default headers values
func NewPostUpdateCertificatesMethodNotAllowed() *PostUpdateCertificatesMethodNotAllowed {
	return &PostUpdateCertificatesMethodNotAllowed{}
}

/*PostUpdateCertificatesMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostUpdateCertificatesMethodNotAllowed struct {
}

func (o *PostUpdateCertificatesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesMethodNotAllowed ", 405)
}

func (o *PostUpdateCertificatesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCertificatesGone creates a PostUpdateCertificatesGone with default headers values
func NewPostUpdateCertificatesGone() *PostUpdateCertificatesGone {
	return &PostUpdateCertificatesGone{}
}

/*PostUpdateCertificatesGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostUpdateCertificatesGone struct {
}

func (o *PostUpdateCertificatesGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesGone ", 410)
}

func (o *PostUpdateCertificatesGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCertificatesInternalServerError creates a PostUpdateCertificatesInternalServerError with default headers values
func NewPostUpdateCertificatesInternalServerError() *PostUpdateCertificatesInternalServerError {
	return &PostUpdateCertificatesInternalServerError{}
}

/*PostUpdateCertificatesInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostUpdateCertificatesInternalServerError struct {
}

func (o *PostUpdateCertificatesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesInternalServerError ", 500)
}

func (o *PostUpdateCertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCertificatesServiceUnavailable creates a PostUpdateCertificatesServiceUnavailable with default headers values
func NewPostUpdateCertificatesServiceUnavailable() *PostUpdateCertificatesServiceUnavailable {
	return &PostUpdateCertificatesServiceUnavailable{}
}

/*PostUpdateCertificatesServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostUpdateCertificatesServiceUnavailable struct {
}

func (o *PostUpdateCertificatesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/certificates/][%d] postUpdateCertificatesServiceUnavailable ", 503)
}

func (o *PostUpdateCertificatesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostUpdateCertificatesOKBody post update certificates o k body
swagger:model PostUpdateCertificatesOKBody
*/
type PostUpdateCertificatesOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post update certificates o k body
func (o *PostUpdateCertificatesOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUpdateCertificatesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUpdateCertificatesOKBody) UnmarshalBinary(b []byte) error {
	var res PostUpdateCertificatesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
