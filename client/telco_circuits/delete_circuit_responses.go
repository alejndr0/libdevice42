// Code generated by go-swagger; DO NOT EDIT.

package telco_circuits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteCircuitReader is a Reader for the DeleteCircuit structure.
type DeleteCircuitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCircuitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCircuitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCircuitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCircuitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCircuitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCircuitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteCircuitMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewDeleteCircuitGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCircuitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteCircuitServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteCircuitOK creates a DeleteCircuitOK with default headers values
func NewDeleteCircuitOK() *DeleteCircuitOK {
	return &DeleteCircuitOK{}
}

/*DeleteCircuitOK handles this case with default header values.

The above command returns results like this:
*/
type DeleteCircuitOK struct {
	Payload *DeleteCircuitOKBody
}

func (o *DeleteCircuitOK) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitOK  %+v", 200, o.Payload)
}

func (o *DeleteCircuitOK) GetPayload() *DeleteCircuitOKBody {
	return o.Payload
}

func (o *DeleteCircuitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteCircuitOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCircuitBadRequest creates a DeleteCircuitBadRequest with default headers values
func NewDeleteCircuitBadRequest() *DeleteCircuitBadRequest {
	return &DeleteCircuitBadRequest{}
}

/*DeleteCircuitBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type DeleteCircuitBadRequest struct {
}

func (o *DeleteCircuitBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitBadRequest ", 400)
}

func (o *DeleteCircuitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCircuitUnauthorized creates a DeleteCircuitUnauthorized with default headers values
func NewDeleteCircuitUnauthorized() *DeleteCircuitUnauthorized {
	return &DeleteCircuitUnauthorized{}
}

/*DeleteCircuitUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type DeleteCircuitUnauthorized struct {
}

func (o *DeleteCircuitUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitUnauthorized ", 401)
}

func (o *DeleteCircuitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCircuitForbidden creates a DeleteCircuitForbidden with default headers values
func NewDeleteCircuitForbidden() *DeleteCircuitForbidden {
	return &DeleteCircuitForbidden{}
}

/*DeleteCircuitForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type DeleteCircuitForbidden struct {
}

func (o *DeleteCircuitForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitForbidden ", 403)
}

func (o *DeleteCircuitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCircuitNotFound creates a DeleteCircuitNotFound with default headers values
func NewDeleteCircuitNotFound() *DeleteCircuitNotFound {
	return &DeleteCircuitNotFound{}
}

/*DeleteCircuitNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type DeleteCircuitNotFound struct {
}

func (o *DeleteCircuitNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitNotFound ", 404)
}

func (o *DeleteCircuitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCircuitMethodNotAllowed creates a DeleteCircuitMethodNotAllowed with default headers values
func NewDeleteCircuitMethodNotAllowed() *DeleteCircuitMethodNotAllowed {
	return &DeleteCircuitMethodNotAllowed{}
}

/*DeleteCircuitMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type DeleteCircuitMethodNotAllowed struct {
}

func (o *DeleteCircuitMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitMethodNotAllowed ", 405)
}

func (o *DeleteCircuitMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCircuitGone creates a DeleteCircuitGone with default headers values
func NewDeleteCircuitGone() *DeleteCircuitGone {
	return &DeleteCircuitGone{}
}

/*DeleteCircuitGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type DeleteCircuitGone struct {
}

func (o *DeleteCircuitGone) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitGone ", 410)
}

func (o *DeleteCircuitGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCircuitInternalServerError creates a DeleteCircuitInternalServerError with default headers values
func NewDeleteCircuitInternalServerError() *DeleteCircuitInternalServerError {
	return &DeleteCircuitInternalServerError{}
}

/*DeleteCircuitInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type DeleteCircuitInternalServerError struct {
}

func (o *DeleteCircuitInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitInternalServerError ", 500)
}

func (o *DeleteCircuitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCircuitServiceUnavailable creates a DeleteCircuitServiceUnavailable with default headers values
func NewDeleteCircuitServiceUnavailable() *DeleteCircuitServiceUnavailable {
	return &DeleteCircuitServiceUnavailable{}
}

/*DeleteCircuitServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type DeleteCircuitServiceUnavailable struct {
}

func (o *DeleteCircuitServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/1.0/circuits/{id}/][%d] deleteCircuitServiceUnavailable ", 503)
}

func (o *DeleteCircuitServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DeleteCircuitOKBody delete circuit o k body
swagger:model DeleteCircuitOKBody
*/
type DeleteCircuitOKBody struct {

	// deleted
	Deleted interface{} `json:"deleted,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`
}

// Validate validates this delete circuit o k body
func (o *DeleteCircuitOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCircuitOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCircuitOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteCircuitOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
