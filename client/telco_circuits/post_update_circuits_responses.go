// Code generated by go-swagger; DO NOT EDIT.

package telco_circuits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostUpdateCircuitsReader is a Reader for the PostUpdateCircuits structure.
type PostUpdateCircuitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUpdateCircuitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUpdateCircuitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUpdateCircuitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUpdateCircuitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUpdateCircuitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUpdateCircuitsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostUpdateCircuitsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostUpdateCircuitsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUpdateCircuitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUpdateCircuitsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUpdateCircuitsOK creates a PostUpdateCircuitsOK with default headers values
func NewPostUpdateCircuitsOK() *PostUpdateCircuitsOK {
	return &PostUpdateCircuitsOK{}
}

/*PostUpdateCircuitsOK handles this case with default header values.

The above command returns results like this:
*/
type PostUpdateCircuitsOK struct {
	Payload *PostUpdateCircuitsOKBody
}

func (o *PostUpdateCircuitsOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsOK  %+v", 200, o.Payload)
}

func (o *PostUpdateCircuitsOK) GetPayload() *PostUpdateCircuitsOKBody {
	return o.Payload
}

func (o *PostUpdateCircuitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostUpdateCircuitsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUpdateCircuitsBadRequest creates a PostUpdateCircuitsBadRequest with default headers values
func NewPostUpdateCircuitsBadRequest() *PostUpdateCircuitsBadRequest {
	return &PostUpdateCircuitsBadRequest{}
}

/*PostUpdateCircuitsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostUpdateCircuitsBadRequest struct {
}

func (o *PostUpdateCircuitsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsBadRequest ", 400)
}

func (o *PostUpdateCircuitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCircuitsUnauthorized creates a PostUpdateCircuitsUnauthorized with default headers values
func NewPostUpdateCircuitsUnauthorized() *PostUpdateCircuitsUnauthorized {
	return &PostUpdateCircuitsUnauthorized{}
}

/*PostUpdateCircuitsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostUpdateCircuitsUnauthorized struct {
}

func (o *PostUpdateCircuitsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsUnauthorized ", 401)
}

func (o *PostUpdateCircuitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCircuitsForbidden creates a PostUpdateCircuitsForbidden with default headers values
func NewPostUpdateCircuitsForbidden() *PostUpdateCircuitsForbidden {
	return &PostUpdateCircuitsForbidden{}
}

/*PostUpdateCircuitsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostUpdateCircuitsForbidden struct {
}

func (o *PostUpdateCircuitsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsForbidden ", 403)
}

func (o *PostUpdateCircuitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCircuitsNotFound creates a PostUpdateCircuitsNotFound with default headers values
func NewPostUpdateCircuitsNotFound() *PostUpdateCircuitsNotFound {
	return &PostUpdateCircuitsNotFound{}
}

/*PostUpdateCircuitsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostUpdateCircuitsNotFound struct {
}

func (o *PostUpdateCircuitsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsNotFound ", 404)
}

func (o *PostUpdateCircuitsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCircuitsMethodNotAllowed creates a PostUpdateCircuitsMethodNotAllowed with default headers values
func NewPostUpdateCircuitsMethodNotAllowed() *PostUpdateCircuitsMethodNotAllowed {
	return &PostUpdateCircuitsMethodNotAllowed{}
}

/*PostUpdateCircuitsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostUpdateCircuitsMethodNotAllowed struct {
}

func (o *PostUpdateCircuitsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsMethodNotAllowed ", 405)
}

func (o *PostUpdateCircuitsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCircuitsGone creates a PostUpdateCircuitsGone with default headers values
func NewPostUpdateCircuitsGone() *PostUpdateCircuitsGone {
	return &PostUpdateCircuitsGone{}
}

/*PostUpdateCircuitsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostUpdateCircuitsGone struct {
}

func (o *PostUpdateCircuitsGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsGone ", 410)
}

func (o *PostUpdateCircuitsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCircuitsInternalServerError creates a PostUpdateCircuitsInternalServerError with default headers values
func NewPostUpdateCircuitsInternalServerError() *PostUpdateCircuitsInternalServerError {
	return &PostUpdateCircuitsInternalServerError{}
}

/*PostUpdateCircuitsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostUpdateCircuitsInternalServerError struct {
}

func (o *PostUpdateCircuitsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsInternalServerError ", 500)
}

func (o *PostUpdateCircuitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUpdateCircuitsServiceUnavailable creates a PostUpdateCircuitsServiceUnavailable with default headers values
func NewPostUpdateCircuitsServiceUnavailable() *PostUpdateCircuitsServiceUnavailable {
	return &PostUpdateCircuitsServiceUnavailable{}
}

/*PostUpdateCircuitsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostUpdateCircuitsServiceUnavailable struct {
}

func (o *PostUpdateCircuitsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/circuits/][%d] postUpdateCircuitsServiceUnavailable ", 503)
}

func (o *PostUpdateCircuitsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostUpdateCircuitsOKBody post update circuits o k body
swagger:model PostUpdateCircuitsOKBody
*/
type PostUpdateCircuitsOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg interface{} `json:"msg,omitempty"`
}

// Validate validates this post update circuits o k body
func (o *PostUpdateCircuitsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUpdateCircuitsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUpdateCircuitsOKBody) UnmarshalBinary(b []byte) error {
	var res PostUpdateCircuitsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
