// Code generated by go-swagger; DO NOT EDIT.

package reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetReportsReader is a Reader for the GetReports structure.
type GetReportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReportsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetReportsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReportsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReportsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetReportsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetReportsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetReportsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetReportsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetReportsOK creates a GetReportsOK with default headers values
func NewGetReportsOK() *GetReportsOK {
	return &GetReportsOK{}
}

/*GetReportsOK handles this case with default header values.

The above command returns results like this:
*/
type GetReportsOK struct {
	Payload *GetReportsOKBody
}

func (o *GetReportsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsOK  %+v", 200, o.Payload)
}

func (o *GetReportsOK) GetPayload() *GetReportsOKBody {
	return o.Payload
}

func (o *GetReportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReportsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportsBadRequest creates a GetReportsBadRequest with default headers values
func NewGetReportsBadRequest() *GetReportsBadRequest {
	return &GetReportsBadRequest{}
}

/*GetReportsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetReportsBadRequest struct {
}

func (o *GetReportsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsBadRequest ", 400)
}

func (o *GetReportsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportsUnauthorized creates a GetReportsUnauthorized with default headers values
func NewGetReportsUnauthorized() *GetReportsUnauthorized {
	return &GetReportsUnauthorized{}
}

/*GetReportsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetReportsUnauthorized struct {
}

func (o *GetReportsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsUnauthorized ", 401)
}

func (o *GetReportsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportsForbidden creates a GetReportsForbidden with default headers values
func NewGetReportsForbidden() *GetReportsForbidden {
	return &GetReportsForbidden{}
}

/*GetReportsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetReportsForbidden struct {
}

func (o *GetReportsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsForbidden ", 403)
}

func (o *GetReportsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportsNotFound creates a GetReportsNotFound with default headers values
func NewGetReportsNotFound() *GetReportsNotFound {
	return &GetReportsNotFound{}
}

/*GetReportsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetReportsNotFound struct {
}

func (o *GetReportsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsNotFound ", 404)
}

func (o *GetReportsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportsMethodNotAllowed creates a GetReportsMethodNotAllowed with default headers values
func NewGetReportsMethodNotAllowed() *GetReportsMethodNotAllowed {
	return &GetReportsMethodNotAllowed{}
}

/*GetReportsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetReportsMethodNotAllowed struct {
}

func (o *GetReportsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsMethodNotAllowed ", 405)
}

func (o *GetReportsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportsGone creates a GetReportsGone with default headers values
func NewGetReportsGone() *GetReportsGone {
	return &GetReportsGone{}
}

/*GetReportsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetReportsGone struct {
}

func (o *GetReportsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsGone ", 410)
}

func (o *GetReportsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportsInternalServerError creates a GetReportsInternalServerError with default headers values
func NewGetReportsInternalServerError() *GetReportsInternalServerError {
	return &GetReportsInternalServerError{}
}

/*GetReportsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetReportsInternalServerError struct {
}

func (o *GetReportsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsInternalServerError ", 500)
}

func (o *GetReportsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportsServiceUnavailable creates a GetReportsServiceUnavailable with default headers values
func NewGetReportsServiceUnavailable() *GetReportsServiceUnavailable {
	return &GetReportsServiceUnavailable{}
}

/*GetReportsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetReportsServiceUnavailable struct {
}

func (o *GetReportsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/reports/{id}/][%d] getReportsServiceUnavailable ", 503)
}

func (o *GetReportsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetReportsOKBody get reports o k body
swagger:model GetReportsOKBody
*/
type GetReportsOKBody struct {

	// file url
	FileURL interface{} `json:"file_url,omitempty"`
}

// Validate validates this get reports o k body
func (o *GetReportsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReportsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReportsOKBody) UnmarshalBinary(b []byte) error {
	var res GetReportsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
