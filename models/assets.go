// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Assets assets
//
// swagger:model Assets
type Assets struct {

	// asset contracts
	AssetContracts interface{} `json:"asset_contracts,omitempty"`

	// asset id
	AssetID interface{} `json:"asset_id,omitempty"`

	// asset no
	AssetNo interface{} `json:"asset_no,omitempty"`

	// asset purchases
	AssetPurchases interface{} `json:"asset_purchases,omitempty"`

	// building
	Building interface{} `json:"building,omitempty"`

	// custom fields
	CustomFields interface{} `json:"custom_fields,omitempty"`

	// depth
	Depth interface{} `json:"depth,omitempty"`

	// imagefile id
	ImagefileID interface{} `json:"imagefile_id,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// orientation
	Orientation interface{} `json:"orientation,omitempty"`

	// patch panel model id
	PatchPanelModelID interface{} `json:"patch_panel_model_id,omitempty"`

	// rack
	Rack interface{} `json:"rack,omitempty"`

	// rack id
	RackID interface{} `json:"rack_id,omitempty"`

	// room
	Room interface{} `json:"room,omitempty"`

	// row
	Row interface{} `json:"row,omitempty"`

	// serial no
	SerialNo interface{} `json:"serial_no,omitempty"`

	// service level
	ServiceLevel interface{} `json:"service_level,omitempty"`

	// size
	Size interface{} `json:"size,omitempty"`

	// start at
	StartAt interface{} `json:"start_at,omitempty"`

	// type
	Type interface{} `json:"type,omitempty"`

	// vendor
	Vendor interface{} `json:"vendor,omitempty"`

	// vendor id
	VendorID interface{} `json:"vendor_id,omitempty"`

	// where
	Where interface{} `json:"where,omitempty"`
}

// Validate validates this assets
func (m *Assets) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Assets) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Assets) UnmarshalBinary(b []byte) error {
	var res Assets
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
