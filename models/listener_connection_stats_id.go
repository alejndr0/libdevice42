// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListenerConnectionStatsID listener connection stats id
//
// swagger:model Listener_connection_stats_id
type ListenerConnectionStatsID struct {

	// service ports
	ServicePorts *ListenerConnectionStatsIDServicePorts `json:"service_ports,omitempty"`
}

// Validate validates this listener connection stats id
func (m *ListenerConnectionStatsID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServicePorts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListenerConnectionStatsID) validateServicePorts(formats strfmt.Registry) error {

	if swag.IsZero(m.ServicePorts) { // not required
		return nil
	}

	if m.ServicePorts != nil {
		if err := m.ServicePorts.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("service_ports")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ListenerConnectionStatsID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListenerConnectionStatsID) UnmarshalBinary(b []byte) error {
	var res ListenerConnectionStatsID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ListenerConnectionStatsIDServicePorts listener connection stats ID service ports
//
// swagger:model ListenerConnectionStatsIDServicePorts
type ListenerConnectionStatsIDServicePorts struct {

	// appcomp ids
	AppcompIds string `json:"appcomp_ids,omitempty"`

	// client ips
	ClientIps string `json:"client_ips,omitempty"`

	// client ips ids
	ClientIpsIds string `json:"client_ips_ids,omitempty"`

	// client stats
	ClientStats []string `json:"client_stats"`

	// id
	ID int64 `json:"id,omitempty"`

	// listener device id
	ListenerDeviceID int64 `json:"listener_device_id,omitempty"`

	// listener device name
	ListenerDeviceName string `json:"listener_device_name,omitempty"`

	// listener service
	ListenerService string `json:"listener_service,omitempty"`

	// listener service id
	ListenerServiceID int64 `json:"listener_service_id,omitempty"`

	// listening ip
	ListeningIP string `json:"listening_ip,omitempty"`

	// port
	Port int64 `json:"port,omitempty"`

	// protocol
	Protocol string `json:"protocol,omitempty"`
}

// Validate validates this listener connection stats ID service ports
func (m *ListenerConnectionStatsIDServicePorts) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ListenerConnectionStatsIDServicePorts) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListenerConnectionStatsIDServicePorts) UnmarshalBinary(b []byte) error {
	var res ListenerConnectionStatsIDServicePorts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
