// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PduModels pdu models
//
// swagger:model Pdu_models
type PduModels struct {

	// back image
	BackImage *PduModelsBackImage `json:"back_image,omitempty"`

	// depth
	Depth interface{} `json:"depth,omitempty"`

	// description
	Description interface{} `json:"description,omitempty"`

	// front image
	FrontImage *PduModelsFrontImage `json:"front_image,omitempty"`

	// manufacturer
	Manufacturer interface{} `json:"manufacturer,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// pdu model id
	PduModelID interface{} `json:"pdu_model_id,omitempty"`

	// port count
	PortCount interface{} `json:"port_count,omitempty"`

	// ports in pdu model
	PortsInPduModel []*PduModelsPortsInPduModelItems0 `json:"ports in pdu model"`

	// sequential numbering for ports
	SequentialNumberingForPorts interface{} `json:"sequential_numbering_for_ports,omitempty"`

	// size
	Size interface{} `json:"size,omitempty"`

	// type
	Type interface{} `json:"type,omitempty"`

	// width ratio
	WidthRatio interface{} `json:"width_ratio,omitempty"`
}

// Validate validates this pdu models
func (m *PduModels) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBackImage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFrontImage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePortsInPduModel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PduModels) validateBackImage(formats strfmt.Registry) error {

	if swag.IsZero(m.BackImage) { // not required
		return nil
	}

	if m.BackImage != nil {
		if err := m.BackImage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("back_image")
			}
			return err
		}
	}

	return nil
}

func (m *PduModels) validateFrontImage(formats strfmt.Registry) error {

	if swag.IsZero(m.FrontImage) { // not required
		return nil
	}

	if m.FrontImage != nil {
		if err := m.FrontImage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("front_image")
			}
			return err
		}
	}

	return nil
}

func (m *PduModels) validatePortsInPduModel(formats strfmt.Registry) error {

	if swag.IsZero(m.PortsInPduModel) { // not required
		return nil
	}

	for i := 0; i < len(m.PortsInPduModel); i++ {
		if swag.IsZero(m.PortsInPduModel[i]) { // not required
			continue
		}

		if m.PortsInPduModel[i] != nil {
			if err := m.PortsInPduModel[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ports in pdu model" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PduModels) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PduModels) UnmarshalBinary(b []byte) error {
	var res PduModels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PduModelsBackImage pdu models back image
//
// swagger:model PduModelsBackImage
type PduModelsBackImage struct {

	// id
	ID interface{} `json:"id,omitempty"`

	// imgfile
	Imgfile interface{} `json:"imgfile,omitempty"`
}

// Validate validates this pdu models back image
func (m *PduModelsBackImage) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PduModelsBackImage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PduModelsBackImage) UnmarshalBinary(b []byte) error {
	var res PduModelsBackImage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PduModelsFrontImage pdu models front image
//
// swagger:model PduModelsFrontImage
type PduModelsFrontImage struct {

	// id
	ID interface{} `json:"id,omitempty"`

	// imgfile
	Imgfile interface{} `json:"imgfile,omitempty"`
}

// Validate validates this pdu models front image
func (m *PduModelsFrontImage) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PduModelsFrontImage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PduModelsFrontImage) UnmarshalBinary(b []byte) error {
	var res PduModelsFrontImage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PduModelsPortsInPduModelItems0 pdu models ports in pdu model items0
//
// swagger:model PduModelsPortsInPduModelItems0
type PduModelsPortsInPduModelItems0 struct {

	// pdu port count
	PduPortCount interface{} `json:"pdu_port_count,omitempty"`

	// pdu port type
	PduPortType interface{} `json:"pdu_port_type,omitempty"`
}

// Validate validates this pdu models ports in pdu model items0
func (m *PduModelsPortsInPduModelItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PduModelsPortsInPduModelItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PduModelsPortsInPduModelItems0) UnmarshalBinary(b []byte) error {
	var res PduModelsPortsInPduModelItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
