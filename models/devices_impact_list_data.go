// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DevicesImpactListData devices impact list data
//
// swagger:model devicesImpactListData
type DevicesImpactListData struct {

	// children
	Children []*DevicesImpactListDataChildrenItems0 `json:"children"`

	// duplicate
	Duplicate interface{} `json:"duplicate,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this devices impact list data
func (m *DevicesImpactListData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChildren(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DevicesImpactListData) validateChildren(formats strfmt.Registry) error {

	if swag.IsZero(m.Children) { // not required
		return nil
	}

	for i := 0; i < len(m.Children); i++ {
		if swag.IsZero(m.Children[i]) { // not required
			continue
		}

		if m.Children[i] != nil {
			if err := m.Children[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("children" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DevicesImpactListData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DevicesImpactListData) UnmarshalBinary(b []byte) error {
	var res DevicesImpactListData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DevicesImpactListDataChildrenItems0 devices impact list data children items0
//
// swagger:model DevicesImpactListDataChildrenItems0
type DevicesImpactListDataChildrenItems0 struct {

	// children
	Children []*DevicesImpactListDataChildrenItems0ChildrenItems0 `json:"children"`

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this devices impact list data children items0
func (m *DevicesImpactListDataChildrenItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChildren(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DevicesImpactListDataChildrenItems0) validateChildren(formats strfmt.Registry) error {

	if swag.IsZero(m.Children) { // not required
		return nil
	}

	for i := 0; i < len(m.Children); i++ {
		if swag.IsZero(m.Children[i]) { // not required
			continue
		}

		if m.Children[i] != nil {
			if err := m.Children[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("children" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DevicesImpactListDataChildrenItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DevicesImpactListDataChildrenItems0) UnmarshalBinary(b []byte) error {
	var res DevicesImpactListDataChildrenItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DevicesImpactListDataChildrenItems0ChildrenItems0 devices impact list data children items0 children items0
//
// swagger:model DevicesImpactListDataChildrenItems0ChildrenItems0
type DevicesImpactListDataChildrenItems0ChildrenItems0 struct {

	// children
	Children []*DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0 `json:"children"`

	// duplicate
	Duplicate interface{} `json:"duplicate,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this devices impact list data children items0 children items0
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChildren(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DevicesImpactListDataChildrenItems0ChildrenItems0) validateChildren(formats strfmt.Registry) error {

	if swag.IsZero(m.Children) { // not required
		return nil
	}

	for i := 0; i < len(m.Children); i++ {
		if swag.IsZero(m.Children[i]) { // not required
			continue
		}

		if m.Children[i] != nil {
			if err := m.Children[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("children" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0) UnmarshalBinary(b []byte) error {
	var res DevicesImpactListDataChildrenItems0ChildrenItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0 devices impact list data children items0 children items0 children items0
//
// swagger:model DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0
type DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0 struct {

	// children
	Children []*DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0ChildrenItems0 `json:"children"`

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this devices impact list data children items0 children items0 children items0
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChildren(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0) validateChildren(formats strfmt.Registry) error {

	if swag.IsZero(m.Children) { // not required
		return nil
	}

	for i := 0; i < len(m.Children); i++ {
		if swag.IsZero(m.Children[i]) { // not required
			continue
		}

		if m.Children[i] != nil {
			if err := m.Children[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("children" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0) UnmarshalBinary(b []byte) error {
	var res DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0ChildrenItems0 devices impact list data children items0 children items0 children items0 children items0
//
// swagger:model DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0ChildrenItems0
type DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0ChildrenItems0 struct {

	// duplicate
	Duplicate interface{} `json:"duplicate,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`
}

// Validate validates this devices impact list data children items0 children items0 children items0 children items0
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0ChildrenItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0ChildrenItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0ChildrenItems0) UnmarshalBinary(b []byte) error {
	var res DevicesImpactListDataChildrenItems0ChildrenItems0ChildrenItems0ChildrenItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
