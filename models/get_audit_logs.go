// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAuditLogs get audit logs
//
// swagger:model getAuditLogs
type GetAuditLogs struct {

	// action
	Action interface{} `json:"action,omitempty"`

	// action time
	ActionTime interface{} `json:"action_time,omitempty"`

	// api data
	APIData interface{} `json:"api_data,omitempty"`

	// changed fields
	ChangedFields *GetAuditLogsChangedFields `json:"changed_fields,omitempty"`

	// from
	From interface{} `json:"from,omitempty"`

	// object fields
	ObjectFields *GetAuditLogsObjectFields `json:"object_fields,omitempty"`

	// object id
	ObjectID interface{} `json:"object_id,omitempty"`

	// object type
	ObjectType interface{} `json:"object_type,omitempty"`

	// url
	URL interface{} `json:"url,omitempty"`

	// user
	User interface{} `json:"user,omitempty"`
}

// Validate validates this get audit logs
func (m *GetAuditLogs) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChangedFields(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectFields(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetAuditLogs) validateChangedFields(formats strfmt.Registry) error {

	if swag.IsZero(m.ChangedFields) { // not required
		return nil
	}

	if m.ChangedFields != nil {
		if err := m.ChangedFields.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("changed_fields")
			}
			return err
		}
	}

	return nil
}

func (m *GetAuditLogs) validateObjectFields(formats strfmt.Registry) error {

	if swag.IsZero(m.ObjectFields) { // not required
		return nil
	}

	if m.ObjectFields != nil {
		if err := m.ObjectFields.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object_fields")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetAuditLogs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetAuditLogs) UnmarshalBinary(b []byte) error {
	var res GetAuditLogs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetAuditLogsChangedFields get audit logs changed fields
//
// swagger:model GetAuditLogsChangedFields
type GetAuditLogsChangedFields struct {

	// switch vlan id
	SwitchVlanID interface{} `json:"switch_vlan_id,omitempty"`
}

// Validate validates this get audit logs changed fields
func (m *GetAuditLogsChangedFields) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetAuditLogsChangedFields) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetAuditLogsChangedFields) UnmarshalBinary(b []byte) error {
	var res GetAuditLogsChangedFields
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetAuditLogsObjectFields get audit logs object fields
//
// swagger:model GetAuditLogsObjectFields
type GetAuditLogsObjectFields struct {

	// device id
	DeviceID interface{} `json:"device_id,omitempty"`

	// first added
	FirstAdded interface{} `json:"first_added,omitempty"`

	// id
	ID interface{} `json:"id,omitempty"`

	// mac address
	MacAddress interface{} `json:"mac_address,omitempty"`

	// port id
	PortID interface{} `json:"port_id,omitempty"`

	// port name
	PortName interface{} `json:"port_name,omitempty"`

	// switch vlan id
	SwitchVlanID interface{} `json:"switch_vlan_id,omitempty"`
}

// Validate validates this get audit logs object fields
func (m *GetAuditLogsObjectFields) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetAuditLogsObjectFields) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetAuditLogsObjectFields) UnmarshalBinary(b []byte) error {
	var res GetAuditLogsObjectFields
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
