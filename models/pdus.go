// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Pdus pdus
//
// swagger:model Pdus
type Pdus struct {

	// building
	Building interface{} `json:"building,omitempty"`

	// building id
	BuildingID interface{} `json:"building_id,omitempty"`

	// category
	Category interface{} `json:"category,omitempty"`

	// device mapping
	DeviceMapping interface{} `json:"device mapping,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// pdu id
	PduID interface{} `json:"pdu_id,omitempty"`

	// pdu model
	PduModel *PdusPduModel `json:"pdu_model,omitempty"`

	// rack
	Rack interface{} `json:"rack,omitempty"`

	// rack id
	RackID interface{} `json:"rack_id,omitempty"`

	// room
	Room interface{} `json:"room,omitempty"`

	// room id
	RoomID interface{} `json:"room_id,omitempty"`

	// type
	Type interface{} `json:"type,omitempty"`
}

// Validate validates this pdus
func (m *Pdus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePduModel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Pdus) validatePduModel(formats strfmt.Registry) error {

	if swag.IsZero(m.PduModel) { // not required
		return nil
	}

	if m.PduModel != nil {
		if err := m.PduModel.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pdu_model")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Pdus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Pdus) UnmarshalBinary(b []byte) error {
	var res Pdus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PdusPduModel pdus pdu model
//
// swagger:model PdusPduModel
type PdusPduModel struct {

	// back image
	BackImage interface{} `json:"back_image,omitempty"`

	// depth
	Depth interface{} `json:"depth,omitempty"`

	// description
	Description interface{} `json:"description,omitempty"`

	// front image
	FrontImage *PdusPduModelFrontImage `json:"front_image,omitempty"`

	// manufacturer
	Manufacturer interface{} `json:"manufacturer,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// pdu model id
	PduModelID interface{} `json:"pdu_model_id,omitempty"`

	// port count
	PortCount interface{} `json:"port_count,omitempty"`

	// ports in pdu model
	PortsInPduModel []*PdusPduModelPortsInPduModelItems0 `json:"ports in pdu model"`

	// sequential numbering for ports
	SequentialNumberingForPorts interface{} `json:"sequential_numbering_for_ports,omitempty"`

	// size
	Size interface{} `json:"size,omitempty"`

	// type
	Type interface{} `json:"type,omitempty"`

	// width ratio
	WidthRatio interface{} `json:"width_ratio,omitempty"`
}

// Validate validates this pdus pdu model
func (m *PdusPduModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFrontImage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePortsInPduModel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PdusPduModel) validateFrontImage(formats strfmt.Registry) error {

	if swag.IsZero(m.FrontImage) { // not required
		return nil
	}

	if m.FrontImage != nil {
		if err := m.FrontImage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pdu_model" + "." + "front_image")
			}
			return err
		}
	}

	return nil
}

func (m *PdusPduModel) validatePortsInPduModel(formats strfmt.Registry) error {

	if swag.IsZero(m.PortsInPduModel) { // not required
		return nil
	}

	for i := 0; i < len(m.PortsInPduModel); i++ {
		if swag.IsZero(m.PortsInPduModel[i]) { // not required
			continue
		}

		if m.PortsInPduModel[i] != nil {
			if err := m.PortsInPduModel[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("pdu_model" + "." + "ports in pdu model" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PdusPduModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PdusPduModel) UnmarshalBinary(b []byte) error {
	var res PdusPduModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PdusPduModelFrontImage pdus pdu model front image
//
// swagger:model PdusPduModelFrontImage
type PdusPduModelFrontImage struct {

	// id
	ID interface{} `json:"id,omitempty"`

	// imgfile
	Imgfile interface{} `json:"imgfile,omitempty"`
}

// Validate validates this pdus pdu model front image
func (m *PdusPduModelFrontImage) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PdusPduModelFrontImage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PdusPduModelFrontImage) UnmarshalBinary(b []byte) error {
	var res PdusPduModelFrontImage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PdusPduModelPortsInPduModelItems0 pdus pdu model ports in pdu model items0
//
// swagger:model PdusPduModelPortsInPduModelItems0
type PdusPduModelPortsInPduModelItems0 struct {

	// pdu port count
	PduPortCount interface{} `json:"pdu_port_count,omitempty"`

	// pdu port type
	PduPortType interface{} `json:"pdu_port_type,omitempty"`
}

// Validate validates this pdus pdu model ports in pdu model items0
func (m *PdusPduModelPortsInPduModelItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PdusPduModelPortsInPduModelItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PdusPduModelPortsInPduModelItems0) UnmarshalBinary(b []byte) error {
	var res PdusPduModelPortsInPduModelItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
