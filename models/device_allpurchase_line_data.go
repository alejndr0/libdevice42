// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeviceAllpurchaseLineData device allpurchase line data
//
// swagger:model deviceAllpurchaseLineData
type DeviceAllpurchaseLineData struct {

	// line cancel policy
	LineCancelPolicy interface{} `json:"line_cancel_policy,omitempty"`

	// line contract type
	LineContractType interface{} `json:"line_contract_type,omitempty"`

	// line cost
	LineCost interface{} `json:"line_cost,omitempty"`

	// line cost center
	LineCostCenter interface{} `json:"line_cost_center,omitempty"`

	// line end date
	LineEndDate interface{} `json:"line_end_date,omitempty"`

	// line frequency
	LineFrequency interface{} `json:"line_frequency,omitempty"`

	// line item type
	LineItemType interface{} `json:"line_item_type,omitempty"`

	// line no
	LineNo interface{} `json:"line_no,omitempty"`

	// line notes
	LineNotes interface{} `json:"line_notes,omitempty"`

	// line quantity
	LineQuantity interface{} `json:"line_quantity,omitempty"`

	// line renew date
	LineRenewDate interface{} `json:"line_renew_date,omitempty"`

	// line start date
	LineStartDate interface{} `json:"line_start_date,omitempty"`

	// line type
	LineType interface{} `json:"line_type,omitempty"`

	// purchase id
	PurchaseID interface{} `json:"purchase_id,omitempty"`

	// purchase order no
	PurchaseOrderNo interface{} `json:"purchase_order_no,omitempty"`
}

// Validate validates this device allpurchase line data
func (m *DeviceAllpurchaseLineData) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeviceAllpurchaseLineData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceAllpurchaseLineData) UnmarshalBinary(b []byte) error {
	var res DeviceAllpurchaseLineData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
